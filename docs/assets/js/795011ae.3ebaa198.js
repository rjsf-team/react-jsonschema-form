"use strict";(self.webpackChunk_rjsf_docs=self.webpackChunk_rjsf_docs||[]).push([[9096],{4255:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Current (v6.0.0-beta.21)","banner":null,"badge":true,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Introduction","href":"/react-jsonschema-form/docs/","docId":"intro","unlisted":false},{"type":"link","label":"Quickstart","href":"/react-jsonschema-form/docs/quickstart","docId":"quickstart","unlisted":false},{"type":"category","label":"Advanced Customization","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Custom Templates","href":"/react-jsonschema-form/docs/advanced-customization/custom-templates","docId":"advanced-customization/custom-templates","unlisted":false},{"type":"link","label":"Custom Themes","href":"/react-jsonschema-form/docs/advanced-customization/custom-themes","docId":"advanced-customization/custom-themes","unlisted":false},{"type":"link","label":"Custom Widgets and Fields","href":"/react-jsonschema-form/docs/advanced-customization/custom-widgets-fields","docId":"advanced-customization/custom-widgets-fields","unlisted":false},{"type":"link","label":"Internals","href":"/react-jsonschema-form/docs/advanced-customization/internals","docId":"advanced-customization/internals","unlisted":false},{"type":"link","label":"Typescript Support","href":"/react-jsonschema-form/docs/advanced-customization/typescript","docId":"advanced-customization/typescript","unlisted":false}],"href":"/react-jsonschema-form/docs/advanced-customization/"},{"type":"category","label":"API Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"LayoutGridField","href":"/react-jsonschema-form/docs/api-reference/LayoutGridField","docId":"api-reference/LayoutGridField","unlisted":false},{"type":"link","label":"Dynamic uiSchema Examples","href":"/react-jsonschema-form/docs/api-reference/dynamic-ui-schema-examples","docId":"api-reference/dynamic-ui-schema-examples","unlisted":false},{"type":"link","label":"<Form /> Props","href":"/react-jsonschema-form/docs/api-reference/form-props","docId":"api-reference/form-props","unlisted":false},{"type":"category","label":"themes","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"antd","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AntD Customization","href":"/react-jsonschema-form/docs/api-reference/themes/antd/uiSchema","docId":"api-reference/themes/antd/uiSchema","unlisted":false}]},{"type":"category","label":"chakra-ui","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chakra-UI Customization","href":"/react-jsonschema-form/docs/api-reference/themes/chakra-ui/uiSchema","docId":"api-reference/themes/chakra-ui/uiSchema","unlisted":false}]},{"type":"category","label":"primereact","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"PrimeReact Customization","href":"/react-jsonschema-form/docs/api-reference/themes/primereact/uiSchema","docId":"api-reference/themes/primereact/uiSchema","unlisted":false}]},{"type":"category","label":"semantic-ui","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Semantic-UI Customization","href":"/react-jsonschema-form/docs/api-reference/themes/semantic-ui/uiSchema","docId":"api-reference/themes/semantic-ui/uiSchema","unlisted":false}]}]},{"type":"link","label":"uiSchema","href":"/react-jsonschema-form/docs/api-reference/uiSchema","docId":"api-reference/uiSchema","unlisted":false},{"type":"link","label":"RJSF utility functions, constants and types","href":"/react-jsonschema-form/docs/api-reference/utility-functions","docId":"api-reference/utility-functions","unlisted":false},{"type":"link","label":"@rjsf/validator-ajv8 APIs","href":"/react-jsonschema-form/docs/api-reference/validator-ajv8","docId":"api-reference/validator-ajv8","unlisted":false}],"href":"/react-jsonschema-form/docs/api-reference/"},{"type":"link","label":"Contributing","href":"/react-jsonschema-form/docs/contributing","docId":"contributing","unlisted":false},{"type":"category","label":"JSON Schema","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Arrays","href":"/react-jsonschema-form/docs/json-schema/arrays","docId":"json-schema/arrays","unlisted":false},{"type":"link","label":"Schema definitions and references","href":"/react-jsonschema-form/docs/json-schema/definitions","docId":"json-schema/definitions","unlisted":false},{"type":"link","label":"Dependencies","href":"/react-jsonschema-form/docs/json-schema/dependencies","docId":"json-schema/dependencies","unlisted":false},{"type":"link","label":"Objects","href":"/react-jsonschema-form/docs/json-schema/objects","docId":"json-schema/objects","unlisted":false},{"type":"link","label":"oneOf, anyOf, and allOf","href":"/react-jsonschema-form/docs/json-schema/oneof","docId":"json-schema/oneof","unlisted":false},{"type":"link","label":"Single fields","href":"/react-jsonschema-form/docs/json-schema/single","docId":"json-schema/single","unlisted":false}],"href":"/react-jsonschema-form/docs/json-schema/"},{"type":"category","label":"Migration Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"2.x Upgrade Guide","href":"/react-jsonschema-form/docs/migration-guides/v2.x upgrade guide","docId":"migration-guides/v2.x upgrade guide","unlisted":false},{"type":"link","label":"3.x Upgrade Guide","href":"/react-jsonschema-form/docs/migration-guides/v3.x upgrade guide","docId":"migration-guides/v3.x upgrade guide","unlisted":false},{"type":"link","label":"4.x Upgrade Guide","href":"/react-jsonschema-form/docs/migration-guides/v4.x upgrade guide","docId":"migration-guides/v4.x upgrade guide","unlisted":false},{"type":"link","label":"5.x Upgrade Guide","href":"/react-jsonschema-form/docs/migration-guides/v5.x upgrade guide","docId":"migration-guides/v5.x upgrade guide","unlisted":false},{"type":"link","label":"6.x Upgrade Guide","href":"/react-jsonschema-form/docs/migration-guides/v6.x upgrade guide","docId":"migration-guides/v6.x upgrade guide","unlisted":false}],"href":"/react-jsonschema-form/docs/migration-guides/"},{"type":"category","label":"Usage and Customization","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Layout Grid","href":"/react-jsonschema-form/docs/usage/layout-grid","docId":"usage/layout-grid","unlisted":false},{"type":"link","label":"Themes","href":"/react-jsonschema-form/docs/usage/themes","docId":"usage/themes","unlisted":false},{"type":"link","label":"Validation","href":"/react-jsonschema-form/docs/usage/validation","docId":"usage/validation","unlisted":false},{"type":"link","label":"Widgets","href":"/react-jsonschema-form/docs/usage/widgets","docId":"usage/widgets","unlisted":false}],"href":"/react-jsonschema-form/docs/usage/"}]},"docs":{"advanced-customization/custom-templates":{"id":"advanced-customization/custom-templates","title":"Custom Templates","description":"This is an advanced feature that lets you customize even more aspects of the form:","sidebar":"docs"},"advanced-customization/custom-themes":{"id":"advanced-customization/custom-themes","title":"Custom Themes","description":"The withTheme component provides an easy way to extend the functionality of react-jsonschema-form by passing in a theme object that defines custom/overridden widgets and fields, as well as any of the other possible properties of the standard rjsf Form component.","sidebar":"docs"},"advanced-customization/custom-widgets-fields":{"id":"advanced-customization/custom-widgets-fields","title":"Custom Widgets and Fields","description":"The API allows to specify your own custom widget and field components:","sidebar":"docs"},"advanced-customization/index":{"id":"advanced-customization/index","title":"Advanced Customization","description":"Advanced customization documentation for react-jsonschema-form.","sidebar":"docs"},"advanced-customization/internals":{"id":"advanced-customization/internals","title":"Internals","description":"Miscellaneous internals of react-jsonschema-form are listed here.","sidebar":"docs"},"advanced-customization/typescript":{"id":"advanced-customization/typescript","title":"Typescript Support","description":"RJSF fully supports Typescript.","sidebar":"docs"},"api-reference/dynamic-ui-schema-examples":{"id":"api-reference/dynamic-ui-schema-examples","title":"Dynamic uiSchema Examples","description":"Backward Compatibility Examples","sidebar":"docs"},"api-reference/form-props":{"id":"api-reference/form-props","title":"<Form /> Props","description":"acceptCharset","sidebar":"docs"},"api-reference/index":{"id":"api-reference/index","title":"API Reference","description":"API documentation for react-jsonschema-form.","sidebar":"docs"},"api-reference/LayoutGridField":{"id":"api-reference/LayoutGridField","title":"LayoutGridField","description":"The LayoutGridField will render a schema, uiSchema and formData combination out into a GridTemplate in the shape","sidebar":"docs"},"api-reference/themes/antd/uiSchema":{"id":"api-reference/themes/antd/uiSchema","title":"AntD Customization","description":"formContext","sidebar":"docs"},"api-reference/themes/chakra-ui/uiSchema":{"id":"api-reference/themes/chakra-ui/uiSchema","title":"Chakra-UI Customization","description":"When using @rjsf/chakra-ui there are a couple of ways to customize the feel of the form.","sidebar":"docs"},"api-reference/themes/primereact/uiSchema":{"id":"api-reference/themes/primereact/uiSchema","title":"PrimeReact Customization","description":"You may set PrimeReact-specific options in the uiSchema object using the \\"prime\\" \\"ui:option\\".","sidebar":"docs"},"api-reference/themes/semantic-ui/uiSchema":{"id":"api-reference/themes/semantic-ui/uiSchema","title":"Semantic-UI Customization","description":"There are various options to pass to semantic theme fields.","sidebar":"docs"},"api-reference/uiSchema":{"id":"api-reference/uiSchema","title":"uiSchema","description":"JSON Schema is limited for describing how a given data type should be rendered as a form input component. That\'s why this library introduces the concept of uiSchema.","sidebar":"docs"},"api-reference/utility-functions":{"id":"api-reference/utility-functions","title":"RJSF utility functions, constants and types","description":"In version 5, the utility functions from @rjsf/core/utils were refactored into their own library called @rjsf/utils.","sidebar":"docs"},"api-reference/validator-ajv8":{"id":"api-reference/validator-ajv8","title":"@rjsf/validator-ajv8 APIs","description":"In RJSF version 6, the original, embedded AJV 6 validator implementation from earlier versions was removed in favor of the @rjsf/validator-ajv8 package.","sidebar":"docs"},"contributing":{"id":"contributing","title":"Contributing","description":"Development server","sidebar":"docs"},"intro":{"id":"intro","title":"Introduction","description":"Build Status","sidebar":"docs"},"json-schema/arrays":{"id":"json-schema/arrays","title":"Arrays","description":"Arrays are defined with a type equal to array, and array items\' schemas are specified in the items keyword.","sidebar":"docs"},"json-schema/definitions":{"id":"json-schema/definitions","title":"Schema definitions and references","description":"This library partially supports inline schema definition dereferencing, which allows you to re-use parts of your schema:","sidebar":"docs"},"json-schema/dependencies":{"id":"json-schema/dependencies","title":"Dependencies","description":"react-jsonschema-form supports the dependencies keyword from an earlier draft of JSON Schema (note that this is not part of the latest JSON Schema spec, though). Dependencies can be used to create dynamic schemas that change fields based on what data is entered.","sidebar":"docs"},"json-schema/index":{"id":"json-schema/index","title":"JSON Schema","description":"Documentation for how to use JSON Schema constructs in react-jsonschema-form.,","sidebar":"docs"},"json-schema/objects":{"id":"json-schema/objects","title":"Objects","description":"Object properties","sidebar":"docs"},"json-schema/oneof":{"id":"json-schema/oneof","title":"oneOf, anyOf, and allOf","description":"react-jsonschema-form supports custom widgets for oneOf, anyOf, and allOf.","sidebar":"docs"},"json-schema/single":{"id":"json-schema/single","title":"Single fields","description":"The simplest example of a JSON Schema contains only a single field. The field type is determined by the type parameter.","sidebar":"docs"},"migration-guides/index":{"id":"migration-guides/index","title":"Migration Guides","description":"Guides for upgrading to new major versions of react-jsonschema-form","sidebar":"docs"},"migration-guides/v2.x upgrade guide":{"id":"migration-guides/v2.x upgrade guide","title":"2.x Upgrade Guide","description":"Changes from v1 -> v2","sidebar":"docs"},"migration-guides/v3.x upgrade guide":{"id":"migration-guides/v3.x upgrade guide","title":"3.x Upgrade Guide","description":"Breaking changes","sidebar":"docs"},"migration-guides/v4.x upgrade guide":{"id":"migration-guides/v4.x upgrade guide","title":"4.x Upgrade Guide","description":"Breaking changes","sidebar":"docs"},"migration-guides/v5.x upgrade guide":{"id":"migration-guides/v5.x upgrade guide","title":"5.x Upgrade Guide","description":"Breaking changes","sidebar":"docs"},"migration-guides/v6.x upgrade guide":{"id":"migration-guides/v6.x upgrade guide","title":"6.x Upgrade Guide","description":"New packages","sidebar":"docs"},"quickstart":{"id":"quickstart","title":"Quickstart","description":"Let\'s walk through setup of a form after installing the dependency properly.","sidebar":"docs"},"usage/index":{"id":"usage/index","title":"Usage and Customization","description":"How to use react-jsonschema-form and customize your form behavior and appearance.","sidebar":"docs"},"usage/layout-grid":{"id":"usage/layout-grid","title":"Layout Grid","description":"Version 6 of RJSF introduced a new way of generating forms using the UiSchema, via the Layout Grid.","sidebar":"docs"},"usage/themes":{"id":"usage/themes","title":"Themes","description":"By default, this library renders form fields and widgets leveraging the Bootstrap semantics,","sidebar":"docs"},"usage/validation":{"id":"usage/validation","title":"Validation","description":"When the form is submitted, the form data is validated to conform to the given JSON schema;","sidebar":"docs"},"usage/widgets":{"id":"usage/widgets","title":"Widgets","description":"The uiSchema ui:widget property tells the form which UI widget should be used to render a field.","sidebar":"docs"}}}}')}}]);