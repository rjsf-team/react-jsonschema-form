// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`single fields checkbox field 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    gap: var(--chakra-spacing-2\\.5);
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    vertical-align: top;
    position: relative;
  }
}

@layer recipes {
  .emotion-4 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    color: var(--chakra-colors-white);
    border-width: 1px;
    border-color: var(--chakra-colors-border-emphasized);
    border-radius: var(--chakra-radii-l1);
    cursor: var(--chakra-cursor-checkbox);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
    padding: var(--chakra-spacing-0\\.5);
  }

  .emotion-4:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-4 :where(svg) {
    width: var(--chakra-sizes-full);
    height: var(--chakra-sizes-full);
  }

  .emotion-4:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --chakra-colors-color-palette-50: var(--chakra-colors-red-50);
    --chakra-colors-color-palette-100: var(--chakra-colors-red-100);
    --chakra-colors-color-palette-200: var(--chakra-colors-red-200);
    --chakra-colors-color-palette-300: var(--chakra-colors-red-300);
    --chakra-colors-color-palette-400: var(--chakra-colors-red-400);
    --chakra-colors-color-palette-500: var(--chakra-colors-red-500);
    --chakra-colors-color-palette-600: var(--chakra-colors-red-600);
    --chakra-colors-color-palette-700: var(--chakra-colors-red-700);
    --chakra-colors-color-palette-800: var(--chakra-colors-red-800);
    --chakra-colors-color-palette-900: var(--chakra-colors-red-900);
    --chakra-colors-color-palette-950: var(--chakra-colors-red-950);
    --chakra-colors-color-palette-contrast: var(--chakra-colors-red-contrast);
    --chakra-colors-color-palette-fg: var(--chakra-colors-red-fg);
    --chakra-colors-color-palette-subtle: var(--chakra-colors-red-subtle);
    --chakra-colors-color-palette-muted: var(--chakra-colors-red-muted);
    --chakra-colors-color-palette-emphasized: var(--chakra-colors-red-emphasized);
    --chakra-colors-color-palette-solid: var(--chakra-colors-red-solid);
    --chakra-colors-color-palette-focus-ring: var(--chakra-colors-red-focus-ring);
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-4:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: var(--chakra-cursor-disabled);
  }

  .emotion-4:is([data-state=checked], [data-state=indeterminate]) {
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
    border-color: var(--chakra-colors-color-palette-solid);
  }
}

.emotion-5 {
  fill: none;
  stroke: currentColor;
  stroke-width: 3px;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.emotion-6 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-7 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-7:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-7:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-7 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-7:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-7:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-boolean"
  >
    <fieldset
      aria-labelledby="fieldset:::r23:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r24:"
          role="group"
        >
          <label
            aria-describedby="root__error root__description root__help"
            className="chakra-checkbox__root emotion-3"
            data-part="root"
            data-scope="checkbox"
            data-state="unchecked"
            dir="ltr"
            htmlFor=":r24:"
            id="checkbox:root"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onPointerLeave={[Function]}
            onPointerMove={[Function]}
          >
            <input
              aria-invalid={false}
              aria-labelledby="field:::r24:::label"
              defaultChecked={false}
              disabled={false}
              id=":r24:"
              name="root"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              required={false}
              style={
                {
                  "border": "0",
                  "clip": "rect(0 0 0 0)",
                  "height": "1px",
                  "margin": "-1px",
                  "overflow": "hidden",
                  "padding": "0",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                  "wordWrap": "normal",
                }
              }
              type="checkbox"
              value="on"
            />
            <div
              aria-hidden={true}
              className="chakra-checkbox__control emotion-4"
              data-part="control"
              data-scope="checkbox"
              data-state="unchecked"
              dir="ltr"
              id="checkbox:root:control"
            >
              <svg
                className="emotion-5"
                data-state="unchecked"
                viewBox="0 0 24 24"
              />
            </div>
          </label>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-6"
  >
    <button
      className="chakra-button emotion-7"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields checkbox field with label 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    gap: var(--chakra-spacing-2\\.5);
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    vertical-align: top;
    position: relative;
  }
}

@layer recipes {
  .emotion-4 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    color: var(--chakra-colors-white);
    border-width: 1px;
    border-color: var(--chakra-colors-border-emphasized);
    border-radius: var(--chakra-radii-l1);
    cursor: var(--chakra-cursor-checkbox);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
    padding: var(--chakra-spacing-0\\.5);
  }

  .emotion-4:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-4 :where(svg) {
    width: var(--chakra-sizes-full);
    height: var(--chakra-sizes-full);
  }

  .emotion-4:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --chakra-colors-color-palette-50: var(--chakra-colors-red-50);
    --chakra-colors-color-palette-100: var(--chakra-colors-red-100);
    --chakra-colors-color-palette-200: var(--chakra-colors-red-200);
    --chakra-colors-color-palette-300: var(--chakra-colors-red-300);
    --chakra-colors-color-palette-400: var(--chakra-colors-red-400);
    --chakra-colors-color-palette-500: var(--chakra-colors-red-500);
    --chakra-colors-color-palette-600: var(--chakra-colors-red-600);
    --chakra-colors-color-palette-700: var(--chakra-colors-red-700);
    --chakra-colors-color-palette-800: var(--chakra-colors-red-800);
    --chakra-colors-color-palette-900: var(--chakra-colors-red-900);
    --chakra-colors-color-palette-950: var(--chakra-colors-red-950);
    --chakra-colors-color-palette-contrast: var(--chakra-colors-red-contrast);
    --chakra-colors-color-palette-fg: var(--chakra-colors-red-fg);
    --chakra-colors-color-palette-subtle: var(--chakra-colors-red-subtle);
    --chakra-colors-color-palette-muted: var(--chakra-colors-red-muted);
    --chakra-colors-color-palette-emphasized: var(--chakra-colors-red-emphasized);
    --chakra-colors-color-palette-solid: var(--chakra-colors-red-solid);
    --chakra-colors-color-palette-focus-ring: var(--chakra-colors-red-focus-ring);
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-4:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: var(--chakra-cursor-disabled);
  }

  .emotion-4:is([data-state=checked], [data-state=indeterminate]) {
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
    border-color: var(--chakra-colors-color-palette-solid);
  }
}

.emotion-5 {
  fill: none;
  stroke: currentColor;
  stroke-width: 3px;
  stroke-linecap: round;
  stroke-linejoin: round;
}

@layer recipes {
  .emotion-6 {
    font-weight: var(--chakra-font-weights-medium);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-6:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

.emotion-7 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-8 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-8:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-8:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-8 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-8:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-8:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-boolean"
  >
    <fieldset
      aria-labelledby="fieldset:::r26:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r27:"
          role="group"
        >
          <label
            aria-describedby="root__error root__description root__help"
            className="chakra-checkbox__root emotion-3"
            data-part="root"
            data-scope="checkbox"
            data-state="unchecked"
            dir="ltr"
            htmlFor=":r27:"
            id="checkbox:root"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onPointerLeave={[Function]}
            onPointerMove={[Function]}
          >
            <input
              aria-invalid={false}
              aria-labelledby="field:::r27:::label"
              defaultChecked={false}
              disabled={false}
              id=":r27:"
              name="root"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              required={false}
              style={
                {
                  "border": "0",
                  "clip": "rect(0 0 0 0)",
                  "height": "1px",
                  "margin": "-1px",
                  "overflow": "hidden",
                  "padding": "0",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                  "wordWrap": "normal",
                }
              }
              type="checkbox"
              value="on"
            />
            <div
              aria-hidden={true}
              className="chakra-checkbox__control emotion-4"
              data-part="control"
              data-scope="checkbox"
              data-state="unchecked"
              dir="ltr"
              id="checkbox:root:control"
            >
              <svg
                className="emotion-5"
                data-state="unchecked"
                viewBox="0 0 24 24"
              />
            </div>
            <span
              className="chakra-checkbox__label emotion-6"
              data-part="label"
              data-scope="checkbox"
              data-state="unchecked"
              dir="ltr"
              id="field:::r27:::label"
            >
              <p>
                test
              </p>
            </span>
          </label>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-7"
  >
    <button
      className="chakra-button emotion-8"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields checkbox field with label and description 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

.emotion-3 {
  font-size: var(--chakra-font-sizes-md);
}

@layer recipes {
  .emotion-4 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    gap: var(--chakra-spacing-2\\.5);
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    vertical-align: top;
    position: relative;
  }
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    color: var(--chakra-colors-white);
    border-width: 1px;
    border-color: var(--chakra-colors-border-emphasized);
    border-radius: var(--chakra-radii-l1);
    cursor: var(--chakra-cursor-checkbox);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
    padding: var(--chakra-spacing-0\\.5);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5 :where(svg) {
    width: var(--chakra-sizes-full);
    height: var(--chakra-sizes-full);
  }

  .emotion-5:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --chakra-colors-color-palette-50: var(--chakra-colors-red-50);
    --chakra-colors-color-palette-100: var(--chakra-colors-red-100);
    --chakra-colors-color-palette-200: var(--chakra-colors-red-200);
    --chakra-colors-color-palette-300: var(--chakra-colors-red-300);
    --chakra-colors-color-palette-400: var(--chakra-colors-red-400);
    --chakra-colors-color-palette-500: var(--chakra-colors-red-500);
    --chakra-colors-color-palette-600: var(--chakra-colors-red-600);
    --chakra-colors-color-palette-700: var(--chakra-colors-red-700);
    --chakra-colors-color-palette-800: var(--chakra-colors-red-800);
    --chakra-colors-color-palette-900: var(--chakra-colors-red-900);
    --chakra-colors-color-palette-950: var(--chakra-colors-red-950);
    --chakra-colors-color-palette-contrast: var(--chakra-colors-red-contrast);
    --chakra-colors-color-palette-fg: var(--chakra-colors-red-fg);
    --chakra-colors-color-palette-subtle: var(--chakra-colors-red-subtle);
    --chakra-colors-color-palette-muted: var(--chakra-colors-red-muted);
    --chakra-colors-color-palette-emphasized: var(--chakra-colors-red-emphasized);
    --chakra-colors-color-palette-solid: var(--chakra-colors-red-solid);
    --chakra-colors-color-palette-focus-ring: var(--chakra-colors-red-focus-ring);
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: var(--chakra-cursor-disabled);
  }

  .emotion-5:is([data-state=checked], [data-state=indeterminate]) {
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
    border-color: var(--chakra-colors-color-palette-solid);
  }
}

.emotion-6 {
  fill: none;
  stroke: currentColor;
  stroke-width: 3px;
  stroke-linecap: round;
  stroke-linejoin: round;
}

@layer recipes {
  .emotion-7 {
    font-weight: var(--chakra-font-weights-medium);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-7:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

.emotion-8 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-9 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-9:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-9 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-9:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-9:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-boolean"
  >
    <fieldset
      aria-labelledby="fieldset:::r29:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r2a:"
          role="group"
        >
          <sup
            className="emotion-3"
            id="root__description"
          >
            test description
          </sup>
          <label
            aria-describedby="root__error root__description root__help"
            className="chakra-checkbox__root emotion-4"
            data-part="root"
            data-scope="checkbox"
            data-state="unchecked"
            dir="ltr"
            htmlFor=":r2a:"
            id="checkbox:root"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onPointerLeave={[Function]}
            onPointerMove={[Function]}
          >
            <input
              aria-invalid={false}
              aria-labelledby="field:::r2a:::label"
              defaultChecked={false}
              disabled={false}
              id=":r2a:"
              name="root"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              required={false}
              style={
                {
                  "border": "0",
                  "clip": "rect(0 0 0 0)",
                  "height": "1px",
                  "margin": "-1px",
                  "overflow": "hidden",
                  "padding": "0",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                  "wordWrap": "normal",
                }
              }
              type="checkbox"
              value="on"
            />
            <div
              aria-hidden={true}
              className="chakra-checkbox__control emotion-5"
              data-part="control"
              data-scope="checkbox"
              data-state="unchecked"
              dir="ltr"
              id="checkbox:root:control"
            >
              <svg
                className="emotion-6"
                data-state="unchecked"
                viewBox="0 0 24 24"
              />
            </div>
            <span
              className="chakra-checkbox__label emotion-7"
              data-part="label"
              data-scope="checkbox"
              data-state="unchecked"
              dir="ltr"
              id="field:::r2a:::label"
            >
              <p>
                test
              </p>
            </span>
          </label>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-8"
  >
    <button
      className="chakra-button emotion-9"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields checkbox field with label and rich text description 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

.emotion-3 {
  font-size: var(--chakra-font-sizes-md);
}

@layer recipes {
  .emotion-4 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    gap: var(--chakra-spacing-2\\.5);
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    vertical-align: top;
    position: relative;
  }
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    color: var(--chakra-colors-white);
    border-width: 1px;
    border-color: var(--chakra-colors-border-emphasized);
    border-radius: var(--chakra-radii-l1);
    cursor: var(--chakra-cursor-checkbox);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
    padding: var(--chakra-spacing-0\\.5);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5 :where(svg) {
    width: var(--chakra-sizes-full);
    height: var(--chakra-sizes-full);
  }

  .emotion-5:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --chakra-colors-color-palette-50: var(--chakra-colors-red-50);
    --chakra-colors-color-palette-100: var(--chakra-colors-red-100);
    --chakra-colors-color-palette-200: var(--chakra-colors-red-200);
    --chakra-colors-color-palette-300: var(--chakra-colors-red-300);
    --chakra-colors-color-palette-400: var(--chakra-colors-red-400);
    --chakra-colors-color-palette-500: var(--chakra-colors-red-500);
    --chakra-colors-color-palette-600: var(--chakra-colors-red-600);
    --chakra-colors-color-palette-700: var(--chakra-colors-red-700);
    --chakra-colors-color-palette-800: var(--chakra-colors-red-800);
    --chakra-colors-color-palette-900: var(--chakra-colors-red-900);
    --chakra-colors-color-palette-950: var(--chakra-colors-red-950);
    --chakra-colors-color-palette-contrast: var(--chakra-colors-red-contrast);
    --chakra-colors-color-palette-fg: var(--chakra-colors-red-fg);
    --chakra-colors-color-palette-subtle: var(--chakra-colors-red-subtle);
    --chakra-colors-color-palette-muted: var(--chakra-colors-red-muted);
    --chakra-colors-color-palette-emphasized: var(--chakra-colors-red-emphasized);
    --chakra-colors-color-palette-solid: var(--chakra-colors-red-solid);
    --chakra-colors-color-palette-focus-ring: var(--chakra-colors-red-focus-ring);
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: var(--chakra-cursor-disabled);
  }

  .emotion-5:is([data-state=checked], [data-state=indeterminate]) {
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
    border-color: var(--chakra-colors-color-palette-solid);
  }
}

.emotion-6 {
  fill: none;
  stroke: currentColor;
  stroke-width: 3px;
  stroke-linecap: round;
  stroke-linejoin: round;
}

@layer recipes {
  .emotion-7 {
    font-weight: var(--chakra-font-weights-medium);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-7:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

.emotion-8 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-9 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-9:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-9 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-9:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-9:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-boolean"
  >
    <fieldset
      aria-labelledby="fieldset:::r2c:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r2d:"
          role="group"
        >
          <sup
            className="emotion-3"
            id="root__description"
          >
            <span>
              <strong>
                test
              </strong>
               
              <strong>
                description
              </strong>
            </span>
          </sup>
          <label
            aria-describedby="root__error root__description root__help"
            className="chakra-checkbox__root emotion-4"
            data-part="root"
            data-scope="checkbox"
            data-state="unchecked"
            dir="ltr"
            htmlFor=":r2d:"
            id="checkbox:root"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onPointerLeave={[Function]}
            onPointerMove={[Function]}
          >
            <input
              aria-invalid={false}
              aria-labelledby="field:::r2d:::label"
              defaultChecked={false}
              disabled={false}
              id=":r2d:"
              name="root"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              required={false}
              style={
                {
                  "border": "0",
                  "clip": "rect(0 0 0 0)",
                  "height": "1px",
                  "margin": "-1px",
                  "overflow": "hidden",
                  "padding": "0",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                  "wordWrap": "normal",
                }
              }
              type="checkbox"
              value="on"
            />
            <div
              aria-hidden={true}
              className="chakra-checkbox__control emotion-5"
              data-part="control"
              data-scope="checkbox"
              data-state="unchecked"
              dir="ltr"
              id="checkbox:root:control"
            >
              <svg
                className="emotion-6"
                data-state="unchecked"
                viewBox="0 0 24 24"
              />
            </div>
            <span
              className="chakra-checkbox__label emotion-7"
              data-part="label"
              data-scope="checkbox"
              data-state="unchecked"
              dir="ltr"
              id="field:::r2d:::label"
            >
              <p>
                test
              </p>
            </span>
          </label>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-8"
  >
    <button
      className="chakra-button emotion-9"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields checkboxes field 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-2>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-3 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: var(--chakra-spacing-1\\.5);
  }
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.5rem;
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    gap: var(--chakra-spacing-2\\.5);
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    vertical-align: top;
    position: relative;
  }
}

@layer recipes {
  .emotion-6 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    color: var(--chakra-colors-white);
    border-width: 1px;
    border-color: var(--chakra-colors-border-emphasized);
    border-radius: var(--chakra-radii-l1);
    cursor: var(--chakra-cursor-checkbox);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
    padding: var(--chakra-spacing-0\\.5);
  }

  .emotion-6:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-6 :where(svg) {
    width: var(--chakra-sizes-full);
    height: var(--chakra-sizes-full);
  }

  .emotion-6:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --chakra-colors-color-palette-50: var(--chakra-colors-red-50);
    --chakra-colors-color-palette-100: var(--chakra-colors-red-100);
    --chakra-colors-color-palette-200: var(--chakra-colors-red-200);
    --chakra-colors-color-palette-300: var(--chakra-colors-red-300);
    --chakra-colors-color-palette-400: var(--chakra-colors-red-400);
    --chakra-colors-color-palette-500: var(--chakra-colors-red-500);
    --chakra-colors-color-palette-600: var(--chakra-colors-red-600);
    --chakra-colors-color-palette-700: var(--chakra-colors-red-700);
    --chakra-colors-color-palette-800: var(--chakra-colors-red-800);
    --chakra-colors-color-palette-900: var(--chakra-colors-red-900);
    --chakra-colors-color-palette-950: var(--chakra-colors-red-950);
    --chakra-colors-color-palette-contrast: var(--chakra-colors-red-contrast);
    --chakra-colors-color-palette-fg: var(--chakra-colors-red-fg);
    --chakra-colors-color-palette-subtle: var(--chakra-colors-red-subtle);
    --chakra-colors-color-palette-muted: var(--chakra-colors-red-muted);
    --chakra-colors-color-palette-emphasized: var(--chakra-colors-red-emphasized);
    --chakra-colors-color-palette-solid: var(--chakra-colors-red-solid);
    --chakra-colors-color-palette-focus-ring: var(--chakra-colors-red-focus-ring);
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-6:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: var(--chakra-cursor-disabled);
  }

  .emotion-6:is([data-state=checked], [data-state=indeterminate]) {
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
    border-color: var(--chakra-colors-color-palette-solid);
  }
}

.emotion-7 {
  fill: none;
  stroke: currentColor;
  stroke-width: 3px;
  stroke-linecap: round;
  stroke-linejoin: round;
}

@layer recipes {
  .emotion-8 {
    font-weight: var(--chakra-font-weights-medium);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-8:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

.emotion-21 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-22 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-22:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-22:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-22 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-22:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-22:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-array"
  >
    <fieldset
      aria-labelledby="fieldset:::r2f:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <fieldset
          aria-labelledby="fieldset:::r2g:::legend"
          className="fieldset__root emotion-2"
          data-part="root"
          data-scope="fieldset"
          disabled={false}
        >
          <div
            aria-describedby="root__error root__description root__help"
            className="emotion-3"
            data-part="group"
            data-scope="checkbox"
            label="An enum list rendered as checkboxes"
            required={false}
            role="group"
          >
            <div
              className="chakra-stack emotion-4"
            >
              <label
                className="chakra-checkbox__root emotion-5"
                data-part="root"
                data-scope="checkbox"
                data-state="unchecked"
                dir="ltr"
                htmlFor="checkbox:root-0:input"
                id="checkbox:root-0"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
              >
                <input
                  aria-labelledby="checkbox:root-0:label"
                  defaultChecked={false}
                  disabled={false}
                  id="checkbox:root-0:input"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="checkbox"
                  value="0"
                />
                <div
                  aria-hidden={true}
                  className="chakra-checkbox__control emotion-6"
                  data-part="control"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-0:control"
                >
                  <svg
                    className="emotion-7"
                    data-state="unchecked"
                    viewBox="0 0 24 24"
                  />
                </div>
                <span
                  className="chakra-checkbox__label emotion-8"
                  data-part="label"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-0:label"
                >
                  <p>
                    foo
                  </p>
                </span>
              </label>
              <label
                className="chakra-checkbox__root emotion-5"
                data-part="root"
                data-scope="checkbox"
                data-state="unchecked"
                dir="ltr"
                htmlFor="checkbox:root-1:input"
                id="checkbox:root-1"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
              >
                <input
                  aria-labelledby="checkbox:root-1:label"
                  defaultChecked={false}
                  disabled={false}
                  id="checkbox:root-1:input"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="checkbox"
                  value="1"
                />
                <div
                  aria-hidden={true}
                  className="chakra-checkbox__control emotion-6"
                  data-part="control"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-1:control"
                >
                  <svg
                    className="emotion-7"
                    data-state="unchecked"
                    viewBox="0 0 24 24"
                  />
                </div>
                <span
                  className="chakra-checkbox__label emotion-8"
                  data-part="label"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-1:label"
                >
                  <p>
                    bar
                  </p>
                </span>
              </label>
              <label
                className="chakra-checkbox__root emotion-5"
                data-part="root"
                data-scope="checkbox"
                data-state="unchecked"
                dir="ltr"
                htmlFor="checkbox:root-2:input"
                id="checkbox:root-2"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
              >
                <input
                  aria-labelledby="checkbox:root-2:label"
                  defaultChecked={false}
                  disabled={false}
                  id="checkbox:root-2:input"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="checkbox"
                  value="2"
                />
                <div
                  aria-hidden={true}
                  className="chakra-checkbox__control emotion-6"
                  data-part="control"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-2:control"
                >
                  <svg
                    className="emotion-7"
                    data-state="unchecked"
                    viewBox="0 0 24 24"
                  />
                </div>
                <span
                  className="chakra-checkbox__label emotion-8"
                  data-part="label"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-2:label"
                >
                  <p>
                    fuzz
                  </p>
                </span>
              </label>
              <label
                className="chakra-checkbox__root emotion-5"
                data-part="root"
                data-scope="checkbox"
                data-state="unchecked"
                dir="ltr"
                htmlFor="checkbox:root-3:input"
                id="checkbox:root-3"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
              >
                <input
                  aria-labelledby="checkbox:root-3:label"
                  defaultChecked={false}
                  disabled={false}
                  id="checkbox:root-3:input"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="checkbox"
                  value="3"
                />
                <div
                  aria-hidden={true}
                  className="chakra-checkbox__control emotion-6"
                  data-part="control"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-3:control"
                >
                  <svg
                    className="emotion-7"
                    data-state="unchecked"
                    viewBox="0 0 24 24"
                  />
                </div>
                <span
                  className="chakra-checkbox__label emotion-8"
                  data-part="label"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-3:label"
                >
                  <p>
                    qux
                  </p>
                </span>
              </label>
            </div>
          </div>
        </fieldset>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-21"
  >
    <button
      className="chakra-button emotion-22"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields field with description 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  display: grid;
  gap: var(--chakra-spacing-4);
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-4 {
  margin-top: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-4 {
    color: var(--chakra-colors-fg);
    font-weight: var(--chakra-font-weights-medium);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-4:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

.emotion-5 {
  font-size: var(--chakra-font-sizes-md);
}

.emotion-7 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-7 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-8 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    text-align: start;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    font-weight: var(--chakra-font-weights-medium);
    gap: var(--chakra-spacing-1);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .emotion-8:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

@layer recipes {
  .emotion-9 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-9:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-9:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-10 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-11 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-11:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-11:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-11 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-11:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-11:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-object"
  >
    <fieldset
      aria-labelledby="fieldset:::r2s:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="emotion-2"
        >
          <div>
            <div
              className="rjsf-field rjsf-field-string"
            >
              <fieldset
                aria-labelledby="fieldset:::r2t:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__legend emotion-4"
                  data-part="legend"
                  data-scope="fieldset"
                  id="fieldset:::r2t:::legend"
                >
                  <sup
                    className="emotion-5"
                    id="root_my-field__description"
                  >
                    some description
                  </sup>
                </div>
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-field__root emotion-7"
                    data-part="root"
                    data-scope="field"
                    id="field:::r2u:"
                    role="group"
                  >
                    <label
                      className="chakra-field__label emotion-8"
                      data-part="label"
                      data-scope="field"
                      htmlFor=":r2u:"
                      id="field:::r2u:::label"
                    >
                      my-field
                    </label>
                    <input
                      aria-describedby="root_my-field__error root_my-field__description root_my-field__help"
                      autoFocus={false}
                      className="chakra-input emotion-9"
                      data-part="input"
                      data-scope="field"
                      disabled={false}
                      id="root_my-field"
                      name="root_my-field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder=""
                      readOnly={false}
                      required={false}
                      type="text"
                      value=""
                    />
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-10"
  >
    <button
      className="chakra-button emotion-11"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields field with description in uiSchema 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  display: grid;
  gap: var(--chakra-spacing-4);
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-4 {
  margin-top: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-4 {
    color: var(--chakra-colors-fg);
    font-weight: var(--chakra-font-weights-medium);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-4:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

.emotion-5 {
  font-size: var(--chakra-font-sizes-md);
}

.emotion-7 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-7 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-8 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    text-align: start;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    font-weight: var(--chakra-font-weights-medium);
    gap: var(--chakra-spacing-1);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .emotion-8:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

@layer recipes {
  .emotion-9 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-9:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-9:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-10 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-11 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-11:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-11:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-11 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-11:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-11:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-object"
  >
    <fieldset
      aria-labelledby="fieldset:::r2v:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="emotion-2"
        >
          <div>
            <div
              className="rjsf-field rjsf-field-string"
            >
              <fieldset
                aria-labelledby="fieldset:::r30:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__legend emotion-4"
                  data-part="legend"
                  data-scope="fieldset"
                  id="fieldset:::r30:::legend"
                >
                  <sup
                    className="emotion-5"
                    id="root_my-field__description"
                  >
                    some other description
                  </sup>
                </div>
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-field__root emotion-7"
                    data-part="root"
                    data-scope="field"
                    id="field:::r31:"
                    role="group"
                  >
                    <label
                      className="chakra-field__label emotion-8"
                      data-part="label"
                      data-scope="field"
                      htmlFor=":r31:"
                      id="field:::r31:::label"
                    >
                      my-field
                    </label>
                    <input
                      aria-describedby="root_my-field__error root_my-field__description root_my-field__help"
                      autoFocus={false}
                      className="chakra-input emotion-9"
                      data-part="input"
                      data-scope="field"
                      disabled={false}
                      id="root_my-field"
                      name="root_my-field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder=""
                      readOnly={false}
                      required={false}
                      type="text"
                      value=""
                    />
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-10"
  >
    <button
      className="chakra-button emotion-11"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields field with markdown description 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  display: grid;
  gap: var(--chakra-spacing-4);
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-4 {
  margin-top: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-4 {
    color: var(--chakra-colors-fg);
    font-weight: var(--chakra-font-weights-medium);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-4:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

.emotion-5 {
  font-size: var(--chakra-font-sizes-md);
}

.emotion-7 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-7 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-8 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    text-align: start;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    font-weight: var(--chakra-font-weights-medium);
    gap: var(--chakra-spacing-1);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .emotion-8:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

@layer recipes {
  .emotion-9 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-9:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-9:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-10 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-11 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-11:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-11:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-11 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-11:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-11:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-object"
  >
    <fieldset
      aria-labelledby="fieldset:::r32:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="emotion-2"
        >
          <div>
            <div
              className="rjsf-field rjsf-field-string"
            >
              <fieldset
                aria-labelledby="fieldset:::r33:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__legend emotion-4"
                  data-part="legend"
                  data-scope="fieldset"
                  id="fieldset:::r33:::legend"
                >
                  <sup
                    className="emotion-5"
                    id="root_my-field__description"
                  >
                    <span>
                      some 
                      <strong>
                        Rich
                      </strong>
                       description
                    </span>
                  </sup>
                </div>
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-field__root emotion-7"
                    data-part="root"
                    data-scope="field"
                    id="field:::r34:"
                    role="group"
                  >
                    <label
                      className="chakra-field__label emotion-8"
                      data-part="label"
                      data-scope="field"
                      htmlFor=":r34:"
                      id="field:::r34:::label"
                    >
                      my-field
                    </label>
                    <input
                      aria-describedby="root_my-field__error root_my-field__description root_my-field__help"
                      autoFocus={false}
                      className="chakra-input emotion-9"
                      data-part="input"
                      data-scope="field"
                      disabled={false}
                      id="root_my-field"
                      name="root_my-field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder=""
                      readOnly={false}
                      required={false}
                      type="text"
                      value=""
                    />
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-10"
  >
    <button
      className="chakra-button emotion-11"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields field with markdown description in uiSchema 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  display: grid;
  gap: var(--chakra-spacing-4);
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-4 {
  margin-top: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-4 {
    color: var(--chakra-colors-fg);
    font-weight: var(--chakra-font-weights-medium);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-4:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

.emotion-5 {
  font-size: var(--chakra-font-sizes-md);
}

.emotion-7 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-7 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-8 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    text-align: start;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    font-weight: var(--chakra-font-weights-medium);
    gap: var(--chakra-spacing-1);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .emotion-8:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

@layer recipes {
  .emotion-9 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-9:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-9:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-10 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-11 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-11:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-11:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-11 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-11:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-11:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-object"
  >
    <fieldset
      aria-labelledby="fieldset:::r35:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="emotion-2"
        >
          <div>
            <div
              className="rjsf-field rjsf-field-string"
            >
              <fieldset
                aria-labelledby="fieldset:::r36:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__legend emotion-4"
                  data-part="legend"
                  data-scope="fieldset"
                  id="fieldset:::r36:::legend"
                >
                  <sup
                    className="emotion-5"
                    id="root_my-field__description"
                  >
                    <span>
                      some other description
                    </span>
                  </sup>
                </div>
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-field__root emotion-7"
                    data-part="root"
                    data-scope="field"
                    id="field:::r37:"
                    role="group"
                  >
                    <label
                      className="chakra-field__label emotion-8"
                      data-part="label"
                      data-scope="field"
                      htmlFor=":r37:"
                      id="field:::r37:::label"
                    >
                      my-field
                    </label>
                    <input
                      aria-describedby="root_my-field__error root_my-field__description root_my-field__help"
                      autoFocus={false}
                      className="chakra-input emotion-9"
                      data-part="input"
                      data-scope="field"
                      disabled={false}
                      id="root_my-field"
                      name="root_my-field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder=""
                      readOnly={false}
                      required={false}
                      type="text"
                      value=""
                    />
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-10"
  >
    <button
      className="chakra-button emotion-11"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields format color 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::rg:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::rh:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="color"
            value=""
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields format date 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::ri:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::rj:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="date"
            value=""
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields format datetime 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::rk:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::rl:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="datetime-local"
            value=""
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields format time 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::rm:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::rn:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="time"
            value=""
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields help and error display 1`] = `
.emotion-0 {
  margin-bottom: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-0 {
    width: var(--chakra-sizes-full);
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
    position: relative;
    border-radius: var(--chakra-radii-l3);
    --chakra-colors-color-palette-50: var(--chakra-colors-red-50);
    --chakra-colors-color-palette-100: var(--chakra-colors-red-100);
    --chakra-colors-color-palette-200: var(--chakra-colors-red-200);
    --chakra-colors-color-palette-300: var(--chakra-colors-red-300);
    --chakra-colors-color-palette-400: var(--chakra-colors-red-400);
    --chakra-colors-color-palette-500: var(--chakra-colors-red-500);
    --chakra-colors-color-palette-600: var(--chakra-colors-red-600);
    --chakra-colors-color-palette-700: var(--chakra-colors-red-700);
    --chakra-colors-color-palette-800: var(--chakra-colors-red-800);
    --chakra-colors-color-palette-900: var(--chakra-colors-red-900);
    --chakra-colors-color-palette-950: var(--chakra-colors-red-950);
    --chakra-colors-color-palette-contrast: var(--chakra-colors-red-contrast);
    --chakra-colors-color-palette-fg: var(--chakra-colors-red-fg);
    --chakra-colors-color-palette-subtle: var(--chakra-colors-red-subtle);
    --chakra-colors-color-palette-muted: var(--chakra-colors-red-muted);
    --chakra-colors-color-palette-emphasized: var(--chakra-colors-red-emphasized);
    --chakra-colors-color-palette-solid: var(--chakra-colors-red-solid);
    --chakra-colors-color-palette-focus-ring: var(--chakra-colors-red-focus-ring);
    background: var(--chakra-colors-color-palette-subtle);
    --bg-currentcolor: var(--chakra-colors-color-palette-subtle);
    color: var(--chakra-colors-color-palette-fg);
    gap: var(--chakra-spacing-3);
    padding-inline: var(--chakra-spacing-4);
    padding-block: var(--chakra-spacing-4);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: 1em;
    height: 1em;
    font-size: var(--chakra-font-sizes-xl);
    line-height: 1.875rem;
  }

  .emotion-1 :where(svg) {
    width: var(--chakra-sizes-full);
    height: var(--chakra-sizes-full);
  }
}

.emotion-2 {
  stroke: currentColor;
  fill: currentColor;
  stroke-width: 0;
}

@layer recipes {
  .emotion-3 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    gap: var(--chakra-spacing-1);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@layer recipes {
  .emotion-4 {
    font-weight: var(--chakra-font-weights-medium);
  }
}

@layer recipes {
  .emotion-5 {
    display: inline;
  }
}

.emotion-6 {
  list-style-position: inside;
}

@layer recipes {
  .emotion-6 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: var(--list-gap);
    list-style: revert;
  }

  .emotion-6 :where(ul, ol) {
    margin-top: var(--list-gap);
  }
}

@layer recipes {
  .emotion-7 {
    white-space: normal;
    display: -webkit-box;
    display: -webkit-list-item;
    display: -ms-list-itembox;
    display: list-item;
  }

  .emotion-7::marker {
    color: var(--chakra-colors-fg-subtle);
  }
}

@layer recipes {
  .emotion-8 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-8>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-9 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-10 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-10 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-11 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-11:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-11:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-11:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-12 {
  margin-top: 0;
}

@layer recipes {
  .emotion-12 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    color: var(--chakra-colors-fg-error);
    gap: var(--chakra-spacing-2);
    font-weight: var(--chakra-font-weights-medium);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }
}

.emotion-13 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-14 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-14:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-14:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-14 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-14:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-14:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="chakra-alert__root emotion-0"
  >
    <span
      className="emotion-1"
    >
      <svg
        className="emotion-2"
        viewBox="0 0 24 24"
      >
        <path
          d="M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM11 15H13V17H11V15ZM11 7H13V13H11V7Z"
        />
      </svg>
    </span>
    <div
      className="chakra-alert__content emotion-3"
    >
      <div
        className="chakra-alert__title emotion-4"
      >
        Errors
      </div>
      <div
        className="chakra-alert__description emotion-5"
      >
        <ul
          className="chakra-list__root emotion-6"
          role="list"
        >
          <li
            className="chakra-list__item emotion-7"
          >
            . an error
          </li>
        </ul>
      </div>
    </div>
  </div>
  <div
    className="rjsf-field rjsf-field-string rjsf-field-error"
  >
    <fieldset
      aria-labelledby="fieldset:::r3h:::legend"
      className="fieldset__root emotion-8"
      data-invalid=""
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <p
        id="root__help"
      >
        help me!
      </p>
      <div
        className="fieldset__content emotion-9"
      >
        <div
          className="chakra-field__root emotion-10"
          data-invalid=""
          data-part="root"
          data-scope="field"
          id="field:::r3i:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            aria-invalid="true"
            autoFocus={false}
            className="chakra-input emotion-11"
            data-invalid=""
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="text"
            value=""
          />
        </div>
      </div>
      <span
        aria-live="polite"
        className="fieldset__errorText emotion-12"
        data-part="error-text"
        data-scope="fieldset"
        id="root__error"
      >
        an error
      </span>
    </fieldset>
  </div>
  <div
    className="emotion-13"
  >
    <button
      className="chakra-button emotion-14"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields hidden field 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  display: grid;
  gap: var(--chakra-spacing-4);
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-3 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-4 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-4:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-4:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-4 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-4:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-4:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-object"
  >
    <fieldset
      aria-labelledby="fieldset:::r2r:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="emotion-2"
        >
          <div
            style={
              {
                "display": "none",
              }
            }
          >
            <input
              id="root_my-field"
              name="root_my-field"
              type="hidden"
              value=""
            />
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-3"
  >
    <button
      className="chakra-button emotion-4"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields hidden label 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::r3b:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r3c:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="text"
            value=""
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields null field 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-3 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-3:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-3:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-null"
  >
    <fieldset
      aria-labelledby="fieldset:::re:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      />
    </fieldset>
  </div>
  <div
    className="emotion-2"
  >
    <button
      className="chakra-button emotion-3"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields number field 0 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-number"
  >
    <fieldset
      aria-labelledby="fieldset:::rc:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::rd:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            step="any"
            type="number"
            value={0}
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields number field 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-number"
  >
    <fieldset
      aria-labelledby="fieldset:::ra:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::rb:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            step="any"
            type="number"
            value=""
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields optional data controls does not show optional controls when not turned on in uiSchema and no formData 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-top: var(--chakra-spacing-1);
  margin-bottom: var(--chakra-spacing-4);
}

@layer recipes {
  .emotion-3 {
    font-family: var(--chakra-fonts-heading);
    font-weight: var(--chakra-font-weights-semibold);
    font-size: var(--chakra-font-sizes-xl);
    line-height: 1.875rem;
  }
}

@layer recipes {
  .emotion-4 {
    display: block;
    border-color: var(--chakra-colors-border);
    --separator-thickness: 1px;
    border-style: solid;
    border-top-width: var(--separator-thickness);
  }
}

.emotion-5 {
  display: grid;
  gap: var(--chakra-spacing-4);
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-14 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-14 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-15 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    text-align: start;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    font-weight: var(--chakra-font-weights-medium);
    gap: var(--chakra-spacing-1);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .emotion-15:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

@layer recipes {
  .emotion-16 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-16:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-16:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-16:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-44 {
  display: grid;
}

.emotion-45 {
  justify-self: flex-end;
}

.emotion-46 {
  margin-top: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-47 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-47:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-47:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-47 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-47:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-47:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

.emotion-97 {
  margin-bottom: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-97 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    position: relative;
    min-width: 0;
    word-wrap: break-word;
    border-radius: var(--chakra-radii-l3);
    color: var(--chakra-colors-fg);
    text-align: start;
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --card-padding: var(--chakra-spacing-6);
  }
}

.emotion-98 {
  padding-bottom: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-98 {
    padding: var(--card-padding);
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

.emotion-99 {
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-100 {
  margin-bottom: var(--chakra-spacing-1);
  position: relative;
}

@layer recipes {
  .emotion-100 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-102 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: var(--chakra-spacing-1\\.5);
    width: var(--chakra-sizes-full);
    --select-trigger-height: var(--chakra-sizes-10);
    --select-trigger-padding-x: var(--chakra-spacing-3);
  }
}

@layer recipes {
  .emotion-103 {
    position: relative;
  }
}

@layer recipes {
  .emotion-105 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    width: var(--chakra-sizes-full);
    min-height: var(--select-trigger-height);
    --input-height: var(--select-trigger-height);
    padding-inline: var(--select-trigger-padding-x);
    border-radius: var(--chakra-radii-l2);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    text-align: start;
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
  }

  .emotion-105:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }

  .emotion-105:is(:placeholder-shown, [data-placeholder-shown]) {
    --mix-color: color-mix(in srgb, var(--chakra-colors-fg-muted) 80%, transparent);
    color: var(--mix-color, var(--chakra-colors-fg-muted));
  }

  .emotion-105:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-105:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-105:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    border-color: var(--chakra-colors-border-emphasized);
  }
}

@layer recipes {
  .emotion-106 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    text-wrap: wrap;
    max-width: 80%;
  }
}

@layer recipes {
  .emotion-107 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-1);
    position: absolute;
    inset-inline-end: 0;
    top: 0;
    bottom: 0;
    padding-inline: var(--select-trigger-padding-x);
    pointer-events: none;
  }
}

@layer recipes {
  .emotion-108 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    color: var(--chakra-colors-fg-muted);
  }

  .emotion-108:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    color: var(--chakra-colors-fg-subtle);
  }

  .emotion-108:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    color: var(--chakra-colors-fg-error);
  }

  .emotion-108 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

.emotion-109 {
  fill: none;
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.emotion-110 {
  min-width: 100%!important;
  z-index: 2!important;
  top: calc(100% + 5px)!important;
}

@layer recipes {
  .emotion-111 {
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    z-index: var(--chakra-z-index-dropdown);
    border-radius: var(--chakra-radii-l2);
    outline: 0;
    max-height: var(--chakra-sizes-96);
    overflow-y: auto;
    box-shadow: var(--chakra-shadows-md);
    padding: var(--chakra-spacing-1);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-111:is([open], [data-open], [data-state=open]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fast);
    animation-duration: var(--chakra-durations-fast);
  }

  .emotion-111:is([open], [data-open], [data-state=open])[data-placement^=top] {
    -webkit-animation-name: slide-from-bottom,fade-in;
    animation-name: slide-from-bottom,fade-in;
  }

  .emotion-111:is([open], [data-open], [data-state=open])[data-placement^=bottom] {
    -webkit-animation-name: slide-from-top,fade-in;
    animation-name: slide-from-top,fade-in;
  }

  .emotion-111:is([open], [data-open], [data-state=open])[data-placement^=left] {
    -webkit-animation-name: slide-from-right,fade-in;
    animation-name: slide-from-right,fade-in;
  }

  .emotion-111:is([open], [data-open], [data-state=open])[data-placement^=right] {
    -webkit-animation-name: slide-from-left,fade-in;
    animation-name: slide-from-left,fade-in;
  }

  .emotion-111:is([closed], [data-closed], [data-state=closed]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fastest);
    animation-duration: var(--chakra-durations-fastest);
  }

  .emotion-111:is([closed], [data-closed], [data-state=closed])[data-placement^=top] {
    -webkit-animation-name: slide-to-bottom,fade-out;
    animation-name: slide-to-bottom,fade-out;
  }

  .emotion-111:is([closed], [data-closed], [data-state=closed])[data-placement^=bottom] {
    -webkit-animation-name: slide-to-top,fade-out;
    animation-name: slide-to-top,fade-out;
  }

  .emotion-111:is([closed], [data-closed], [data-state=closed])[data-placement^=left] {
    -webkit-animation-name: slide-to-right,fade-out;
    animation-name: slide-to-right,fade-out;
  }

  .emotion-111:is([closed], [data-closed], [data-state=closed])[data-placement^=right] {
    -webkit-animation-name: slide-to-left,fade-out;
    animation-name: slide-to-left,fade-out;
  }
}

@layer recipes {
  .emotion-112 {
    position: relative;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-2);
    cursor: var(--chakra-cursor-option);
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    text-align: start;
    border-radius: var(--chakra-radii-l1);
    padding-block: var(--chakra-spacing-1\\.5);
    padding-inline: var(--chakra-spacing-2);
  }

  .emotion-112[data-highlighted] {
    --mix-background: color-mix(in srgb, var(--chakra-colors-bg-emphasized) 60%, transparent);
    background: var(--mix-background, var(--chakra-colors-bg-emphasized));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-bg-emphasized));
  }

  .emotion-112:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    pointer-events: none;
    opacity: 0.5;
  }

  .emotion-112 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

@layer recipes {
  .emotion-113 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
  }
}

.emotion-167 {
  margin-top: var(--chakra-spacing-3);
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-object"
  >
    <fieldset
      aria-labelledby="fieldset:::r3j:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="emotion-2"
          id="root__title"
        >
          <h5
            className="chakra-heading emotion-3"
          >
            test
          </h5>
          <span
            aria-orientation="horizontal"
            className="chakra-separator emotion-4"
            role="separator"
          />
        </div>
        <div
          className="emotion-5"
        >
          <div>
            <div
              className="rjsf-field rjsf-field-object"
            >
              <fieldset
                aria-labelledby="fieldset:::r3k:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="emotion-2"
                    id="root_nestedObjectOptional__title"
                  >
                    <h5
                      className="chakra-heading emotion-3"
                    >
                      nestedObjectOptional
                    </h5>
                    <span
                      aria-orientation="horizontal"
                      className="chakra-separator emotion-4"
                      role="separator"
                    />
                  </div>
                  <div
                    className="emotion-5"
                  >
                    <div>
                      <div
                        className="rjsf-field rjsf-field-string"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r3l:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="chakra-field__root emotion-14"
                              data-part="root"
                              data-scope="field"
                              id="field:::r3m:"
                              role="group"
                            >
                              <label
                                className="chakra-field__label emotion-15"
                                data-part="label"
                                data-scope="field"
                                htmlFor=":r3m:"
                                id="field:::r3m:::label"
                              >
                                test
                              </label>
                              <input
                                aria-describedby="root_nestedObjectOptional_test__error root_nestedObjectOptional_test__description root_nestedObjectOptional_test__help"
                                autoFocus={false}
                                className="chakra-input emotion-16"
                                data-part="input"
                                data-scope="field"
                                disabled={false}
                                id="root_nestedObjectOptional_test"
                                name="root_nestedObjectOptional_test"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder=""
                                readOnly={false}
                                required={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r3n:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_nestedObjectOptional_deepObjectOptional__title"
                            >
                              <h5
                                className="chakra-heading emotion-3"
                              >
                                deepObjectOptional
                              </h5>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            >
                              <div>
                                <div
                                  className="rjsf-field rjsf-field-string"
                                >
                                  <fieldset
                                    aria-labelledby="fieldset:::r3o:::legend"
                                    className="fieldset__root emotion-0"
                                    data-part="root"
                                    data-scope="fieldset"
                                    disabled={false}
                                  >
                                    <div
                                      className="fieldset__content emotion-1"
                                    >
                                      <div
                                        className="chakra-field__root emotion-14"
                                        data-part="root"
                                        data-scope="field"
                                        id="field:::r3p:"
                                        role="group"
                                      >
                                        <label
                                          className="chakra-field__label emotion-15"
                                          data-part="label"
                                          data-scope="field"
                                          htmlFor=":r3p:"
                                          id="field:::r3p:::label"
                                        >
                                          deepTest
                                        </label>
                                        <input
                                          aria-describedby="root_nestedObjectOptional_deepObjectOptional_deepTest__error root_nestedObjectOptional_deepObjectOptional_deepTest__description root_nestedObjectOptional_deepObjectOptional_deepTest__help"
                                          autoFocus={false}
                                          className="chakra-input emotion-16"
                                          data-part="input"
                                          data-scope="field"
                                          disabled={false}
                                          id="root_nestedObjectOptional_deepObjectOptional_deepTest"
                                          name="root_nestedObjectOptional_deepObjectOptional_deepTest"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder=""
                                          readOnly={false}
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </fieldset>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r3q:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_nestedObjectOptional_deepObject__title"
                            >
                              <h5
                                className="chakra-heading emotion-3"
                              >
                                deepObject
                              </h5>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            >
                              <div>
                                <div
                                  className="rjsf-field rjsf-field-string"
                                >
                                  <fieldset
                                    aria-labelledby="fieldset:::r3r:::legend"
                                    className="fieldset__root emotion-0"
                                    data-part="root"
                                    data-scope="fieldset"
                                    disabled={false}
                                  >
                                    <div
                                      className="fieldset__content emotion-1"
                                    >
                                      <div
                                        className="chakra-field__root emotion-14"
                                        data-part="root"
                                        data-scope="field"
                                        id="field:::r3s:"
                                        role="group"
                                      >
                                        <label
                                          className="chakra-field__label emotion-15"
                                          data-part="label"
                                          data-scope="field"
                                          htmlFor=":r3s:"
                                          id="field:::r3s:::label"
                                        >
                                          deepTest
                                        </label>
                                        <input
                                          aria-describedby="root_nestedObjectOptional_deepObject_deepTest__error root_nestedObjectOptional_deepObject_deepTest__description root_nestedObjectOptional_deepObject_deepTest__help"
                                          autoFocus={false}
                                          className="chakra-input emotion-16"
                                          data-part="input"
                                          data-scope="field"
                                          disabled={false}
                                          id="root_nestedObjectOptional_deepObject_deepTest"
                                          name="root_nestedObjectOptional_deepObject_deepTest"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder=""
                                          readOnly={false}
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </fieldset>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r3t:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_nestedObjectOptional_deepArrayOptional__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  deepArrayOptional
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-44"
                              >
                                <div />
                                <div
                                  className="emotion-45"
                                >
                                  <div
                                    className="emotion-46"
                                  >
                                    <button
                                      className="chakra-button rjsf-array-item-add emotion-47"
                                      disabled={false}
                                      id="root_nestedObjectOptional_deepArrayOptional__add"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="lucide lucide-plus"
                                        fill="none"
                                        height={24}
                                        stroke="currentColor"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth={2}
                                        viewBox="0 0 24 24"
                                        width={24}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5 12h14"
                                        />
                                        <path
                                          d="M12 5v14"
                                        />
                                      </svg>
                                      Add Item
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r3u:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_nestedObjectOptional_deepArrayOptional2__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  deepArrayOptional2
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-44"
                              >
                                <div />
                                <div
                                  className="emotion-45"
                                >
                                  <div
                                    className="emotion-46"
                                  >
                                    <button
                                      className="chakra-button rjsf-array-item-add emotion-47"
                                      disabled={false}
                                      id="root_nestedObjectOptional_deepArrayOptional2__add"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="lucide lucide-plus"
                                        fill="none"
                                        height={24}
                                        stroke="currentColor"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth={2}
                                        viewBox="0 0 24 24"
                                        width={24}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5 12h14"
                                        />
                                        <path
                                          d="M12 5v14"
                                        />
                                      </svg>
                                      Add Item
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r3v:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_nestedObjectOptional_deepArray__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  deepArray
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-44"
                              >
                                <div />
                                <div
                                  className="emotion-45"
                                >
                                  <div
                                    className="emotion-46"
                                  >
                                    <button
                                      className="chakra-button rjsf-array-item-add emotion-47"
                                      disabled={false}
                                      id="root_nestedObjectOptional_deepArray__add"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="lucide lucide-plus"
                                        fill="none"
                                        height={24}
                                        stroke="currentColor"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth={2}
                                        viewBox="0 0 24 24"
                                        width={24}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5 12h14"
                                        />
                                        <path
                                          d="M12 5v14"
                                        />
                                      </svg>
                                      Add Item
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-array"
            >
              <fieldset
                aria-labelledby="fieldset:::r40:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div>
                    <div
                      className="emotion-2"
                      id="root_nestedArrayOptional__title"
                    >
                      <h5
                        className="chakra-heading emotion-3"
                      >
                        nestedArrayOptional
                      </h5>
                      <span
                        aria-orientation="horizontal"
                        className="chakra-separator emotion-4"
                        role="separator"
                      />
                    </div>
                    <div
                      className="emotion-44"
                    >
                      <div />
                      <div
                        className="emotion-45"
                      >
                        <div
                          className="emotion-46"
                        >
                          <button
                            className="chakra-button rjsf-array-item-add emotion-47"
                            disabled={false}
                            id="root_nestedArrayOptional__add"
                            onClick={[Function]}
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              className="lucide lucide-plus"
                              fill="none"
                              height={24}
                              stroke="currentColor"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              viewBox="0 0 24 24"
                              width={24}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M5 12h14"
                              />
                              <path
                                d="M12 5v14"
                              />
                            </svg>
                            Add Item
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-object"
            >
              <fieldset
                aria-labelledby="fieldset:::r41:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="emotion-2"
                    id="root_nestedObject__title"
                  >
                    <h5
                      className="chakra-heading emotion-3"
                    >
                      nestedObject
                    </h5>
                    <span
                      aria-orientation="horizontal"
                      className="chakra-separator emotion-4"
                      role="separator"
                    />
                  </div>
                  <div
                    className="emotion-5"
                  >
                    <div>
                      <div
                        className="rjsf-field rjsf-field-string"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r42:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="chakra-field__root emotion-14"
                              data-part="root"
                              data-scope="field"
                              id="field:::r43:"
                              role="group"
                            >
                              <label
                                className="chakra-field__label emotion-15"
                                data-part="label"
                                data-scope="field"
                                htmlFor=":r43:"
                                id="field:::r43:::label"
                              >
                                test
                              </label>
                              <input
                                aria-describedby="root_nestedObject_test__error root_nestedObject_test__description root_nestedObject_test__help"
                                autoFocus={false}
                                className="chakra-input emotion-16"
                                data-part="input"
                                data-scope="field"
                                disabled={false}
                                id="root_nestedObject_test"
                                name="root_nestedObject_test"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder=""
                                readOnly={false}
                                required={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-array"
            >
              <fieldset
                aria-labelledby="fieldset:::r44:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div>
                    <div
                      className="emotion-2"
                      id="root_nestedArray__title"
                    >
                      <h5
                        className="chakra-heading emotion-3"
                      >
                        nestedArray
                      </h5>
                      <span
                        aria-orientation="horizontal"
                        className="chakra-separator emotion-4"
                        role="separator"
                      />
                    </div>
                    <div
                      className="emotion-44"
                    >
                      <div />
                      <div
                        className="emotion-45"
                      >
                        <div
                          className="emotion-46"
                        >
                          <button
                            className="chakra-button rjsf-array-item-add emotion-47"
                            disabled={false}
                            id="root_nestedArray__add"
                            onClick={[Function]}
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              className="lucide lucide-plus"
                              fill="none"
                              height={24}
                              stroke="currentColor"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              viewBox="0 0 24 24"
                              width={24}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M5 12h14"
                              />
                              <path
                                d="M12 5v14"
                              />
                            </svg>
                            Add Item
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-undefined"
            >
              <fieldset
                aria-labelledby="fieldset:::r45:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-card__root emotion-97"
                  >
                    <div
                      className="chakra-card__body emotion-98"
                    >
                      <div
                        className="emotion-99"
                      >
                        <div
                          className="chakra-field__root emotion-100"
                          data-part="root"
                          data-scope="field"
                          id="field:::r46:"
                          role="group"
                        >
                          <label
                            className="chakra-field__label emotion-15"
                            data-part="label"
                            data-scope="field"
                            htmlFor=":r46:"
                            id="field:::r46:::label"
                          >
                            optionalObjectWithOneofs
                          </label>
                          <div
                            aria-describedby="root_optionalObjectWithOneofs__oneof_select__error root_optionalObjectWithOneofs__oneof_select__description root_optionalObjectWithOneofs__oneof_select__help"
                            className="chakra-select__root emotion-102"
                            data-part="root"
                            data-scope="select"
                            dir="ltr"
                            id="select:root_optionalObjectWithOneofs__oneof_select"
                            onBlur={[Function]}
                            onFocus={[Function]}
                          >
                            <select
                              aria-hidden={true}
                              aria-labelledby="field:::r46:::label"
                              defaultValue="0"
                              disabled={false}
                              id=":r46:"
                              multiple={false}
                              name="root_optionalObjectWithOneofs__oneof_select"
                              onFocus={[Function]}
                              required={false}
                              style={
                                {
                                  "border": "0",
                                  "clip": "rect(0 0 0 0)",
                                  "height": "1px",
                                  "margin": "-1px",
                                  "overflow": "hidden",
                                  "padding": "0",
                                  "position": "absolute",
                                  "whiteSpace": "nowrap",
                                  "width": "1px",
                                  "wordWrap": "normal",
                                }
                              }
                              tabIndex={-1}
                            >
                              <option
                                disabled={false}
                                value="0"
                              >
                                Option 1
                              </option>
                              <option
                                disabled={false}
                                value="1"
                              >
                                Option 2
                              </option>
                              <option
                                disabled={false}
                                value="2"
                              >
                                Option 3
                              </option>
                            </select>
                            <div
                              className="chakra-select__control emotion-103"
                              data-part="control"
                              data-scope="select"
                              data-state="closed"
                              dir="ltr"
                              id="select:root_optionalObjectWithOneofs__oneof_select:control"
                            >
                              <div
                                className="chakra-select__control emotion-103"
                                data-part="control"
                                data-scope="select"
                                data-state="closed"
                                dir="ltr"
                                id="select:root_optionalObjectWithOneofs__oneof_select:control"
                              >
                                <button
                                  aria-controls="select:root_optionalObjectWithOneofs__oneof_select:content"
                                  aria-expanded={false}
                                  aria-haspopup="listbox"
                                  aria-invalid={false}
                                  aria-labelledby="field:::r46:::label"
                                  className="chakra-select__trigger emotion-105"
                                  data-part="trigger"
                                  data-scope="select"
                                  data-state="closed"
                                  dir="ltr"
                                  disabled={false}
                                  id="select:root_optionalObjectWithOneofs__oneof_select:trigger"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  role="combobox"
                                  type="button"
                                >
                                  <span
                                    className="chakra-select__valueText emotion-106"
                                    data-part="value-text"
                                    data-scope="select"
                                    dir="ltr"
                                  >
                                    Option 1
                                  </span>
                                </button>
                                <div
                                  className="chakra-select__indicatorGroup emotion-107"
                                >
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__indicator emotion-108"
                                    data-part="indicator"
                                    data-scope="select"
                                    data-state="closed"
                                    dir="ltr"
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="m6 9 6 6 6-6"
                                      />
                                    </svg>
                                  </div>
                                </div>
                              </div>
                            </div>
                            <div
                              className="chakra-select__positioner emotion-110"
                              data-part="positioner"
                              data-scope="select"
                              dir="ltr"
                              id="select:root_optionalObjectWithOneofs__oneof_select:positioner"
                              style={
                                {
                                  "isolation": "isolate",
                                  "left": "0px",
                                  "maxHeight": undefined,
                                  "maxWidth": undefined,
                                  "minWidth": undefined,
                                  "pointerEvents": "none",
                                  "position": "absolute",
                                  "top": "0px",
                                  "transform": "translate3d(0, -100vh, 0)",
                                  "width": "var(--reference-width)",
                                  "zIndex": "var(--z-index)",
                                }
                              }
                            >
                              <div
                                aria-labelledby="field:::r46:::label"
                                className="chakra-select__content emotion-111"
                                data-part="content"
                                data-scope="select"
                                data-state="closed"
                                dir="ltr"
                                hidden={true}
                                id="select:root_optionalObjectWithOneofs__oneof_select:content"
                                onKeyDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-selected={true}
                                  className="chakra-select__item emotion-112"
                                  data-part="item"
                                  data-scope="select"
                                  data-state="checked"
                                  data-value="0"
                                  dir="ltr"
                                  id="select:root_optionalObjectWithOneofs__oneof_select:option:0"
                                  onClick={[Function]}
                                  onPointerLeave={[Function]}
                                  onPointerMove={[Function]}
                                  role="option"
                                >
                                  Option 1
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__itemIndicator emotion-113"
                                    data-part="item-indicator"
                                    data-scope="select"
                                    data-state="checked"
                                    hidden={false}
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20 6 9 17l-5-5"
                                      />
                                    </svg>
                                  </div>
                                </div>
                                <div
                                  aria-selected={false}
                                  className="chakra-select__item emotion-112"
                                  data-part="item"
                                  data-scope="select"
                                  data-state="unchecked"
                                  data-value="1"
                                  dir="ltr"
                                  id="select:root_optionalObjectWithOneofs__oneof_select:option:1"
                                  onClick={[Function]}
                                  onPointerLeave={[Function]}
                                  onPointerMove={[Function]}
                                  role="option"
                                >
                                  Option 2
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__itemIndicator emotion-113"
                                    data-part="item-indicator"
                                    data-scope="select"
                                    data-state="unchecked"
                                    hidden={true}
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20 6 9 17l-5-5"
                                      />
                                    </svg>
                                  </div>
                                </div>
                                <div
                                  aria-selected={false}
                                  className="chakra-select__item emotion-112"
                                  data-part="item"
                                  data-scope="select"
                                  data-state="unchecked"
                                  data-value="2"
                                  dir="ltr"
                                  id="select:root_optionalObjectWithOneofs__oneof_select:option:2"
                                  onClick={[Function]}
                                  onPointerLeave={[Function]}
                                  onPointerMove={[Function]}
                                  role="option"
                                >
                                  Option 3
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__itemIndicator emotion-113"
                                    data-part="item-indicator"
                                    data-scope="select"
                                    data-state="unchecked"
                                    hidden={true}
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20 6 9 17l-5-5"
                                      />
                                    </svg>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r48:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_optionalObjectWithOneofs__title"
                            >
                              <h5
                                className="chakra-heading emotion-3"
                              >
                                optionalObjectWithOneofs
                              </h5>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            >
                              <div>
                                <div
                                  className="rjsf-field rjsf-field-string"
                                >
                                  <fieldset
                                    aria-labelledby="fieldset:::r49:::legend"
                                    className="fieldset__root emotion-0"
                                    data-part="root"
                                    data-scope="fieldset"
                                    disabled={false}
                                  >
                                    <div
                                      className="fieldset__content emotion-1"
                                    >
                                      <div
                                        className="chakra-field__root emotion-14"
                                        data-disabled=""
                                        data-part="root"
                                        data-readonly=""
                                        data-scope="field"
                                        id="field:::r4a:"
                                        role="group"
                                      >
                                        <label
                                          className="chakra-field__label emotion-15"
                                          data-disabled=""
                                          data-part="label"
                                          data-readonly=""
                                          data-scope="field"
                                          htmlFor=":r4a:"
                                          id="field:::r4a:::label"
                                        >
                                          name
                                        </label>
                                        <input
                                          aria-describedby="root_optionalObjectWithOneofs_name__error root_optionalObjectWithOneofs_name__description root_optionalObjectWithOneofs_name__help"
                                          autoFocus={false}
                                          className="chakra-input emotion-16"
                                          data-part="input"
                                          data-readonly=""
                                          data-scope="field"
                                          disabled={true}
                                          id="root_optionalObjectWithOneofs_name"
                                          name="root_optionalObjectWithOneofs_name"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder=""
                                          readOnly={true}
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </fieldset>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-undefined"
            >
              <fieldset
                aria-labelledby="fieldset:::r4b:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-card__root emotion-97"
                  >
                    <div
                      className="chakra-card__body emotion-98"
                    >
                      <div
                        className="emotion-99"
                      >
                        <div
                          className="chakra-field__root emotion-100"
                          data-part="root"
                          data-scope="field"
                          id="field:::r4c:"
                          role="group"
                        >
                          <label
                            className="chakra-field__label emotion-15"
                            data-part="label"
                            data-scope="field"
                            htmlFor=":r4c:"
                            id="field:::r4c:::label"
                          >
                            optionalArrayWithAnyofs
                          </label>
                          <div
                            aria-describedby="root_optionalArrayWithAnyofs__anyof_select__error root_optionalArrayWithAnyofs__anyof_select__description root_optionalArrayWithAnyofs__anyof_select__help"
                            className="chakra-select__root emotion-102"
                            data-part="root"
                            data-scope="select"
                            dir="ltr"
                            id="select:root_optionalArrayWithAnyofs__anyof_select"
                            onBlur={[Function]}
                            onFocus={[Function]}
                          >
                            <select
                              aria-hidden={true}
                              aria-labelledby="field:::r4c:::label"
                              defaultValue="0"
                              disabled={false}
                              id=":r4c:"
                              multiple={false}
                              name="root_optionalArrayWithAnyofs__anyof_select"
                              onFocus={[Function]}
                              required={false}
                              style={
                                {
                                  "border": "0",
                                  "clip": "rect(0 0 0 0)",
                                  "height": "1px",
                                  "margin": "-1px",
                                  "overflow": "hidden",
                                  "padding": "0",
                                  "position": "absolute",
                                  "whiteSpace": "nowrap",
                                  "width": "1px",
                                  "wordWrap": "normal",
                                }
                              }
                              tabIndex={-1}
                            >
                              <option
                                disabled={false}
                                value="0"
                              >
                                Option 1
                              </option>
                              <option
                                disabled={false}
                                value="1"
                              >
                                Option 2
                              </option>
                              <option
                                disabled={false}
                                value="2"
                              >
                                Option 3
                              </option>
                            </select>
                            <div
                              className="chakra-select__control emotion-103"
                              data-part="control"
                              data-scope="select"
                              data-state="closed"
                              dir="ltr"
                              id="select:root_optionalArrayWithAnyofs__anyof_select:control"
                            >
                              <div
                                className="chakra-select__control emotion-103"
                                data-part="control"
                                data-scope="select"
                                data-state="closed"
                                dir="ltr"
                                id="select:root_optionalArrayWithAnyofs__anyof_select:control"
                              >
                                <button
                                  aria-controls="select:root_optionalArrayWithAnyofs__anyof_select:content"
                                  aria-expanded={false}
                                  aria-haspopup="listbox"
                                  aria-invalid={false}
                                  aria-labelledby="field:::r4c:::label"
                                  className="chakra-select__trigger emotion-105"
                                  data-part="trigger"
                                  data-scope="select"
                                  data-state="closed"
                                  dir="ltr"
                                  disabled={false}
                                  id="select:root_optionalArrayWithAnyofs__anyof_select:trigger"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  role="combobox"
                                  type="button"
                                >
                                  <span
                                    className="chakra-select__valueText emotion-106"
                                    data-part="value-text"
                                    data-scope="select"
                                    dir="ltr"
                                  >
                                    Option 1
                                  </span>
                                </button>
                                <div
                                  className="chakra-select__indicatorGroup emotion-107"
                                >
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__indicator emotion-108"
                                    data-part="indicator"
                                    data-scope="select"
                                    data-state="closed"
                                    dir="ltr"
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="m6 9 6 6 6-6"
                                      />
                                    </svg>
                                  </div>
                                </div>
                              </div>
                            </div>
                            <div
                              className="chakra-select__positioner emotion-110"
                              data-part="positioner"
                              data-scope="select"
                              dir="ltr"
                              id="select:root_optionalArrayWithAnyofs__anyof_select:positioner"
                              style={
                                {
                                  "isolation": "isolate",
                                  "left": "0px",
                                  "maxHeight": undefined,
                                  "maxWidth": undefined,
                                  "minWidth": undefined,
                                  "pointerEvents": "none",
                                  "position": "absolute",
                                  "top": "0px",
                                  "transform": "translate3d(0, -100vh, 0)",
                                  "width": "var(--reference-width)",
                                  "zIndex": "var(--z-index)",
                                }
                              }
                            >
                              <div
                                aria-labelledby="field:::r4c:::label"
                                className="chakra-select__content emotion-111"
                                data-part="content"
                                data-scope="select"
                                data-state="closed"
                                dir="ltr"
                                hidden={true}
                                id="select:root_optionalArrayWithAnyofs__anyof_select:content"
                                onKeyDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-selected={true}
                                  className="chakra-select__item emotion-112"
                                  data-part="item"
                                  data-scope="select"
                                  data-state="checked"
                                  data-value="0"
                                  dir="ltr"
                                  id="select:root_optionalArrayWithAnyofs__anyof_select:option:0"
                                  onClick={[Function]}
                                  onPointerLeave={[Function]}
                                  onPointerMove={[Function]}
                                  role="option"
                                >
                                  Option 1
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__itemIndicator emotion-113"
                                    data-part="item-indicator"
                                    data-scope="select"
                                    data-state="checked"
                                    hidden={false}
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20 6 9 17l-5-5"
                                      />
                                    </svg>
                                  </div>
                                </div>
                                <div
                                  aria-selected={false}
                                  className="chakra-select__item emotion-112"
                                  data-part="item"
                                  data-scope="select"
                                  data-state="unchecked"
                                  data-value="1"
                                  dir="ltr"
                                  id="select:root_optionalArrayWithAnyofs__anyof_select:option:1"
                                  onClick={[Function]}
                                  onPointerLeave={[Function]}
                                  onPointerMove={[Function]}
                                  role="option"
                                >
                                  Option 2
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__itemIndicator emotion-113"
                                    data-part="item-indicator"
                                    data-scope="select"
                                    data-state="unchecked"
                                    hidden={true}
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20 6 9 17l-5-5"
                                      />
                                    </svg>
                                  </div>
                                </div>
                                <div
                                  aria-selected={false}
                                  className="chakra-select__item emotion-112"
                                  data-part="item"
                                  data-scope="select"
                                  data-state="unchecked"
                                  data-value="2"
                                  dir="ltr"
                                  id="select:root_optionalArrayWithAnyofs__anyof_select:option:2"
                                  onClick={[Function]}
                                  onPointerLeave={[Function]}
                                  onPointerMove={[Function]}
                                  role="option"
                                >
                                  Option 3
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__itemIndicator emotion-113"
                                    data-part="item-indicator"
                                    data-scope="select"
                                    data-state="unchecked"
                                    hidden={true}
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20 6 9 17l-5-5"
                                      />
                                    </svg>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r4e:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_optionalArrayWithAnyofs__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  optionalArrayWithAnyofs
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-44"
                              >
                                <div />
                                <div
                                  className="emotion-45"
                                >
                                  <div
                                    className="emotion-46"
                                  >
                                    <button
                                      className="chakra-button rjsf-array-item-add emotion-47"
                                      disabled={false}
                                      id="root_optionalArrayWithAnyofs__add"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="lucide lucide-plus"
                                        fill="none"
                                        height={24}
                                        stroke="currentColor"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth={2}
                                        viewBox="0 0 24 24"
                                        width={24}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5 12h14"
                                        />
                                        <path
                                          d="M12 5v14"
                                        />
                                      </svg>
                                      Add Item
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-167"
  >
    <button
      className="chakra-button emotion-47"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields optional data controls does not show optional controls when not turned on in uiSchema, readonly and no formData 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-top: var(--chakra-spacing-1);
  margin-bottom: var(--chakra-spacing-4);
}

@layer recipes {
  .emotion-3 {
    font-family: var(--chakra-fonts-heading);
    font-weight: var(--chakra-font-weights-semibold);
    font-size: var(--chakra-font-sizes-xl);
    line-height: 1.875rem;
  }
}

@layer recipes {
  .emotion-4 {
    display: block;
    border-color: var(--chakra-colors-border);
    --separator-thickness: 1px;
    border-style: solid;
    border-top-width: var(--separator-thickness);
  }
}

.emotion-5 {
  display: grid;
  gap: var(--chakra-spacing-4);
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-14 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-14 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-15 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    text-align: start;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    font-weight: var(--chakra-font-weights-medium);
    gap: var(--chakra-spacing-1);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .emotion-15:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

@layer recipes {
  .emotion-16 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-16:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-16:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-16:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-44 {
  display: grid;
}

.emotion-45 {
  justify-self: flex-end;
}

.emotion-46 {
  margin-top: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-47 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-47:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-47:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-47 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-47:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-47:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

.emotion-97 {
  margin-bottom: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-97 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    position: relative;
    min-width: 0;
    word-wrap: break-word;
    border-radius: var(--chakra-radii-l3);
    color: var(--chakra-colors-fg);
    text-align: start;
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --card-padding: var(--chakra-spacing-6);
  }
}

.emotion-98 {
  padding-bottom: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-98 {
    padding: var(--card-padding);
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

.emotion-99 {
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-100 {
  margin-bottom: var(--chakra-spacing-1);
  position: relative;
}

@layer recipes {
  .emotion-100 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-102 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: var(--chakra-spacing-1\\.5);
    width: var(--chakra-sizes-full);
    --select-trigger-height: var(--chakra-sizes-10);
    --select-trigger-padding-x: var(--chakra-spacing-3);
  }
}

@layer recipes {
  .emotion-103 {
    position: relative;
  }
}

@layer recipes {
  .emotion-105 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    width: var(--chakra-sizes-full);
    min-height: var(--select-trigger-height);
    --input-height: var(--select-trigger-height);
    padding-inline: var(--select-trigger-padding-x);
    border-radius: var(--chakra-radii-l2);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    text-align: start;
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
  }

  .emotion-105:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }

  .emotion-105:is(:placeholder-shown, [data-placeholder-shown]) {
    --mix-color: color-mix(in srgb, var(--chakra-colors-fg-muted) 80%, transparent);
    color: var(--mix-color, var(--chakra-colors-fg-muted));
  }

  .emotion-105:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-105:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-105:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    border-color: var(--chakra-colors-border-emphasized);
  }
}

@layer recipes {
  .emotion-106 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    text-wrap: wrap;
    max-width: 80%;
  }
}

@layer recipes {
  .emotion-107 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-1);
    position: absolute;
    inset-inline-end: 0;
    top: 0;
    bottom: 0;
    padding-inline: var(--select-trigger-padding-x);
    pointer-events: none;
  }
}

@layer recipes {
  .emotion-108 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    color: var(--chakra-colors-fg-muted);
  }

  .emotion-108:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    color: var(--chakra-colors-fg-subtle);
  }

  .emotion-108:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    color: var(--chakra-colors-fg-error);
  }

  .emotion-108 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

.emotion-109 {
  fill: none;
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.emotion-110 {
  min-width: 100%!important;
  z-index: 2!important;
  top: calc(100% + 5px)!important;
}

@layer recipes {
  .emotion-111 {
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    z-index: var(--chakra-z-index-dropdown);
    border-radius: var(--chakra-radii-l2);
    outline: 0;
    max-height: var(--chakra-sizes-96);
    overflow-y: auto;
    box-shadow: var(--chakra-shadows-md);
    padding: var(--chakra-spacing-1);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-111:is([open], [data-open], [data-state=open]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fast);
    animation-duration: var(--chakra-durations-fast);
  }

  .emotion-111:is([open], [data-open], [data-state=open])[data-placement^=top] {
    -webkit-animation-name: slide-from-bottom,fade-in;
    animation-name: slide-from-bottom,fade-in;
  }

  .emotion-111:is([open], [data-open], [data-state=open])[data-placement^=bottom] {
    -webkit-animation-name: slide-from-top,fade-in;
    animation-name: slide-from-top,fade-in;
  }

  .emotion-111:is([open], [data-open], [data-state=open])[data-placement^=left] {
    -webkit-animation-name: slide-from-right,fade-in;
    animation-name: slide-from-right,fade-in;
  }

  .emotion-111:is([open], [data-open], [data-state=open])[data-placement^=right] {
    -webkit-animation-name: slide-from-left,fade-in;
    animation-name: slide-from-left,fade-in;
  }

  .emotion-111:is([closed], [data-closed], [data-state=closed]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fastest);
    animation-duration: var(--chakra-durations-fastest);
  }

  .emotion-111:is([closed], [data-closed], [data-state=closed])[data-placement^=top] {
    -webkit-animation-name: slide-to-bottom,fade-out;
    animation-name: slide-to-bottom,fade-out;
  }

  .emotion-111:is([closed], [data-closed], [data-state=closed])[data-placement^=bottom] {
    -webkit-animation-name: slide-to-top,fade-out;
    animation-name: slide-to-top,fade-out;
  }

  .emotion-111:is([closed], [data-closed], [data-state=closed])[data-placement^=left] {
    -webkit-animation-name: slide-to-right,fade-out;
    animation-name: slide-to-right,fade-out;
  }

  .emotion-111:is([closed], [data-closed], [data-state=closed])[data-placement^=right] {
    -webkit-animation-name: slide-to-left,fade-out;
    animation-name: slide-to-left,fade-out;
  }
}

@layer recipes {
  .emotion-112 {
    position: relative;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-2);
    cursor: var(--chakra-cursor-option);
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    text-align: start;
    border-radius: var(--chakra-radii-l1);
    padding-block: var(--chakra-spacing-1\\.5);
    padding-inline: var(--chakra-spacing-2);
  }

  .emotion-112[data-highlighted] {
    --mix-background: color-mix(in srgb, var(--chakra-colors-bg-emphasized) 60%, transparent);
    background: var(--mix-background, var(--chakra-colors-bg-emphasized));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-bg-emphasized));
  }

  .emotion-112:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    pointer-events: none;
    opacity: 0.5;
  }

  .emotion-112 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

@layer recipes {
  .emotion-113 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
  }
}

.emotion-167 {
  margin-top: var(--chakra-spacing-3);
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-object"
  >
    <fieldset
      aria-labelledby="fieldset:::r5g:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="emotion-2"
          id="root__title"
        >
          <h5
            className="chakra-heading emotion-3"
          >
            test
          </h5>
          <span
            aria-orientation="horizontal"
            className="chakra-separator emotion-4"
            role="separator"
          />
        </div>
        <div
          className="emotion-5"
        >
          <div />
          <div>
            <div
              className="rjsf-field rjsf-field-object"
            >
              <fieldset
                aria-labelledby="fieldset:::r5h:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="emotion-2"
                    id="root_nestedObjectOptional__title"
                  >
                    <h5
                      className="chakra-heading emotion-3"
                    >
                      nestedObjectOptional
                    </h5>
                    <span
                      aria-orientation="horizontal"
                      className="chakra-separator emotion-4"
                      role="separator"
                    />
                  </div>
                  <div
                    className="emotion-5"
                  >
                    <div />
                    <div>
                      <div
                        className="rjsf-field rjsf-field-string"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r5i:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="chakra-field__root emotion-14"
                              data-disabled=""
                              data-part="root"
                              data-readonly=""
                              data-scope="field"
                              id="field:::r5j:"
                              role="group"
                            >
                              <label
                                className="chakra-field__label emotion-15"
                                data-disabled=""
                                data-part="label"
                                data-readonly=""
                                data-scope="field"
                                htmlFor=":r5j:"
                                id="field:::r5j:::label"
                              >
                                test
                              </label>
                              <input
                                aria-describedby="root_nestedObjectOptional_test__error root_nestedObjectOptional_test__description root_nestedObjectOptional_test__help"
                                autoFocus={false}
                                className="chakra-input emotion-16"
                                data-part="input"
                                data-readonly=""
                                data-scope="field"
                                disabled={true}
                                id="root_nestedObjectOptional_test"
                                name="root_nestedObjectOptional_test"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder=""
                                readOnly={true}
                                required={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r5k:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_nestedObjectOptional_deepObjectOptional__title"
                            >
                              <h5
                                className="chakra-heading emotion-3"
                              >
                                deepObjectOptional
                              </h5>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            >
                              <div />
                              <div>
                                <div
                                  className="rjsf-field rjsf-field-string"
                                >
                                  <fieldset
                                    aria-labelledby="fieldset:::r5l:::legend"
                                    className="fieldset__root emotion-0"
                                    data-part="root"
                                    data-scope="fieldset"
                                    disabled={false}
                                  >
                                    <div
                                      className="fieldset__content emotion-1"
                                    >
                                      <div
                                        className="chakra-field__root emotion-14"
                                        data-disabled=""
                                        data-part="root"
                                        data-readonly=""
                                        data-scope="field"
                                        id="field:::r5m:"
                                        role="group"
                                      >
                                        <label
                                          className="chakra-field__label emotion-15"
                                          data-disabled=""
                                          data-part="label"
                                          data-readonly=""
                                          data-scope="field"
                                          htmlFor=":r5m:"
                                          id="field:::r5m:::label"
                                        >
                                          deepTest
                                        </label>
                                        <input
                                          aria-describedby="root_nestedObjectOptional_deepObjectOptional_deepTest__error root_nestedObjectOptional_deepObjectOptional_deepTest__description root_nestedObjectOptional_deepObjectOptional_deepTest__help"
                                          autoFocus={false}
                                          className="chakra-input emotion-16"
                                          data-part="input"
                                          data-readonly=""
                                          data-scope="field"
                                          disabled={true}
                                          id="root_nestedObjectOptional_deepObjectOptional_deepTest"
                                          name="root_nestedObjectOptional_deepObjectOptional_deepTest"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder=""
                                          readOnly={true}
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </fieldset>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r5n:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_nestedObjectOptional_deepObject__title"
                            >
                              <h5
                                className="chakra-heading emotion-3"
                              >
                                deepObject
                              </h5>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            >
                              <div />
                              <div>
                                <div
                                  className="rjsf-field rjsf-field-string"
                                >
                                  <fieldset
                                    aria-labelledby="fieldset:::r5o:::legend"
                                    className="fieldset__root emotion-0"
                                    data-part="root"
                                    data-scope="fieldset"
                                    disabled={false}
                                  >
                                    <div
                                      className="fieldset__content emotion-1"
                                    >
                                      <div
                                        className="chakra-field__root emotion-14"
                                        data-disabled=""
                                        data-part="root"
                                        data-readonly=""
                                        data-scope="field"
                                        id="field:::r5p:"
                                        role="group"
                                      >
                                        <label
                                          className="chakra-field__label emotion-15"
                                          data-disabled=""
                                          data-part="label"
                                          data-readonly=""
                                          data-scope="field"
                                          htmlFor=":r5p:"
                                          id="field:::r5p:::label"
                                        >
                                          deepTest
                                        </label>
                                        <input
                                          aria-describedby="root_nestedObjectOptional_deepObject_deepTest__error root_nestedObjectOptional_deepObject_deepTest__description root_nestedObjectOptional_deepObject_deepTest__help"
                                          autoFocus={false}
                                          className="chakra-input emotion-16"
                                          data-part="input"
                                          data-readonly=""
                                          data-scope="field"
                                          disabled={true}
                                          id="root_nestedObjectOptional_deepObject_deepTest"
                                          name="root_nestedObjectOptional_deepObject_deepTest"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder=""
                                          readOnly={true}
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </fieldset>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r5q:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_nestedObjectOptional_deepArrayOptional__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  deepArrayOptional
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-44"
                              >
                                <div />
                                <div
                                  className="emotion-45"
                                >
                                  <div
                                    className="emotion-46"
                                  >
                                    <button
                                      className="chakra-button rjsf-array-item-add emotion-47"
                                      disabled={true}
                                      id="root_nestedObjectOptional_deepArrayOptional__add"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="lucide lucide-plus"
                                        fill="none"
                                        height={24}
                                        stroke="currentColor"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth={2}
                                        viewBox="0 0 24 24"
                                        width={24}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5 12h14"
                                        />
                                        <path
                                          d="M12 5v14"
                                        />
                                      </svg>
                                      Add Item
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r5r:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_nestedObjectOptional_deepArrayOptional2__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  deepArrayOptional2
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-44"
                              >
                                <div />
                                <div
                                  className="emotion-45"
                                >
                                  <div
                                    className="emotion-46"
                                  >
                                    <button
                                      className="chakra-button rjsf-array-item-add emotion-47"
                                      disabled={true}
                                      id="root_nestedObjectOptional_deepArrayOptional2__add"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="lucide lucide-plus"
                                        fill="none"
                                        height={24}
                                        stroke="currentColor"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth={2}
                                        viewBox="0 0 24 24"
                                        width={24}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5 12h14"
                                        />
                                        <path
                                          d="M12 5v14"
                                        />
                                      </svg>
                                      Add Item
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r5s:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_nestedObjectOptional_deepArray__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  deepArray
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-44"
                              >
                                <div />
                                <div
                                  className="emotion-45"
                                >
                                  <div
                                    className="emotion-46"
                                  >
                                    <button
                                      className="chakra-button rjsf-array-item-add emotion-47"
                                      disabled={true}
                                      id="root_nestedObjectOptional_deepArray__add"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="lucide lucide-plus"
                                        fill="none"
                                        height={24}
                                        stroke="currentColor"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth={2}
                                        viewBox="0 0 24 24"
                                        width={24}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5 12h14"
                                        />
                                        <path
                                          d="M12 5v14"
                                        />
                                      </svg>
                                      Add Item
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-array"
            >
              <fieldset
                aria-labelledby="fieldset:::r5t:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div>
                    <div
                      className="emotion-2"
                      id="root_nestedArrayOptional__title"
                    >
                      <h5
                        className="chakra-heading emotion-3"
                      >
                        nestedArrayOptional
                      </h5>
                      <span
                        aria-orientation="horizontal"
                        className="chakra-separator emotion-4"
                        role="separator"
                      />
                    </div>
                    <div
                      className="emotion-44"
                    >
                      <div />
                      <div
                        className="emotion-45"
                      >
                        <div
                          className="emotion-46"
                        >
                          <button
                            className="chakra-button rjsf-array-item-add emotion-47"
                            disabled={true}
                            id="root_nestedArrayOptional__add"
                            onClick={[Function]}
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              className="lucide lucide-plus"
                              fill="none"
                              height={24}
                              stroke="currentColor"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              viewBox="0 0 24 24"
                              width={24}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M5 12h14"
                              />
                              <path
                                d="M12 5v14"
                              />
                            </svg>
                            Add Item
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-object"
            >
              <fieldset
                aria-labelledby="fieldset:::r5u:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="emotion-2"
                    id="root_nestedObject__title"
                  >
                    <h5
                      className="chakra-heading emotion-3"
                    >
                      nestedObject
                    </h5>
                    <span
                      aria-orientation="horizontal"
                      className="chakra-separator emotion-4"
                      role="separator"
                    />
                  </div>
                  <div
                    className="emotion-5"
                  >
                    <div />
                    <div>
                      <div
                        className="rjsf-field rjsf-field-string"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r5v:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="chakra-field__root emotion-14"
                              data-disabled=""
                              data-part="root"
                              data-readonly=""
                              data-scope="field"
                              id="field:::r60:"
                              role="group"
                            >
                              <label
                                className="chakra-field__label emotion-15"
                                data-disabled=""
                                data-part="label"
                                data-readonly=""
                                data-scope="field"
                                htmlFor=":r60:"
                                id="field:::r60:::label"
                              >
                                test
                              </label>
                              <input
                                aria-describedby="root_nestedObject_test__error root_nestedObject_test__description root_nestedObject_test__help"
                                autoFocus={false}
                                className="chakra-input emotion-16"
                                data-part="input"
                                data-readonly=""
                                data-scope="field"
                                disabled={true}
                                id="root_nestedObject_test"
                                name="root_nestedObject_test"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder=""
                                readOnly={true}
                                required={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-array"
            >
              <fieldset
                aria-labelledby="fieldset:::r61:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div>
                    <div
                      className="emotion-2"
                      id="root_nestedArray__title"
                    >
                      <h5
                        className="chakra-heading emotion-3"
                      >
                        nestedArray
                      </h5>
                      <span
                        aria-orientation="horizontal"
                        className="chakra-separator emotion-4"
                        role="separator"
                      />
                    </div>
                    <div
                      className="emotion-44"
                    >
                      <div />
                      <div
                        className="emotion-45"
                      >
                        <div
                          className="emotion-46"
                        >
                          <button
                            className="chakra-button rjsf-array-item-add emotion-47"
                            disabled={true}
                            id="root_nestedArray__add"
                            onClick={[Function]}
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              className="lucide lucide-plus"
                              fill="none"
                              height={24}
                              stroke="currentColor"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              viewBox="0 0 24 24"
                              width={24}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M5 12h14"
                              />
                              <path
                                d="M12 5v14"
                              />
                            </svg>
                            Add Item
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-undefined"
            >
              <fieldset
                aria-labelledby="fieldset:::r62:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-card__root emotion-97"
                  >
                    <div
                      className="chakra-card__body emotion-98"
                    >
                      <div
                        className="emotion-99"
                      >
                        <div
                          className="chakra-field__root emotion-100"
                          data-disabled=""
                          data-part="root"
                          data-readonly=""
                          data-scope="field"
                          id="field:::r63:"
                          role="group"
                        >
                          <label
                            className="chakra-field__label emotion-15"
                            data-disabled=""
                            data-part="label"
                            data-readonly=""
                            data-scope="field"
                            htmlFor=":r63:"
                            id="field:::r63:::label"
                          >
                            optionalObjectWithOneofs
                          </label>
                          <div
                            aria-describedby="root_optionalObjectWithOneofs__oneof_select__error root_optionalObjectWithOneofs__oneof_select__description root_optionalObjectWithOneofs__oneof_select__help"
                            className="chakra-select__root emotion-102"
                            data-part="root"
                            data-readonly=""
                            data-scope="select"
                            dir="ltr"
                            id="select:root_optionalObjectWithOneofs__oneof_select"
                            onBlur={[Function]}
                            onFocus={[Function]}
                          >
                            <select
                              aria-hidden={true}
                              aria-labelledby="field:::r63:::label"
                              defaultValue="0"
                              disabled={true}
                              id=":r63:"
                              multiple={false}
                              name="root_optionalObjectWithOneofs__oneof_select"
                              onFocus={[Function]}
                              required={false}
                              style={
                                {
                                  "border": "0",
                                  "clip": "rect(0 0 0 0)",
                                  "height": "1px",
                                  "margin": "-1px",
                                  "overflow": "hidden",
                                  "padding": "0",
                                  "position": "absolute",
                                  "whiteSpace": "nowrap",
                                  "width": "1px",
                                  "wordWrap": "normal",
                                }
                              }
                              tabIndex={-1}
                            >
                              <option
                                disabled={false}
                                value="0"
                              >
                                Option 1
                              </option>
                              <option
                                disabled={false}
                                value="1"
                              >
                                Option 2
                              </option>
                              <option
                                disabled={false}
                                value="2"
                              >
                                Option 3
                              </option>
                            </select>
                            <div
                              className="chakra-select__control emotion-103"
                              data-disabled=""
                              data-part="control"
                              data-scope="select"
                              data-state="closed"
                              dir="ltr"
                              id="select:root_optionalObjectWithOneofs__oneof_select:control"
                            >
                              <div
                                className="chakra-select__control emotion-103"
                                data-disabled=""
                                data-part="control"
                                data-scope="select"
                                data-state="closed"
                                dir="ltr"
                                id="select:root_optionalObjectWithOneofs__oneof_select:control"
                              >
                                <button
                                  aria-controls="select:root_optionalObjectWithOneofs__oneof_select:content"
                                  aria-expanded={false}
                                  aria-haspopup="listbox"
                                  aria-invalid={false}
                                  aria-labelledby="field:::r63:::label"
                                  className="chakra-select__trigger emotion-105"
                                  data-disabled=""
                                  data-part="trigger"
                                  data-readonly=""
                                  data-scope="select"
                                  data-state="closed"
                                  dir="ltr"
                                  disabled={true}
                                  id="select:root_optionalObjectWithOneofs__oneof_select:trigger"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  role="combobox"
                                  type="button"
                                >
                                  <span
                                    className="chakra-select__valueText emotion-106"
                                    data-disabled=""
                                    data-part="value-text"
                                    data-scope="select"
                                    dir="ltr"
                                  >
                                    Option 1
                                  </span>
                                </button>
                                <div
                                  className="chakra-select__indicatorGroup emotion-107"
                                >
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__indicator emotion-108"
                                    data-disabled=""
                                    data-part="indicator"
                                    data-readonly=""
                                    data-scope="select"
                                    data-state="closed"
                                    dir="ltr"
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="m6 9 6 6 6-6"
                                      />
                                    </svg>
                                  </div>
                                </div>
                              </div>
                            </div>
                            <div
                              className="chakra-select__positioner emotion-110"
                              data-part="positioner"
                              data-scope="select"
                              dir="ltr"
                              id="select:root_optionalObjectWithOneofs__oneof_select:positioner"
                              style={
                                {
                                  "isolation": "isolate",
                                  "left": "0px",
                                  "maxHeight": undefined,
                                  "maxWidth": undefined,
                                  "minWidth": undefined,
                                  "pointerEvents": "none",
                                  "position": "absolute",
                                  "top": "0px",
                                  "transform": "translate3d(0, -100vh, 0)",
                                  "width": "var(--reference-width)",
                                  "zIndex": "var(--z-index)",
                                }
                              }
                            >
                              <div
                                aria-labelledby="field:::r63:::label"
                                className="chakra-select__content emotion-111"
                                data-part="content"
                                data-scope="select"
                                data-state="closed"
                                dir="ltr"
                                hidden={true}
                                id="select:root_optionalObjectWithOneofs__oneof_select:content"
                                onKeyDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-disabled="true"
                                  aria-selected={true}
                                  className="chakra-select__item emotion-112"
                                  data-disabled=""
                                  data-part="item"
                                  data-scope="select"
                                  data-state="checked"
                                  data-value="0"
                                  dir="ltr"
                                  id="select:root_optionalObjectWithOneofs__oneof_select:option:0"
                                  onClick={[Function]}
                                  onPointerLeave={[Function]}
                                  onPointerMove={[Function]}
                                  role="option"
                                >
                                  Option 1
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__itemIndicator emotion-113"
                                    data-part="item-indicator"
                                    data-scope="select"
                                    data-state="checked"
                                    hidden={false}
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20 6 9 17l-5-5"
                                      />
                                    </svg>
                                  </div>
                                </div>
                                <div
                                  aria-disabled="true"
                                  aria-selected={false}
                                  className="chakra-select__item emotion-112"
                                  data-disabled=""
                                  data-part="item"
                                  data-scope="select"
                                  data-state="unchecked"
                                  data-value="1"
                                  dir="ltr"
                                  id="select:root_optionalObjectWithOneofs__oneof_select:option:1"
                                  onClick={[Function]}
                                  onPointerLeave={[Function]}
                                  onPointerMove={[Function]}
                                  role="option"
                                >
                                  Option 2
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__itemIndicator emotion-113"
                                    data-part="item-indicator"
                                    data-scope="select"
                                    data-state="unchecked"
                                    hidden={true}
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20 6 9 17l-5-5"
                                      />
                                    </svg>
                                  </div>
                                </div>
                                <div
                                  aria-disabled="true"
                                  aria-selected={false}
                                  className="chakra-select__item emotion-112"
                                  data-disabled=""
                                  data-part="item"
                                  data-scope="select"
                                  data-state="unchecked"
                                  data-value="2"
                                  dir="ltr"
                                  id="select:root_optionalObjectWithOneofs__oneof_select:option:2"
                                  onClick={[Function]}
                                  onPointerLeave={[Function]}
                                  onPointerMove={[Function]}
                                  role="option"
                                >
                                  Option 3
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__itemIndicator emotion-113"
                                    data-part="item-indicator"
                                    data-scope="select"
                                    data-state="unchecked"
                                    hidden={true}
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20 6 9 17l-5-5"
                                      />
                                    </svg>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r65:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_optionalObjectWithOneofs__title"
                            >
                              <h5
                                className="chakra-heading emotion-3"
                              >
                                optionalObjectWithOneofs
                              </h5>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            >
                              <div />
                              <div>
                                <div
                                  className="rjsf-field rjsf-field-string"
                                >
                                  <fieldset
                                    aria-labelledby="fieldset:::r66:::legend"
                                    className="fieldset__root emotion-0"
                                    data-part="root"
                                    data-scope="fieldset"
                                    disabled={false}
                                  >
                                    <div
                                      className="fieldset__content emotion-1"
                                    >
                                      <div
                                        className="chakra-field__root emotion-14"
                                        data-disabled=""
                                        data-part="root"
                                        data-readonly=""
                                        data-scope="field"
                                        id="field:::r67:"
                                        role="group"
                                      >
                                        <label
                                          className="chakra-field__label emotion-15"
                                          data-disabled=""
                                          data-part="label"
                                          data-readonly=""
                                          data-scope="field"
                                          htmlFor=":r67:"
                                          id="field:::r67:::label"
                                        >
                                          name
                                        </label>
                                        <input
                                          aria-describedby="root_optionalObjectWithOneofs_name__error root_optionalObjectWithOneofs_name__description root_optionalObjectWithOneofs_name__help"
                                          autoFocus={false}
                                          className="chakra-input emotion-16"
                                          data-part="input"
                                          data-readonly=""
                                          data-scope="field"
                                          disabled={true}
                                          id="root_optionalObjectWithOneofs_name"
                                          name="root_optionalObjectWithOneofs_name"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder=""
                                          readOnly={true}
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </fieldset>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-undefined"
            >
              <fieldset
                aria-labelledby="fieldset:::r68:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-card__root emotion-97"
                  >
                    <div
                      className="chakra-card__body emotion-98"
                    >
                      <div
                        className="emotion-99"
                      >
                        <div
                          className="chakra-field__root emotion-100"
                          data-disabled=""
                          data-part="root"
                          data-readonly=""
                          data-scope="field"
                          id="field:::r69:"
                          role="group"
                        >
                          <label
                            className="chakra-field__label emotion-15"
                            data-disabled=""
                            data-part="label"
                            data-readonly=""
                            data-scope="field"
                            htmlFor=":r69:"
                            id="field:::r69:::label"
                          >
                            optionalArrayWithAnyofs
                          </label>
                          <div
                            aria-describedby="root_optionalArrayWithAnyofs__anyof_select__error root_optionalArrayWithAnyofs__anyof_select__description root_optionalArrayWithAnyofs__anyof_select__help"
                            className="chakra-select__root emotion-102"
                            data-part="root"
                            data-readonly=""
                            data-scope="select"
                            dir="ltr"
                            id="select:root_optionalArrayWithAnyofs__anyof_select"
                            onBlur={[Function]}
                            onFocus={[Function]}
                          >
                            <select
                              aria-hidden={true}
                              aria-labelledby="field:::r69:::label"
                              defaultValue="0"
                              disabled={true}
                              id=":r69:"
                              multiple={false}
                              name="root_optionalArrayWithAnyofs__anyof_select"
                              onFocus={[Function]}
                              required={false}
                              style={
                                {
                                  "border": "0",
                                  "clip": "rect(0 0 0 0)",
                                  "height": "1px",
                                  "margin": "-1px",
                                  "overflow": "hidden",
                                  "padding": "0",
                                  "position": "absolute",
                                  "whiteSpace": "nowrap",
                                  "width": "1px",
                                  "wordWrap": "normal",
                                }
                              }
                              tabIndex={-1}
                            >
                              <option
                                disabled={false}
                                value="0"
                              >
                                Option 1
                              </option>
                              <option
                                disabled={false}
                                value="1"
                              >
                                Option 2
                              </option>
                              <option
                                disabled={false}
                                value="2"
                              >
                                Option 3
                              </option>
                            </select>
                            <div
                              className="chakra-select__control emotion-103"
                              data-disabled=""
                              data-part="control"
                              data-scope="select"
                              data-state="closed"
                              dir="ltr"
                              id="select:root_optionalArrayWithAnyofs__anyof_select:control"
                            >
                              <div
                                className="chakra-select__control emotion-103"
                                data-disabled=""
                                data-part="control"
                                data-scope="select"
                                data-state="closed"
                                dir="ltr"
                                id="select:root_optionalArrayWithAnyofs__anyof_select:control"
                              >
                                <button
                                  aria-controls="select:root_optionalArrayWithAnyofs__anyof_select:content"
                                  aria-expanded={false}
                                  aria-haspopup="listbox"
                                  aria-invalid={false}
                                  aria-labelledby="field:::r69:::label"
                                  className="chakra-select__trigger emotion-105"
                                  data-disabled=""
                                  data-part="trigger"
                                  data-readonly=""
                                  data-scope="select"
                                  data-state="closed"
                                  dir="ltr"
                                  disabled={true}
                                  id="select:root_optionalArrayWithAnyofs__anyof_select:trigger"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  role="combobox"
                                  type="button"
                                >
                                  <span
                                    className="chakra-select__valueText emotion-106"
                                    data-disabled=""
                                    data-part="value-text"
                                    data-scope="select"
                                    dir="ltr"
                                  >
                                    Option 1
                                  </span>
                                </button>
                                <div
                                  className="chakra-select__indicatorGroup emotion-107"
                                >
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__indicator emotion-108"
                                    data-disabled=""
                                    data-part="indicator"
                                    data-readonly=""
                                    data-scope="select"
                                    data-state="closed"
                                    dir="ltr"
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="m6 9 6 6 6-6"
                                      />
                                    </svg>
                                  </div>
                                </div>
                              </div>
                            </div>
                            <div
                              className="chakra-select__positioner emotion-110"
                              data-part="positioner"
                              data-scope="select"
                              dir="ltr"
                              id="select:root_optionalArrayWithAnyofs__anyof_select:positioner"
                              style={
                                {
                                  "isolation": "isolate",
                                  "left": "0px",
                                  "maxHeight": undefined,
                                  "maxWidth": undefined,
                                  "minWidth": undefined,
                                  "pointerEvents": "none",
                                  "position": "absolute",
                                  "top": "0px",
                                  "transform": "translate3d(0, -100vh, 0)",
                                  "width": "var(--reference-width)",
                                  "zIndex": "var(--z-index)",
                                }
                              }
                            >
                              <div
                                aria-labelledby="field:::r69:::label"
                                className="chakra-select__content emotion-111"
                                data-part="content"
                                data-scope="select"
                                data-state="closed"
                                dir="ltr"
                                hidden={true}
                                id="select:root_optionalArrayWithAnyofs__anyof_select:content"
                                onKeyDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-disabled="true"
                                  aria-selected={true}
                                  className="chakra-select__item emotion-112"
                                  data-disabled=""
                                  data-part="item"
                                  data-scope="select"
                                  data-state="checked"
                                  data-value="0"
                                  dir="ltr"
                                  id="select:root_optionalArrayWithAnyofs__anyof_select:option:0"
                                  onClick={[Function]}
                                  onPointerLeave={[Function]}
                                  onPointerMove={[Function]}
                                  role="option"
                                >
                                  Option 1
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__itemIndicator emotion-113"
                                    data-part="item-indicator"
                                    data-scope="select"
                                    data-state="checked"
                                    hidden={false}
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20 6 9 17l-5-5"
                                      />
                                    </svg>
                                  </div>
                                </div>
                                <div
                                  aria-disabled="true"
                                  aria-selected={false}
                                  className="chakra-select__item emotion-112"
                                  data-disabled=""
                                  data-part="item"
                                  data-scope="select"
                                  data-state="unchecked"
                                  data-value="1"
                                  dir="ltr"
                                  id="select:root_optionalArrayWithAnyofs__anyof_select:option:1"
                                  onClick={[Function]}
                                  onPointerLeave={[Function]}
                                  onPointerMove={[Function]}
                                  role="option"
                                >
                                  Option 2
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__itemIndicator emotion-113"
                                    data-part="item-indicator"
                                    data-scope="select"
                                    data-state="unchecked"
                                    hidden={true}
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20 6 9 17l-5-5"
                                      />
                                    </svg>
                                  </div>
                                </div>
                                <div
                                  aria-disabled="true"
                                  aria-selected={false}
                                  className="chakra-select__item emotion-112"
                                  data-disabled=""
                                  data-part="item"
                                  data-scope="select"
                                  data-state="unchecked"
                                  data-value="2"
                                  dir="ltr"
                                  id="select:root_optionalArrayWithAnyofs__anyof_select:option:2"
                                  onClick={[Function]}
                                  onPointerLeave={[Function]}
                                  onPointerMove={[Function]}
                                  role="option"
                                >
                                  Option 3
                                  <div
                                    aria-hidden={true}
                                    className="chakra-select__itemIndicator emotion-113"
                                    data-part="item-indicator"
                                    data-scope="select"
                                    data-state="unchecked"
                                    hidden={true}
                                  >
                                    <svg
                                      className="emotion-109"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20 6 9 17l-5-5"
                                      />
                                    </svg>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r6b:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_optionalArrayWithAnyofs__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  optionalArrayWithAnyofs
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-44"
                              >
                                <div />
                                <div
                                  className="emotion-45"
                                >
                                  <div
                                    className="emotion-46"
                                  >
                                    <button
                                      className="chakra-button rjsf-array-item-add emotion-47"
                                      disabled={true}
                                      id="root_optionalArrayWithAnyofs__add"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="lucide lucide-plus"
                                        fill="none"
                                        height={24}
                                        stroke="currentColor"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth={2}
                                        viewBox="0 0 24 24"
                                        width={24}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5 12h14"
                                        />
                                        <path
                                          d="M12 5v14"
                                        />
                                      </svg>
                                      Add Item
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-167"
  >
    <button
      className="chakra-button emotion-47"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields optional data controls shows "add" and "remove" optional controls when turned on in uiSchema and formData 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-top: var(--chakra-spacing-1);
  margin-bottom: var(--chakra-spacing-4);
}

@layer recipes {
  .emotion-3 {
    font-family: var(--chakra-fonts-heading);
    font-weight: var(--chakra-font-weights-semibold);
    font-size: var(--chakra-font-sizes-xl);
    line-height: 1.875rem;
  }
}

@layer recipes {
  .emotion-4 {
    display: block;
    border-color: var(--chakra-colors-border);
    --separator-thickness: 1px;
    border-style: solid;
    border-top-width: var(--separator-thickness);
  }
}

.emotion-5 {
  display: grid;
  gap: var(--chakra-spacing-4);
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@layer recipes {
  .emotion-11 {
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    justify-self: stretch;
    -webkit-align-self: stretch;
    -ms-flex-item-align: stretch;
    align-self: stretch;
  }
}

.emotion-12 {
  padding-inline: 0;
  padding-block: 0;
}

@layer recipes {
  .emotion-12 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-8);
    min-width: var(--chakra-sizes-8);
    font-size: var(--chakra-font-sizes-xs);
    padding-inline: var(--chakra-spacing-2\\.5);
    gap: var(--chakra-spacing-1);
    background: var(--chakra-colors-color-palette-subtle);
    --bg-currentcolor: var(--chakra-colors-color-palette-subtle);
    color: var(--chakra-colors-color-palette-fg);
  }

  .emotion-12:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-12:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-12 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }

  .emotion-12:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    background: var(--chakra-colors-color-palette-muted);
    --bg-currentcolor: var(--chakra-colors-color-palette-muted);
  }

  @media (hover: hover) {
    .emotion-12:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      background: var(--chakra-colors-color-palette-muted);
      --bg-currentcolor: var(--chakra-colors-color-palette-muted);
    }
  }
}

.emotion-12 :where(svg) {
  font-size: 1.2em;
}

.emotion-17 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-17 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-18 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    text-align: start;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    font-weight: var(--chakra-font-weights-medium);
    gap: var(--chakra-spacing-1);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .emotion-18:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

@layer recipes {
  .emotion-19 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-19:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-19:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-19:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-45 {
  display: grid;
}

.emotion-46 {
  justify-self: flex-end;
}

.emotion-47 {
  margin-top: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-48 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-48:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-48:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-48 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-48:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-48:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

.emotion-76 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  gap: 0.5rem;
  padding-block: var(--chakra-spacing-1);
}

.emotion-77 {
  width: 100%;
}

@layer recipes {
  .emotion-82 {
    color: var(--chakra-colors-fg-error);
    line-height: 1;
  }
}

.emotion-84 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-84 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    gap: 0!important;
    isolation: isolate;
    position: relative;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }

  .emotion-84 [data-group-item]:is(:focus-visible, [data-focus-visible]) {
    z-index: 1;
  }

  .emotion-84>*[data-first] {
    border-start-end-radius: 0!important;
    border-end-end-radius: 0!important;
    -webkit-margin-end: -1px;
    margin-inline-end: -1px;
  }

  .emotion-84>*[data-between] {
    border-radius: 0!important;
    -webkit-margin-end: -1px;
    margin-inline-end: -1px;
  }

  .emotion-84>*[data-last] {
    border-start-start-radius: 0!important;
    border-end-start-radius: 0!important;
  }
}

.emotion-85 {
  padding-inline: 0;
  padding-block: 0;
}

@layer recipes {
  .emotion-85 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-85:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-85:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-85 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-85:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-85:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

.emotion-85 :where(svg) {
  font-size: 1.2em;
}

.emotion-111 {
  margin-bottom: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-111 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    position: relative;
    min-width: 0;
    word-wrap: break-word;
    border-radius: var(--chakra-radii-l3);
    color: var(--chakra-colors-fg);
    text-align: start;
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --card-padding: var(--chakra-spacing-6);
  }
}

.emotion-112 {
  padding-bottom: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-112 {
    padding: var(--card-padding);
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

.emotion-113 {
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-137 {
  margin-top: var(--chakra-spacing-3);
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-object"
  >
    <fieldset
      aria-labelledby="fieldset:::r4q:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="emotion-2"
          id="root__title"
        >
          <h5
            className="chakra-heading emotion-3"
          >
            test
          </h5>
          <span
            aria-orientation="horizontal"
            className="chakra-separator emotion-4"
            role="separator"
          />
        </div>
        <div
          className="emotion-5"
        >
          <div>
            <div
              className="rjsf-field rjsf-field-object"
            >
              <fieldset
                aria-labelledby="fieldset:::r4r:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="emotion-2"
                    id="root_nestedObjectOptional__title"
                  >
                    <div
                      className="emotion-9"
                    >
                      <h5
                        className="chakra-heading emotion-3"
                      >
                        nestedObjectOptional
                      </h5>
                      <div
                        className="emotion-11"
                      />
                      <button
                        aria-label="Remove data for optional field"
                        className="chakra-button rjsf-remove-optional-data btn-sm emotion-12"
                        id="root_nestedObjectOptional__optionalRemove"
                        onClick={[Function]}
                        title="Remove data for optional field"
                        type="button"
                      >
                        <svg
                          aria-hidden="true"
                          className="lucide lucide-delete"
                          fill="none"
                          height={24}
                          stroke="currentColor"
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth={2}
                          viewBox="0 0 24 24"
                          width={24}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M10 5a2 2 0 0 0-1.344.519l-6.328 5.74a1 1 0 0 0 0 1.481l6.328 5.741A2 2 0 0 0 10 19h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2z"
                          />
                          <path
                            d="m12 9 6 6"
                          />
                          <path
                            d="m18 9-6 6"
                          />
                        </svg>
                      </button>
                    </div>
                    <span
                      aria-orientation="horizontal"
                      className="chakra-separator emotion-4"
                      role="separator"
                    />
                  </div>
                  <div
                    className="emotion-5"
                  >
                    <div>
                      <div
                        className="rjsf-field rjsf-field-string"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r4s:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="chakra-field__root emotion-17"
                              data-part="root"
                              data-scope="field"
                              id="field:::r4t:"
                              role="group"
                            >
                              <label
                                className="chakra-field__label emotion-18"
                                data-part="label"
                                data-scope="field"
                                htmlFor=":r4t:"
                                id="field:::r4t:::label"
                              >
                                test
                              </label>
                              <input
                                aria-describedby="root_nestedObjectOptional_test__error root_nestedObjectOptional_test__description root_nestedObjectOptional_test__help"
                                autoFocus={false}
                                className="chakra-input emotion-19"
                                data-part="input"
                                data-scope="field"
                                disabled={false}
                                id="root_nestedObjectOptional_test"
                                name="root_nestedObjectOptional_test"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder=""
                                readOnly={false}
                                required={false}
                                type="text"
                                value="foo"
                              />
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r4u:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_nestedObjectOptional_deepObjectOptional__title"
                            >
                              <div
                                className="emotion-9"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  deepObjectOptional
                                </h5>
                                <div
                                  className="emotion-11"
                                />
                                <button
                                  aria-label="Add data for optional field"
                                  className="chakra-button rjsf-add-optional-data btn-sm emotion-12"
                                  id="root_nestedObjectOptional_deepObjectOptional__optionalAdd"
                                  onClick={[Function]}
                                  title="Add data for optional field"
                                  type="button"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="lucide lucide-plus"
                                    fill="none"
                                    height={24}
                                    stroke="currentColor"
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    strokeWidth={2}
                                    viewBox="0 0 24 24"
                                    width={24}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M5 12h14"
                                    />
                                    <path
                                      d="M12 5v14"
                                    />
                                  </svg>
                                </button>
                              </div>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            />
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r4v:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_nestedObjectOptional_deepObject__title"
                            >
                              <h5
                                className="chakra-heading emotion-3"
                              >
                                deepObject
                              </h5>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            >
                              <div>
                                <div
                                  className="rjsf-field rjsf-field-string"
                                >
                                  <fieldset
                                    aria-labelledby="fieldset:::r50:::legend"
                                    className="fieldset__root emotion-0"
                                    data-part="root"
                                    data-scope="fieldset"
                                    disabled={false}
                                  >
                                    <div
                                      className="fieldset__content emotion-1"
                                    >
                                      <div
                                        className="chakra-field__root emotion-17"
                                        data-part="root"
                                        data-scope="field"
                                        id="field:::r51:"
                                        role="group"
                                      >
                                        <label
                                          className="chakra-field__label emotion-18"
                                          data-part="label"
                                          data-scope="field"
                                          htmlFor=":r51:"
                                          id="field:::r51:::label"
                                        >
                                          deepTest
                                        </label>
                                        <input
                                          aria-describedby="root_nestedObjectOptional_deepObject_deepTest__error root_nestedObjectOptional_deepObject_deepTest__description root_nestedObjectOptional_deepObject_deepTest__help"
                                          autoFocus={false}
                                          className="chakra-input emotion-19"
                                          data-part="input"
                                          data-scope="field"
                                          disabled={false}
                                          id="root_nestedObjectOptional_deepObject_deepTest"
                                          name="root_nestedObjectOptional_deepObject_deepTest"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder=""
                                          readOnly={false}
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </fieldset>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r52:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_nestedObjectOptional_deepArrayOptional__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  deepArrayOptional
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-45"
                              >
                                <div />
                                <div
                                  className="emotion-46"
                                >
                                  <div
                                    className="emotion-47"
                                  >
                                    <button
                                      className="chakra-button rjsf-array-item-add emotion-48"
                                      disabled={false}
                                      id="root_nestedObjectOptional_deepArrayOptional__add"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="lucide lucide-plus"
                                        fill="none"
                                        height={24}
                                        stroke="currentColor"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth={2}
                                        viewBox="0 0 24 24"
                                        width={24}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5 12h14"
                                        />
                                        <path
                                          d="M12 5v14"
                                        />
                                      </svg>
                                      Add Item
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r53:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_nestedObjectOptional_deepArrayOptional2__title"
                              >
                                <div
                                  className="emotion-9"
                                >
                                  <h5
                                    className="chakra-heading emotion-3"
                                  >
                                    deepArrayOptional2
                                  </h5>
                                  <div
                                    className="emotion-11"
                                  />
                                  <button
                                    aria-label="Add data for optional field"
                                    className="chakra-button rjsf-add-optional-data btn-sm emotion-12"
                                    id="root_nestedObjectOptional_deepArrayOptional2__optionalAdd"
                                    onClick={[Function]}
                                    title="Add data for optional field"
                                    type="button"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="lucide lucide-plus"
                                      fill="none"
                                      height={24}
                                      stroke="currentColor"
                                      strokeLinecap="round"
                                      strokeLinejoin="round"
                                      strokeWidth={2}
                                      viewBox="0 0 24 24"
                                      width={24}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M5 12h14"
                                      />
                                      <path
                                        d="M12 5v14"
                                      />
                                    </svg>
                                  </button>
                                </div>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-45"
                              >
                                <div />
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r54:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_nestedObjectOptional_deepArray__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  deepArray
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-45"
                              >
                                <div />
                                <div
                                  className="emotion-46"
                                >
                                  <div
                                    className="emotion-47"
                                  >
                                    <button
                                      className="chakra-button rjsf-array-item-add emotion-48"
                                      disabled={false}
                                      id="root_nestedObjectOptional_deepArray__add"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="lucide lucide-plus"
                                        fill="none"
                                        height={24}
                                        stroke="currentColor"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth={2}
                                        viewBox="0 0 24 24"
                                        width={24}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5 12h14"
                                        />
                                        <path
                                          d="M12 5v14"
                                        />
                                      </svg>
                                      Add Item
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-array"
            >
              <fieldset
                aria-labelledby="fieldset:::r55:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div>
                    <div
                      className="emotion-2"
                      id="root_nestedArrayOptional__title"
                    >
                      <div
                        className="emotion-9"
                      >
                        <h5
                          className="chakra-heading emotion-3"
                        >
                          nestedArrayOptional
                        </h5>
                        <div
                          className="emotion-11"
                        />
                        <button
                          aria-label="Remove data for optional field"
                          className="chakra-button rjsf-remove-optional-data btn-sm emotion-12"
                          id="root_nestedArrayOptional__optionalRemove"
                          onClick={[Function]}
                          title="Remove data for optional field"
                          type="button"
                        >
                          <svg
                            aria-hidden="true"
                            className="lucide lucide-delete"
                            fill="none"
                            height={24}
                            stroke="currentColor"
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth={2}
                            viewBox="0 0 24 24"
                            width={24}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M10 5a2 2 0 0 0-1.344.519l-6.328 5.74a1 1 0 0 0 0 1.481l6.328 5.741A2 2 0 0 0 10 19h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2z"
                            />
                            <path
                              d="m12 9 6 6"
                            />
                            <path
                              d="m18 9-6 6"
                            />
                          </svg>
                        </button>
                      </div>
                      <span
                        aria-orientation="horizontal"
                        className="chakra-separator emotion-4"
                        role="separator"
                      />
                    </div>
                    <div
                      className="emotion-45"
                    >
                      <div>
                        <div
                          className="chakra-stack emotion-76"
                        >
                          <div
                            className="emotion-77"
                          >
                            <div
                              className="rjsf-field rjsf-field-string"
                            >
                              <fieldset
                                aria-labelledby="fieldset:::r56:::legend"
                                className="fieldset__root emotion-0"
                                data-part="root"
                                data-scope="fieldset"
                                disabled={false}
                              >
                                <div
                                  className="fieldset__content emotion-1"
                                >
                                  <div
                                    className="chakra-field__root emotion-17"
                                    data-part="root"
                                    data-scope="field"
                                    id="field:::r57:"
                                    role="group"
                                  >
                                    <label
                                      className="chakra-field__label emotion-18"
                                      data-part="label"
                                      data-required=""
                                      data-scope="field"
                                      htmlFor=":r57:"
                                      id="field:::r57:::label"
                                    >
                                      nestedArrayOptional-0
                                      <span
                                        aria-hidden="true"
                                        className="chakra-field__requiredIndicator emotion-82"
                                      >
                                        *
                                      </span>
                                    </label>
                                    <input
                                      aria-describedby="root_nestedArrayOptional_0__error root_nestedArrayOptional_0__description root_nestedArrayOptional_0__help"
                                      autoFocus={false}
                                      className="chakra-input emotion-19"
                                      data-part="input"
                                      data-required=""
                                      data-scope="field"
                                      disabled={false}
                                      id="root_nestedArrayOptional_0"
                                      name="root_nestedArrayOptional_0"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      placeholder=""
                                      readOnly={false}
                                      required={true}
                                      type="text"
                                      value="bar"
                                    />
                                  </div>
                                </div>
                              </fieldset>
                            </div>
                          </div>
                          <div>
                            <div
                              className="chakra-group emotion-84"
                            >
                              <button
                                aria-label="Remove"
                                className="chakra-button rjsf-array-item-remove emotion-85"
                                disabled={false}
                                id="root_nestedArrayOptional_0__remove"
                                onClick={[Function]}
                                title="Remove"
                                type="button"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="lucide lucide-delete"
                                  fill="none"
                                  height={24}
                                  stroke="currentColor"
                                  strokeLinecap="round"
                                  strokeLinejoin="round"
                                  strokeWidth={2}
                                  viewBox="0 0 24 24"
                                  width={24}
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M10 5a2 2 0 0 0-1.344.519l-6.328 5.74a1 1 0 0 0 0 1.481l6.328 5.741A2 2 0 0 0 10 19h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2z"
                                  />
                                  <path
                                    d="m12 9 6 6"
                                  />
                                  <path
                                    d="m18 9-6 6"
                                  />
                                </svg>
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        className="emotion-46"
                      >
                        <div
                          className="emotion-47"
                        >
                          <button
                            className="chakra-button rjsf-array-item-add emotion-48"
                            disabled={false}
                            id="root_nestedArrayOptional__add"
                            onClick={[Function]}
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              className="lucide lucide-plus"
                              fill="none"
                              height={24}
                              stroke="currentColor"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              viewBox="0 0 24 24"
                              width={24}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M5 12h14"
                              />
                              <path
                                d="M12 5v14"
                              />
                            </svg>
                            Add Item
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-object"
            >
              <fieldset
                aria-labelledby="fieldset:::r58:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="emotion-2"
                    id="root_nestedObject__title"
                  >
                    <h5
                      className="chakra-heading emotion-3"
                    >
                      nestedObject
                    </h5>
                    <span
                      aria-orientation="horizontal"
                      className="chakra-separator emotion-4"
                      role="separator"
                    />
                  </div>
                  <div
                    className="emotion-5"
                  >
                    <div>
                      <div
                        className="rjsf-field rjsf-field-string"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r59:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="chakra-field__root emotion-17"
                              data-part="root"
                              data-scope="field"
                              id="field:::r5a:"
                              role="group"
                            >
                              <label
                                className="chakra-field__label emotion-18"
                                data-part="label"
                                data-scope="field"
                                htmlFor=":r5a:"
                                id="field:::r5a:::label"
                              >
                                test
                              </label>
                              <input
                                aria-describedby="root_nestedObject_test__error root_nestedObject_test__description root_nestedObject_test__help"
                                autoFocus={false}
                                className="chakra-input emotion-19"
                                data-part="input"
                                data-scope="field"
                                disabled={false}
                                id="root_nestedObject_test"
                                name="root_nestedObject_test"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder=""
                                readOnly={false}
                                required={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-array"
            >
              <fieldset
                aria-labelledby="fieldset:::r5b:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div>
                    <div
                      className="emotion-2"
                      id="root_nestedArray__title"
                    >
                      <h5
                        className="chakra-heading emotion-3"
                      >
                        nestedArray
                      </h5>
                      <span
                        aria-orientation="horizontal"
                        className="chakra-separator emotion-4"
                        role="separator"
                      />
                    </div>
                    <div
                      className="emotion-45"
                    >
                      <div />
                      <div
                        className="emotion-46"
                      >
                        <div
                          className="emotion-47"
                        >
                          <button
                            className="chakra-button rjsf-array-item-add emotion-48"
                            disabled={false}
                            id="root_nestedArray__add"
                            onClick={[Function]}
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              className="lucide lucide-plus"
                              fill="none"
                              height={24}
                              stroke="currentColor"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              viewBox="0 0 24 24"
                              width={24}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M5 12h14"
                              />
                              <path
                                d="M12 5v14"
                              />
                            </svg>
                            Add Item
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-undefined"
            >
              <fieldset
                aria-labelledby="fieldset:::r5c:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-card__root emotion-111"
                  >
                    <div
                      className="chakra-card__body emotion-112"
                    >
                      <div
                        className="emotion-113"
                      />
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r5d:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_optionalObjectWithOneofs__title"
                            >
                              <div
                                className="emotion-9"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  optionalObjectWithOneofs
                                </h5>
                                <div
                                  className="emotion-11"
                                />
                                <button
                                  aria-label="Add data for optional field"
                                  className="chakra-button rjsf-add-optional-data btn-sm emotion-12"
                                  id="root_optionalObjectWithOneofs__optionalAdd"
                                  onClick={[Function]}
                                  title="Add data for optional field"
                                  type="button"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="lucide lucide-plus"
                                    fill="none"
                                    height={24}
                                    stroke="currentColor"
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    strokeWidth={2}
                                    viewBox="0 0 24 24"
                                    width={24}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M5 12h14"
                                    />
                                    <path
                                      d="M12 5v14"
                                    />
                                  </svg>
                                </button>
                              </div>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            />
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-undefined"
            >
              <fieldset
                aria-labelledby="fieldset:::r5e:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-card__root emotion-111"
                  >
                    <div
                      className="chakra-card__body emotion-112"
                    >
                      <div
                        className="emotion-113"
                      />
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r5f:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_optionalArrayWithAnyofs__title"
                              >
                                <div
                                  className="emotion-9"
                                >
                                  <h5
                                    className="chakra-heading emotion-3"
                                  >
                                    optionalArrayWithAnyofs
                                  </h5>
                                  <div
                                    className="emotion-11"
                                  />
                                  <button
                                    aria-label="Add data for optional field"
                                    className="chakra-button rjsf-add-optional-data btn-sm emotion-12"
                                    id="root_optionalArrayWithAnyofs__optionalAdd"
                                    onClick={[Function]}
                                    title="Add data for optional field"
                                    type="button"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="lucide lucide-plus"
                                      fill="none"
                                      height={24}
                                      stroke="currentColor"
                                      strokeLinecap="round"
                                      strokeLinejoin="round"
                                      strokeWidth={2}
                                      viewBox="0 0 24 24"
                                      width={24}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M5 12h14"
                                      />
                                      <path
                                        d="M12 5v14"
                                      />
                                    </svg>
                                  </button>
                                </div>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-45"
                              >
                                <div />
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-137"
  >
    <button
      className="chakra-button emotion-48"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields optional data controls shows "add" and "remove" optional controls when turned on in uiSchema, readonly and formData 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-top: var(--chakra-spacing-1);
  margin-bottom: var(--chakra-spacing-4);
}

@layer recipes {
  .emotion-3 {
    font-family: var(--chakra-fonts-heading);
    font-weight: var(--chakra-font-weights-semibold);
    font-size: var(--chakra-font-sizes-xl);
    line-height: 1.875rem;
  }
}

@layer recipes {
  .emotion-4 {
    display: block;
    border-color: var(--chakra-colors-border);
    --separator-thickness: 1px;
    border-style: solid;
    border-top-width: var(--separator-thickness);
  }
}

.emotion-5 {
  display: grid;
  gap: var(--chakra-spacing-4);
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-14 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-14 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-15 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    text-align: start;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    font-weight: var(--chakra-font-weights-medium);
    gap: var(--chakra-spacing-1);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .emotion-15:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

@layer recipes {
  .emotion-16 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-16:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-16:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-16:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-39 {
  display: grid;
}

.emotion-40 {
  justify-self: flex-end;
}

.emotion-41 {
  margin-top: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-42 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-42:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-42:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-42 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-42:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-42:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

.emotion-64 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  gap: 0.5rem;
  padding-block: var(--chakra-spacing-1);
}

.emotion-65 {
  width: 100%;
}

@layer recipes {
  .emotion-70 {
    color: var(--chakra-colors-fg-error);
    line-height: 1;
  }
}

.emotion-72 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-72 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    gap: 0!important;
    isolation: isolate;
    position: relative;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }

  .emotion-72 [data-group-item]:is(:focus-visible, [data-focus-visible]) {
    z-index: 1;
  }

  .emotion-72>*[data-first] {
    border-start-end-radius: 0!important;
    border-end-end-radius: 0!important;
    -webkit-margin-end: -1px;
    margin-inline-end: -1px;
  }

  .emotion-72>*[data-between] {
    border-radius: 0!important;
    -webkit-margin-end: -1px;
    margin-inline-end: -1px;
  }

  .emotion-72>*[data-last] {
    border-start-start-radius: 0!important;
    border-end-start-radius: 0!important;
  }
}

.emotion-73 {
  padding-inline: 0;
  padding-block: 0;
}

@layer recipes {
  .emotion-73 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-73:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-73:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-73 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-73:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-73:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

.emotion-73 :where(svg) {
  font-size: 1.2em;
}

.emotion-99 {
  margin-bottom: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-99 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    position: relative;
    min-width: 0;
    word-wrap: break-word;
    border-radius: var(--chakra-radii-l3);
    color: var(--chakra-colors-fg);
    text-align: start;
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --card-padding: var(--chakra-spacing-6);
  }
}

.emotion-100 {
  padding-bottom: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-100 {
    padding: var(--card-padding);
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

.emotion-101 {
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-119 {
  margin-top: var(--chakra-spacing-3);
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-object"
  >
    <fieldset
      aria-labelledby="fieldset:::r6n:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="emotion-2"
          id="root__title"
        >
          <h5
            className="chakra-heading emotion-3"
          >
            test
          </h5>
          <span
            aria-orientation="horizontal"
            className="chakra-separator emotion-4"
            role="separator"
          />
        </div>
        <div
          className="emotion-5"
        >
          <div />
          <div>
            <div
              className="rjsf-field rjsf-field-object"
            >
              <fieldset
                aria-labelledby="fieldset:::r6o:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="emotion-2"
                    id="root_nestedObjectOptional__title"
                  >
                    <h5
                      className="chakra-heading emotion-3"
                    >
                      nestedObjectOptional
                    </h5>
                    <span
                      aria-orientation="horizontal"
                      className="chakra-separator emotion-4"
                      role="separator"
                    />
                  </div>
                  <div
                    className="emotion-5"
                  >
                    <div />
                    <div>
                      <div
                        className="rjsf-field rjsf-field-string"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r6p:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="chakra-field__root emotion-14"
                              data-disabled=""
                              data-part="root"
                              data-readonly=""
                              data-scope="field"
                              id="field:::r6q:"
                              role="group"
                            >
                              <label
                                className="chakra-field__label emotion-15"
                                data-disabled=""
                                data-part="label"
                                data-readonly=""
                                data-scope="field"
                                htmlFor=":r6q:"
                                id="field:::r6q:::label"
                              >
                                test
                              </label>
                              <input
                                aria-describedby="root_nestedObjectOptional_test__error root_nestedObjectOptional_test__description root_nestedObjectOptional_test__help"
                                autoFocus={false}
                                className="chakra-input emotion-16"
                                data-part="input"
                                data-readonly=""
                                data-scope="field"
                                disabled={true}
                                id="root_nestedObjectOptional_test"
                                name="root_nestedObjectOptional_test"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder=""
                                readOnly={true}
                                required={false}
                                type="text"
                                value="foo"
                              />
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r6r:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_nestedObjectOptional_deepObjectOptional__title"
                            >
                              <h5
                                className="chakra-heading emotion-3"
                              >
                                deepObjectOptional
                              </h5>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            >
                              <div>
                                <em
                                  id="root_nestedObjectOptional_deepObjectOptional__optionalMsg"
                                >
                                  No data for optional field
                                </em>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r6s:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_nestedObjectOptional_deepObject__title"
                            >
                              <h5
                                className="chakra-heading emotion-3"
                              >
                                deepObject
                              </h5>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            >
                              <div />
                              <div>
                                <div
                                  className="rjsf-field rjsf-field-string"
                                >
                                  <fieldset
                                    aria-labelledby="fieldset:::r6t:::legend"
                                    className="fieldset__root emotion-0"
                                    data-part="root"
                                    data-scope="fieldset"
                                    disabled={false}
                                  >
                                    <div
                                      className="fieldset__content emotion-1"
                                    >
                                      <div
                                        className="chakra-field__root emotion-14"
                                        data-disabled=""
                                        data-part="root"
                                        data-readonly=""
                                        data-scope="field"
                                        id="field:::r6u:"
                                        role="group"
                                      >
                                        <label
                                          className="chakra-field__label emotion-15"
                                          data-disabled=""
                                          data-part="label"
                                          data-readonly=""
                                          data-scope="field"
                                          htmlFor=":r6u:"
                                          id="field:::r6u:::label"
                                        >
                                          deepTest
                                        </label>
                                        <input
                                          aria-describedby="root_nestedObjectOptional_deepObject_deepTest__error root_nestedObjectOptional_deepObject_deepTest__description root_nestedObjectOptional_deepObject_deepTest__help"
                                          autoFocus={false}
                                          className="chakra-input emotion-16"
                                          data-part="input"
                                          data-readonly=""
                                          data-scope="field"
                                          disabled={true}
                                          id="root_nestedObjectOptional_deepObject_deepTest"
                                          name="root_nestedObjectOptional_deepObject_deepTest"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder=""
                                          readOnly={true}
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </fieldset>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r6v:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_nestedObjectOptional_deepArrayOptional__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  deepArrayOptional
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-39"
                              >
                                <div />
                                <div
                                  className="emotion-40"
                                >
                                  <div
                                    className="emotion-41"
                                  >
                                    <button
                                      className="chakra-button rjsf-array-item-add emotion-42"
                                      disabled={true}
                                      id="root_nestedObjectOptional_deepArrayOptional__add"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="lucide lucide-plus"
                                        fill="none"
                                        height={24}
                                        stroke="currentColor"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth={2}
                                        viewBox="0 0 24 24"
                                        width={24}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5 12h14"
                                        />
                                        <path
                                          d="M12 5v14"
                                        />
                                      </svg>
                                      Add Item
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r70:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_nestedObjectOptional_deepArrayOptional2__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  deepArrayOptional2
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-39"
                              >
                                <div>
                                  <em
                                    id="root_nestedObjectOptional_deepArrayOptional2__optionalMsg"
                                  >
                                    No data for optional field
                                  </em>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                    <div>
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r71:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_nestedObjectOptional_deepArray__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  deepArray
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-39"
                              >
                                <div />
                                <div
                                  className="emotion-40"
                                >
                                  <div
                                    className="emotion-41"
                                  >
                                    <button
                                      className="chakra-button rjsf-array-item-add emotion-42"
                                      disabled={true}
                                      id="root_nestedObjectOptional_deepArray__add"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="lucide lucide-plus"
                                        fill="none"
                                        height={24}
                                        stroke="currentColor"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth={2}
                                        viewBox="0 0 24 24"
                                        width={24}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M5 12h14"
                                        />
                                        <path
                                          d="M12 5v14"
                                        />
                                      </svg>
                                      Add Item
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-array"
            >
              <fieldset
                aria-labelledby="fieldset:::r72:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div>
                    <div
                      className="emotion-2"
                      id="root_nestedArrayOptional__title"
                    >
                      <h5
                        className="chakra-heading emotion-3"
                      >
                        nestedArrayOptional
                      </h5>
                      <span
                        aria-orientation="horizontal"
                        className="chakra-separator emotion-4"
                        role="separator"
                      />
                    </div>
                    <div
                      className="emotion-39"
                    >
                      <div>
                        <div
                          className="chakra-stack emotion-64"
                        >
                          <div
                            className="emotion-65"
                          >
                            <div
                              className="rjsf-field rjsf-field-string"
                            >
                              <fieldset
                                aria-labelledby="fieldset:::r73:::legend"
                                className="fieldset__root emotion-0"
                                data-part="root"
                                data-scope="fieldset"
                                disabled={false}
                              >
                                <div
                                  className="fieldset__content emotion-1"
                                >
                                  <div
                                    className="chakra-field__root emotion-14"
                                    data-disabled=""
                                    data-part="root"
                                    data-readonly=""
                                    data-scope="field"
                                    id="field:::r74:"
                                    role="group"
                                  >
                                    <label
                                      className="chakra-field__label emotion-15"
                                      data-disabled=""
                                      data-part="label"
                                      data-readonly=""
                                      data-required=""
                                      data-scope="field"
                                      htmlFor=":r74:"
                                      id="field:::r74:::label"
                                    >
                                      nestedArrayOptional-0
                                      <span
                                        aria-hidden="true"
                                        className="chakra-field__requiredIndicator emotion-70"
                                      >
                                        *
                                      </span>
                                    </label>
                                    <input
                                      aria-describedby="root_nestedArrayOptional_0__error root_nestedArrayOptional_0__description root_nestedArrayOptional_0__help"
                                      autoFocus={false}
                                      className="chakra-input emotion-16"
                                      data-part="input"
                                      data-readonly=""
                                      data-required=""
                                      data-scope="field"
                                      disabled={true}
                                      id="root_nestedArrayOptional_0"
                                      name="root_nestedArrayOptional_0"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      placeholder=""
                                      readOnly={true}
                                      required={true}
                                      type="text"
                                      value="bar"
                                    />
                                  </div>
                                </div>
                              </fieldset>
                            </div>
                          </div>
                          <div>
                            <div
                              className="chakra-group emotion-72"
                            >
                              <button
                                aria-label="Remove"
                                className="chakra-button rjsf-array-item-remove emotion-73"
                                disabled={true}
                                id="root_nestedArrayOptional_0__remove"
                                onClick={[Function]}
                                title="Remove"
                                type="button"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="lucide lucide-delete"
                                  fill="none"
                                  height={24}
                                  stroke="currentColor"
                                  strokeLinecap="round"
                                  strokeLinejoin="round"
                                  strokeWidth={2}
                                  viewBox="0 0 24 24"
                                  width={24}
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M10 5a2 2 0 0 0-1.344.519l-6.328 5.74a1 1 0 0 0 0 1.481l6.328 5.741A2 2 0 0 0 10 19h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2z"
                                  />
                                  <path
                                    d="m12 9 6 6"
                                  />
                                  <path
                                    d="m18 9-6 6"
                                  />
                                </svg>
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        className="emotion-40"
                      >
                        <div
                          className="emotion-41"
                        >
                          <button
                            className="chakra-button rjsf-array-item-add emotion-42"
                            disabled={true}
                            id="root_nestedArrayOptional__add"
                            onClick={[Function]}
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              className="lucide lucide-plus"
                              fill="none"
                              height={24}
                              stroke="currentColor"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              viewBox="0 0 24 24"
                              width={24}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M5 12h14"
                              />
                              <path
                                d="M12 5v14"
                              />
                            </svg>
                            Add Item
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-object"
            >
              <fieldset
                aria-labelledby="fieldset:::r75:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="emotion-2"
                    id="root_nestedObject__title"
                  >
                    <h5
                      className="chakra-heading emotion-3"
                    >
                      nestedObject
                    </h5>
                    <span
                      aria-orientation="horizontal"
                      className="chakra-separator emotion-4"
                      role="separator"
                    />
                  </div>
                  <div
                    className="emotion-5"
                  >
                    <div />
                    <div>
                      <div
                        className="rjsf-field rjsf-field-string"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r76:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="chakra-field__root emotion-14"
                              data-disabled=""
                              data-part="root"
                              data-readonly=""
                              data-scope="field"
                              id="field:::r77:"
                              role="group"
                            >
                              <label
                                className="chakra-field__label emotion-15"
                                data-disabled=""
                                data-part="label"
                                data-readonly=""
                                data-scope="field"
                                htmlFor=":r77:"
                                id="field:::r77:::label"
                              >
                                test
                              </label>
                              <input
                                aria-describedby="root_nestedObject_test__error root_nestedObject_test__description root_nestedObject_test__help"
                                autoFocus={false}
                                className="chakra-input emotion-16"
                                data-part="input"
                                data-readonly=""
                                data-scope="field"
                                disabled={true}
                                id="root_nestedObject_test"
                                name="root_nestedObject_test"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder=""
                                readOnly={true}
                                required={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-array"
            >
              <fieldset
                aria-labelledby="fieldset:::r78:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div>
                    <div
                      className="emotion-2"
                      id="root_nestedArray__title"
                    >
                      <h5
                        className="chakra-heading emotion-3"
                      >
                        nestedArray
                      </h5>
                      <span
                        aria-orientation="horizontal"
                        className="chakra-separator emotion-4"
                        role="separator"
                      />
                    </div>
                    <div
                      className="emotion-39"
                    >
                      <div />
                      <div
                        className="emotion-40"
                      >
                        <div
                          className="emotion-41"
                        >
                          <button
                            className="chakra-button rjsf-array-item-add emotion-42"
                            disabled={true}
                            id="root_nestedArray__add"
                            onClick={[Function]}
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              className="lucide lucide-plus"
                              fill="none"
                              height={24}
                              stroke="currentColor"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              viewBox="0 0 24 24"
                              width={24}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M5 12h14"
                              />
                              <path
                                d="M12 5v14"
                              />
                            </svg>
                            Add Item
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-undefined"
            >
              <fieldset
                aria-labelledby="fieldset:::r79:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-card__root emotion-99"
                  >
                    <div
                      className="chakra-card__body emotion-100"
                    >
                      <div
                        className="emotion-101"
                      />
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r7a:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_optionalObjectWithOneofs__title"
                            >
                              <h5
                                className="chakra-heading emotion-3"
                              >
                                optionalObjectWithOneofs
                              </h5>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            >
                              <div>
                                <em
                                  id="root_optionalObjectWithOneofs__optionalMsg"
                                >
                                  No data for optional field
                                </em>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-undefined"
            >
              <fieldset
                aria-labelledby="fieldset:::r7b:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-card__root emotion-99"
                  >
                    <div
                      className="chakra-card__body emotion-100"
                    >
                      <div
                        className="emotion-101"
                      />
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r7c:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_optionalArrayWithAnyofs__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  optionalArrayWithAnyofs
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-39"
                              >
                                <div>
                                  <em
                                    id="root_optionalArrayWithAnyofs__optionalMsg"
                                  >
                                    No data for optional field
                                  </em>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-119"
  >
    <button
      className="chakra-button emotion-42"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields optional data controls shows "add" optional controls when turned on in uiSchema and no formData 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-top: var(--chakra-spacing-1);
  margin-bottom: var(--chakra-spacing-4);
}

@layer recipes {
  .emotion-3 {
    font-family: var(--chakra-fonts-heading);
    font-weight: var(--chakra-font-weights-semibold);
    font-size: var(--chakra-font-sizes-xl);
    line-height: 1.875rem;
  }
}

@layer recipes {
  .emotion-4 {
    display: block;
    border-color: var(--chakra-colors-border);
    --separator-thickness: 1px;
    border-style: solid;
    border-top-width: var(--separator-thickness);
  }
}

.emotion-5 {
  display: grid;
  gap: var(--chakra-spacing-4);
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@layer recipes {
  .emotion-11 {
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    justify-self: stretch;
    -webkit-align-self: stretch;
    -ms-flex-item-align: stretch;
    align-self: stretch;
  }
}

.emotion-12 {
  padding-inline: 0;
  padding-block: 0;
}

@layer recipes {
  .emotion-12 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-8);
    min-width: var(--chakra-sizes-8);
    font-size: var(--chakra-font-sizes-xs);
    padding-inline: var(--chakra-spacing-2\\.5);
    gap: var(--chakra-spacing-1);
    background: var(--chakra-colors-color-palette-subtle);
    --bg-currentcolor: var(--chakra-colors-color-palette-subtle);
    color: var(--chakra-colors-color-palette-fg);
  }

  .emotion-12:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-12:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-12 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }

  .emotion-12:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    background: var(--chakra-colors-color-palette-muted);
    --bg-currentcolor: var(--chakra-colors-color-palette-muted);
  }

  @media (hover: hover) {
    .emotion-12:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      background: var(--chakra-colors-color-palette-muted);
      --bg-currentcolor: var(--chakra-colors-color-palette-muted);
    }
  }
}

.emotion-12 :where(svg) {
  font-size: 1.2em;
}

.emotion-23 {
  display: grid;
}

.emotion-32 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-32 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-33 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    text-align: start;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    font-weight: var(--chakra-font-weights-medium);
    gap: var(--chakra-spacing-1);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .emotion-33:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

@layer recipes {
  .emotion-34 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-34:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-34:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-34:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-41 {
  justify-self: flex-end;
}

.emotion-42 {
  margin-top: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-43 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-43:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-43:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-43 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-43:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-43:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

.emotion-46 {
  margin-bottom: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-46 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    position: relative;
    min-width: 0;
    word-wrap: break-word;
    border-radius: var(--chakra-radii-l3);
    color: var(--chakra-colors-fg);
    text-align: start;
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --card-padding: var(--chakra-spacing-6);
  }
}

.emotion-47 {
  padding-bottom: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-47 {
    padding: var(--card-padding);
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

.emotion-48 {
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-72 {
  margin-top: var(--chakra-spacing-3);
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-object"
  >
    <fieldset
      aria-labelledby="fieldset:::r4f:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="emotion-2"
          id="root__title"
        >
          <h5
            className="chakra-heading emotion-3"
          >
            test
          </h5>
          <span
            aria-orientation="horizontal"
            className="chakra-separator emotion-4"
            role="separator"
          />
        </div>
        <div
          className="emotion-5"
        >
          <div>
            <div
              className="rjsf-field rjsf-field-object"
            >
              <fieldset
                aria-labelledby="fieldset:::r4g:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="emotion-2"
                    id="root_nestedObjectOptional__title"
                  >
                    <div
                      className="emotion-9"
                    >
                      <h5
                        className="chakra-heading emotion-3"
                      >
                        nestedObjectOptional
                      </h5>
                      <div
                        className="emotion-11"
                      />
                      <button
                        aria-label="Add data for optional field"
                        className="chakra-button rjsf-add-optional-data btn-sm emotion-12"
                        id="root_nestedObjectOptional__optionalAdd"
                        onClick={[Function]}
                        title="Add data for optional field"
                        type="button"
                      >
                        <svg
                          aria-hidden="true"
                          className="lucide lucide-plus"
                          fill="none"
                          height={24}
                          stroke="currentColor"
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth={2}
                          viewBox="0 0 24 24"
                          width={24}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M5 12h14"
                          />
                          <path
                            d="M12 5v14"
                          />
                        </svg>
                      </button>
                    </div>
                    <span
                      aria-orientation="horizontal"
                      className="chakra-separator emotion-4"
                      role="separator"
                    />
                  </div>
                  <div
                    className="emotion-5"
                  />
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-array"
            >
              <fieldset
                aria-labelledby="fieldset:::r4h:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div>
                    <div
                      className="emotion-2"
                      id="root_nestedArrayOptional__title"
                    >
                      <div
                        className="emotion-9"
                      >
                        <h5
                          className="chakra-heading emotion-3"
                        >
                          nestedArrayOptional
                        </h5>
                        <div
                          className="emotion-11"
                        />
                        <button
                          aria-label="Add data for optional field"
                          className="chakra-button rjsf-add-optional-data btn-sm emotion-12"
                          id="root_nestedArrayOptional__optionalAdd"
                          onClick={[Function]}
                          title="Add data for optional field"
                          type="button"
                        >
                          <svg
                            aria-hidden="true"
                            className="lucide lucide-plus"
                            fill="none"
                            height={24}
                            stroke="currentColor"
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth={2}
                            viewBox="0 0 24 24"
                            width={24}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M5 12h14"
                            />
                            <path
                              d="M12 5v14"
                            />
                          </svg>
                        </button>
                      </div>
                      <span
                        aria-orientation="horizontal"
                        className="chakra-separator emotion-4"
                        role="separator"
                      />
                    </div>
                    <div
                      className="emotion-23"
                    >
                      <div />
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-object"
            >
              <fieldset
                aria-labelledby="fieldset:::r4i:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="emotion-2"
                    id="root_nestedObject__title"
                  >
                    <h5
                      className="chakra-heading emotion-3"
                    >
                      nestedObject
                    </h5>
                    <span
                      aria-orientation="horizontal"
                      className="chakra-separator emotion-4"
                      role="separator"
                    />
                  </div>
                  <div
                    className="emotion-5"
                  >
                    <div>
                      <div
                        className="rjsf-field rjsf-field-string"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r4j:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="chakra-field__root emotion-32"
                              data-part="root"
                              data-scope="field"
                              id="field:::r4k:"
                              role="group"
                            >
                              <label
                                className="chakra-field__label emotion-33"
                                data-part="label"
                                data-scope="field"
                                htmlFor=":r4k:"
                                id="field:::r4k:::label"
                              >
                                test
                              </label>
                              <input
                                aria-describedby="root_nestedObject_test__error root_nestedObject_test__description root_nestedObject_test__help"
                                autoFocus={false}
                                className="chakra-input emotion-34"
                                data-part="input"
                                data-scope="field"
                                disabled={false}
                                id="root_nestedObject_test"
                                name="root_nestedObject_test"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder=""
                                readOnly={false}
                                required={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-array"
            >
              <fieldset
                aria-labelledby="fieldset:::r4l:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div>
                    <div
                      className="emotion-2"
                      id="root_nestedArray__title"
                    >
                      <h5
                        className="chakra-heading emotion-3"
                      >
                        nestedArray
                      </h5>
                      <span
                        aria-orientation="horizontal"
                        className="chakra-separator emotion-4"
                        role="separator"
                      />
                    </div>
                    <div
                      className="emotion-23"
                    >
                      <div />
                      <div
                        className="emotion-41"
                      >
                        <div
                          className="emotion-42"
                        >
                          <button
                            className="chakra-button rjsf-array-item-add emotion-43"
                            disabled={false}
                            id="root_nestedArray__add"
                            onClick={[Function]}
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              className="lucide lucide-plus"
                              fill="none"
                              height={24}
                              stroke="currentColor"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              viewBox="0 0 24 24"
                              width={24}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M5 12h14"
                              />
                              <path
                                d="M12 5v14"
                              />
                            </svg>
                            Add Item
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-undefined"
            >
              <fieldset
                aria-labelledby="fieldset:::r4m:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-card__root emotion-46"
                  >
                    <div
                      className="chakra-card__body emotion-47"
                    >
                      <div
                        className="emotion-48"
                      />
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r4n:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_optionalObjectWithOneofs__title"
                            >
                              <div
                                className="emotion-9"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  optionalObjectWithOneofs
                                </h5>
                                <div
                                  className="emotion-11"
                                />
                                <button
                                  aria-label="Add data for optional field"
                                  className="chakra-button rjsf-add-optional-data btn-sm emotion-12"
                                  id="root_optionalObjectWithOneofs__optionalAdd"
                                  onClick={[Function]}
                                  title="Add data for optional field"
                                  type="button"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="lucide lucide-plus"
                                    fill="none"
                                    height={24}
                                    stroke="currentColor"
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    strokeWidth={2}
                                    viewBox="0 0 24 24"
                                    width={24}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M5 12h14"
                                    />
                                    <path
                                      d="M12 5v14"
                                    />
                                  </svg>
                                </button>
                              </div>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            />
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-undefined"
            >
              <fieldset
                aria-labelledby="fieldset:::r4o:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-card__root emotion-46"
                  >
                    <div
                      className="chakra-card__body emotion-47"
                    >
                      <div
                        className="emotion-48"
                      />
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r4p:::legend"
                          className="fieldset__root emotion-0"
                          data-part="root"
                          data-scope="fieldset"
                          disabled={false}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_optionalArrayWithAnyofs__title"
                              >
                                <div
                                  className="emotion-9"
                                >
                                  <h5
                                    className="chakra-heading emotion-3"
                                  >
                                    optionalArrayWithAnyofs
                                  </h5>
                                  <div
                                    className="emotion-11"
                                  />
                                  <button
                                    aria-label="Add data for optional field"
                                    className="chakra-button rjsf-add-optional-data btn-sm emotion-12"
                                    id="root_optionalArrayWithAnyofs__optionalAdd"
                                    onClick={[Function]}
                                    title="Add data for optional field"
                                    type="button"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="lucide lucide-plus"
                                      fill="none"
                                      height={24}
                                      stroke="currentColor"
                                      strokeLinecap="round"
                                      strokeLinejoin="round"
                                      strokeWidth={2}
                                      viewBox="0 0 24 24"
                                      width={24}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M5 12h14"
                                      />
                                      <path
                                        d="M12 5v14"
                                      />
                                    </svg>
                                  </button>
                                </div>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-23"
                              >
                                <div />
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-72"
  >
    <button
      className="chakra-button emotion-43"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields optional data controls shows "add" optional controls when turned on in uiSchema, disabled and no formData 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-top: var(--chakra-spacing-1);
  margin-bottom: var(--chakra-spacing-4);
}

@layer recipes {
  .emotion-3 {
    font-family: var(--chakra-fonts-heading);
    font-weight: var(--chakra-font-weights-semibold);
    font-size: var(--chakra-font-sizes-xl);
    line-height: 1.875rem;
  }
}

@layer recipes {
  .emotion-4 {
    display: block;
    border-color: var(--chakra-colors-border);
    --separator-thickness: 1px;
    border-style: solid;
    border-top-width: var(--separator-thickness);
  }
}

.emotion-5 {
  display: grid;
  gap: var(--chakra-spacing-4);
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-17 {
  display: grid;
}

.emotion-26 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-26 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-27 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    text-align: start;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    font-weight: var(--chakra-font-weights-medium);
    gap: var(--chakra-spacing-1);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .emotion-27:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

@layer recipes {
  .emotion-28 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-28:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-28:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-28:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-35 {
  justify-self: flex-end;
}

.emotion-36 {
  margin-top: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-37 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-37:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-37:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-37 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-37:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-37:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

.emotion-40 {
  margin-bottom: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-40 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    position: relative;
    min-width: 0;
    word-wrap: break-word;
    border-radius: var(--chakra-radii-l3);
    color: var(--chakra-colors-fg);
    text-align: start;
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --card-padding: var(--chakra-spacing-6);
  }
}

.emotion-41 {
  padding-bottom: var(--chakra-spacing-2);
}

@layer recipes {
  .emotion-41 {
    padding: var(--card-padding);
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

.emotion-42 {
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-60 {
  margin-top: var(--chakra-spacing-3);
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-object"
  >
    <fieldset
      aria-labelledby="fieldset:::r6c:::legend"
      className="fieldset__root emotion-0"
      data-disabled=""
      data-part="root"
      data-scope="fieldset"
      disabled={true}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="emotion-2"
          id="root__title"
        >
          <h5
            className="chakra-heading emotion-3"
          >
            test
          </h5>
          <span
            aria-orientation="horizontal"
            className="chakra-separator emotion-4"
            role="separator"
          />
        </div>
        <div
          className="emotion-5"
        >
          <div />
          <div>
            <div
              className="rjsf-field rjsf-field-object"
            >
              <fieldset
                aria-labelledby="fieldset:::r6d:::legend"
                className="fieldset__root emotion-0"
                data-disabled=""
                data-part="root"
                data-scope="fieldset"
                disabled={true}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="emotion-2"
                    id="root_nestedObjectOptional__title"
                  >
                    <h5
                      className="chakra-heading emotion-3"
                    >
                      nestedObjectOptional
                    </h5>
                    <span
                      aria-orientation="horizontal"
                      className="chakra-separator emotion-4"
                      role="separator"
                    />
                  </div>
                  <div
                    className="emotion-5"
                  >
                    <div>
                      <em
                        id="root_nestedObjectOptional__optionalMsg"
                      >
                        No data for optional field
                      </em>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-array"
            >
              <fieldset
                aria-labelledby="fieldset:::r6e:::legend"
                className="fieldset__root emotion-0"
                data-disabled=""
                data-part="root"
                data-scope="fieldset"
                disabled={true}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div>
                    <div
                      className="emotion-2"
                      id="root_nestedArrayOptional__title"
                    >
                      <h5
                        className="chakra-heading emotion-3"
                      >
                        nestedArrayOptional
                      </h5>
                      <span
                        aria-orientation="horizontal"
                        className="chakra-separator emotion-4"
                        role="separator"
                      />
                    </div>
                    <div
                      className="emotion-17"
                    >
                      <div>
                        <em
                          id="root_nestedArrayOptional__optionalMsg"
                        >
                          No data for optional field
                        </em>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-object"
            >
              <fieldset
                aria-labelledby="fieldset:::r6f:::legend"
                className="fieldset__root emotion-0"
                data-disabled=""
                data-part="root"
                data-scope="fieldset"
                disabled={true}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="emotion-2"
                    id="root_nestedObject__title"
                  >
                    <h5
                      className="chakra-heading emotion-3"
                    >
                      nestedObject
                    </h5>
                    <span
                      aria-orientation="horizontal"
                      className="chakra-separator emotion-4"
                      role="separator"
                    />
                  </div>
                  <div
                    className="emotion-5"
                  >
                    <div />
                    <div>
                      <div
                        className="rjsf-field rjsf-field-string"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r6g:::legend"
                          className="fieldset__root emotion-0"
                          data-disabled=""
                          data-part="root"
                          data-scope="fieldset"
                          disabled={true}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="chakra-field__root emotion-26"
                              data-disabled=""
                              data-part="root"
                              data-scope="field"
                              id="field:::r6h:"
                              role="group"
                            >
                              <label
                                className="chakra-field__label emotion-27"
                                data-disabled=""
                                data-part="label"
                                data-scope="field"
                                htmlFor=":r6h:"
                                id="field:::r6h:::label"
                              >
                                test
                              </label>
                              <input
                                aria-describedby="root_nestedObject_test__error root_nestedObject_test__description root_nestedObject_test__help"
                                autoFocus={false}
                                className="chakra-input emotion-28"
                                data-part="input"
                                data-scope="field"
                                disabled={true}
                                id="root_nestedObject_test"
                                name="root_nestedObject_test"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder=""
                                readOnly={false}
                                required={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-array"
            >
              <fieldset
                aria-labelledby="fieldset:::r6i:::legend"
                className="fieldset__root emotion-0"
                data-disabled=""
                data-part="root"
                data-scope="fieldset"
                disabled={true}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div>
                    <div
                      className="emotion-2"
                      id="root_nestedArray__title"
                    >
                      <h5
                        className="chakra-heading emotion-3"
                      >
                        nestedArray
                      </h5>
                      <span
                        aria-orientation="horizontal"
                        className="chakra-separator emotion-4"
                        role="separator"
                      />
                    </div>
                    <div
                      className="emotion-17"
                    >
                      <div />
                      <div
                        className="emotion-35"
                      >
                        <div
                          className="emotion-36"
                        >
                          <button
                            className="chakra-button rjsf-array-item-add emotion-37"
                            disabled={true}
                            id="root_nestedArray__add"
                            onClick={[Function]}
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              className="lucide lucide-plus"
                              fill="none"
                              height={24}
                              stroke="currentColor"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              viewBox="0 0 24 24"
                              width={24}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M5 12h14"
                              />
                              <path
                                d="M12 5v14"
                              />
                            </svg>
                            Add Item
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-undefined"
            >
              <fieldset
                aria-labelledby="fieldset:::r6j:::legend"
                className="fieldset__root emotion-0"
                data-disabled=""
                data-part="root"
                data-scope="fieldset"
                disabled={true}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-card__root emotion-40"
                  >
                    <div
                      className="chakra-card__body emotion-41"
                    >
                      <div
                        className="emotion-42"
                      />
                      <div
                        className="rjsf-field rjsf-field-object"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r6k:::legend"
                          className="fieldset__root emotion-0"
                          data-disabled=""
                          data-part="root"
                          data-scope="fieldset"
                          disabled={true}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div
                              className="emotion-2"
                              id="root_optionalObjectWithOneofs__title"
                            >
                              <h5
                                className="chakra-heading emotion-3"
                              >
                                optionalObjectWithOneofs
                              </h5>
                              <span
                                aria-orientation="horizontal"
                                className="chakra-separator emotion-4"
                                role="separator"
                              />
                            </div>
                            <div
                              className="emotion-5"
                            >
                              <div>
                                <em
                                  id="root_optionalObjectWithOneofs__optionalMsg"
                                >
                                  No data for optional field
                                </em>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
          <div>
            <div
              className="rjsf-field rjsf-field-undefined"
            >
              <fieldset
                aria-labelledby="fieldset:::r6l:::legend"
                className="fieldset__root emotion-0"
                data-disabled=""
                data-part="root"
                data-scope="fieldset"
                disabled={true}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-card__root emotion-40"
                  >
                    <div
                      className="chakra-card__body emotion-41"
                    >
                      <div
                        className="emotion-42"
                      />
                      <div
                        className="rjsf-field rjsf-field-array"
                      >
                        <fieldset
                          aria-labelledby="fieldset:::r6m:::legend"
                          className="fieldset__root emotion-0"
                          data-disabled=""
                          data-part="root"
                          data-scope="fieldset"
                          disabled={true}
                        >
                          <div
                            className="fieldset__content emotion-1"
                          >
                            <div>
                              <div
                                className="emotion-2"
                                id="root_optionalArrayWithAnyofs__title"
                              >
                                <h5
                                  className="chakra-heading emotion-3"
                                >
                                  optionalArrayWithAnyofs
                                </h5>
                                <span
                                  aria-orientation="horizontal"
                                  className="chakra-separator emotion-4"
                                  role="separator"
                                />
                              </div>
                              <div
                                className="emotion-17"
                              >
                                <div>
                                  <em
                                    id="root_optionalArrayWithAnyofs__optionalMsg"
                                  >
                                    No data for optional field
                                  </em>
                                </div>
                              </div>
                            </div>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-60"
  >
    <button
      className="chakra-button emotion-37"
      disabled={true}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields password field 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::ro:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::rp:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="password"
            value=""
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields radio field 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.5rem;
}

@layer recipes {
  .emotion-4 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    position: relative;
    font-weight: var(--chakra-font-weights-medium);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    gap: var(--chakra-spacing-2\\.5);
  }

  .emotion-4:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    cursor: var(--chakra-cursor-disabled);
  }
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    vertical-align: top;
    color: var(--chakra-colors-white);
    border-width: 1px;
    border-color: var(--chakra-colors-border-emphasized);
    border-radius: var(--chakra-radii-full);
    cursor: var(--chakra-cursor-radio);
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline: 2px solid;
    outline-color: var(--chakra-colors-color-palette-focus-ring);
    outline-offset: 2px;
  }

  .emotion-5:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --chakra-colors-color-palette-50: var(--chakra-colors-red-50);
    --chakra-colors-color-palette-100: var(--chakra-colors-red-100);
    --chakra-colors-color-palette-200: var(--chakra-colors-red-200);
    --chakra-colors-color-palette-300: var(--chakra-colors-red-300);
    --chakra-colors-color-palette-400: var(--chakra-colors-red-400);
    --chakra-colors-color-palette-500: var(--chakra-colors-red-500);
    --chakra-colors-color-palette-600: var(--chakra-colors-red-600);
    --chakra-colors-color-palette-700: var(--chakra-colors-red-700);
    --chakra-colors-color-palette-800: var(--chakra-colors-red-800);
    --chakra-colors-color-palette-900: var(--chakra-colors-red-900);
    --chakra-colors-color-palette-950: var(--chakra-colors-red-950);
    --chakra-colors-color-palette-contrast: var(--chakra-colors-red-contrast);
    --chakra-colors-color-palette-fg: var(--chakra-colors-red-fg);
    --chakra-colors-color-palette-subtle: var(--chakra-colors-red-subtle);
    --chakra-colors-color-palette-muted: var(--chakra-colors-red-muted);
    --chakra-colors-color-palette-emphasized: var(--chakra-colors-red-emphasized);
    --chakra-colors-color-palette-solid: var(--chakra-colors-red-solid);
    --chakra-colors-color-palette-focus-ring: var(--chakra-colors-red-focus-ring);
    border-color: var(--chakra-colors-red-500);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: var(--chakra-cursor-disabled);
  }

  .emotion-5 .dot {
    height: 100%;
    width: 100%;
    border-radius: var(--chakra-radii-full);
    background: currentColor;
    --bg-currentcolor: currentColor;
    scale: 0.4;
  }

  .emotion-5:is(:checked, [data-checked], [aria-checked=true], [data-state=checked]) {
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
    border-color: var(--chakra-colors-color-palette-solid);
  }
}

.emotion-8 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-9 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-9:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-9 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-9:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-9:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-boolean"
  >
    <fieldset
      aria-labelledby="fieldset:::r2l:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r2m:"
          role="group"
        >
          <div
            aria-describedby="root__error root__description root__help"
            aria-labelledby="radio-group::r2n::label"
            aria-orientation="vertical"
            className="chakra-radio-group__root"
            data-orientation="vertical"
            data-part="root"
            data-scope="radio-group"
            dir="ltr"
            id="radio-group::r2n:"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            role="radiogroup"
            style={
              {
                "position": "relative",
              }
            }
          >
            <div
              className="chakra-stack emotion-3"
            >
              <label
                className="chakra-radio-group__item emotion-4"
                data-orientation="vertical"
                data-part="item"
                data-scope="radio-group"
                data-ssr=""
                data-state="unchecked"
                dir="ltr"
                htmlFor="radio-group::r2n::radio:input:0"
                id="root-0"
                onClick={[Function]}
                onPointerDown={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
                onPointerUp={[Function]}
              >
                <input
                  data-ownedby="radio-group::r2n:"
                  defaultChecked={false}
                  disabled={false}
                  id="radio-group::r2n::radio:input:0"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="radio"
                  value="0"
                />
                <span
                  aria-hidden={true}
                  className="emotion-5"
                  data-orientation="vertical"
                  data-part="item-control"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r2n::radio:control:0"
                />
                <span
                  className="chakra-radio-group__itemText"
                  data-orientation="vertical"
                  data-part="item-text"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r2n::radio:label:0"
                >
                  Yes
                </span>
              </label>
              <label
                className="chakra-radio-group__item emotion-4"
                data-orientation="vertical"
                data-part="item"
                data-scope="radio-group"
                data-ssr=""
                data-state="unchecked"
                dir="ltr"
                htmlFor="radio-group::r2n::radio:input:1"
                id="root-1"
                onClick={[Function]}
                onPointerDown={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
                onPointerUp={[Function]}
              >
                <input
                  data-ownedby="radio-group::r2n:"
                  defaultChecked={false}
                  disabled={false}
                  id="radio-group::r2n::radio:input:1"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="radio"
                  value="1"
                />
                <span
                  aria-hidden={true}
                  className="emotion-5"
                  data-orientation="vertical"
                  data-part="item-control"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r2n::radio:control:1"
                />
                <span
                  className="chakra-radio-group__itemText"
                  data-orientation="vertical"
                  data-part="item-text"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r2n::radio:label:1"
                >
                  No
                </span>
              </label>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-8"
  >
    <button
      className="chakra-button emotion-9"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields schema examples 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::r3f:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r3g:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help root__examples"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            list="root__examples"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="text"
            value=""
          />
          <datalist
            id="root__examples"
          >
            <option
              value="Firefox"
            />
            <option
              value="Chrome"
            />
            <option
              value="Opera"
            />
            <option
              value="Vivaldi"
            />
            <option
              value="Safari"
            />
          </datalist>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields select field 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
  position: relative;
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: var(--chakra-spacing-1\\.5);
    width: var(--chakra-sizes-full);
    --select-trigger-height: var(--chakra-sizes-10);
    --select-trigger-padding-x: var(--chakra-spacing-3);
  }
}

@layer recipes {
  .emotion-4 {
    position: relative;
  }
}

@layer recipes {
  .emotion-6 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    width: var(--chakra-sizes-full);
    min-height: var(--select-trigger-height);
    --input-height: var(--select-trigger-height);
    padding-inline: var(--select-trigger-padding-x);
    border-radius: var(--chakra-radii-l2);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    text-align: start;
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
  }

  .emotion-6:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }

  .emotion-6:is(:placeholder-shown, [data-placeholder-shown]) {
    --mix-color: color-mix(in srgb, var(--chakra-colors-fg-muted) 80%, transparent);
    color: var(--mix-color, var(--chakra-colors-fg-muted));
  }

  .emotion-6:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-6:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-6:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    border-color: var(--chakra-colors-border-emphasized);
  }
}

@layer recipes {
  .emotion-7 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    text-wrap: wrap;
    max-width: 80%;
  }
}

@layer recipes {
  .emotion-8 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-1);
    position: absolute;
    inset-inline-end: 0;
    top: 0;
    bottom: 0;
    padding-inline: var(--select-trigger-padding-x);
    pointer-events: none;
  }
}

@layer recipes {
  .emotion-9 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    color: var(--chakra-colors-fg-muted);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    color: var(--chakra-colors-fg-subtle);
  }

  .emotion-9:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    color: var(--chakra-colors-fg-error);
  }

  .emotion-9 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

.emotion-10 {
  fill: none;
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.emotion-11 {
  min-width: 100%!important;
  z-index: 2!important;
  top: calc(100% + 5px)!important;
}

@layer recipes {
  .emotion-12 {
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    z-index: var(--chakra-z-index-dropdown);
    border-radius: var(--chakra-radii-l2);
    outline: 0;
    max-height: var(--chakra-sizes-96);
    overflow-y: auto;
    box-shadow: var(--chakra-shadows-md);
    padding: var(--chakra-spacing-1);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-12:is([open], [data-open], [data-state=open]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fast);
    animation-duration: var(--chakra-durations-fast);
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=top] {
    -webkit-animation-name: slide-from-bottom,fade-in;
    animation-name: slide-from-bottom,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=bottom] {
    -webkit-animation-name: slide-from-top,fade-in;
    animation-name: slide-from-top,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=left] {
    -webkit-animation-name: slide-from-right,fade-in;
    animation-name: slide-from-right,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=right] {
    -webkit-animation-name: slide-from-left,fade-in;
    animation-name: slide-from-left,fade-in;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fastest);
    animation-duration: var(--chakra-durations-fastest);
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=top] {
    -webkit-animation-name: slide-to-bottom,fade-out;
    animation-name: slide-to-bottom,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=bottom] {
    -webkit-animation-name: slide-to-top,fade-out;
    animation-name: slide-to-top,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=left] {
    -webkit-animation-name: slide-to-right,fade-out;
    animation-name: slide-to-right,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=right] {
    -webkit-animation-name: slide-to-left,fade-out;
    animation-name: slide-to-left,fade-out;
  }
}

@layer recipes {
  .emotion-13 {
    position: relative;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-2);
    cursor: var(--chakra-cursor-option);
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    text-align: start;
    border-radius: var(--chakra-radii-l1);
    padding-block: var(--chakra-spacing-1\\.5);
    padding-inline: var(--chakra-spacing-2);
  }

  .emotion-13[data-highlighted] {
    --mix-background: color-mix(in srgb, var(--chakra-colors-bg-emphasized) 60%, transparent);
    background: var(--mix-background, var(--chakra-colors-bg-emphasized));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-bg-emphasized));
  }

  .emotion-13:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    pointer-events: none;
    opacity: 0.5;
  }

  .emotion-13 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

@layer recipes {
  .emotion-14 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
  }
}

.emotion-19 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-20 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-20:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-20:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-20 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-20:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-20:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::rv:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r10:"
          role="group"
        >
          <div
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-select__root emotion-3"
            data-part="root"
            data-scope="select"
            dir="ltr"
            id="select:root"
            onBlur={[Function]}
            onFocus={[Function]}
          >
            <select
              aria-hidden={true}
              aria-labelledby="field:::r10:::label"
              disabled={false}
              id=":r10:"
              multiple={false}
              name="root"
              onFocus={[Function]}
              required={false}
              style={
                {
                  "border": "0",
                  "clip": "rect(0 0 0 0)",
                  "height": "1px",
                  "margin": "-1px",
                  "overflow": "hidden",
                  "padding": "0",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                  "wordWrap": "normal",
                }
              }
              tabIndex={-1}
            >
              <option
                value=""
              />
              <option
                disabled={false}
                value="0"
              >
                foo
              </option>
              <option
                disabled={false}
                value="1"
              >
                bar
              </option>
            </select>
            <div
              className="chakra-select__control emotion-4"
              data-part="control"
              data-scope="select"
              data-state="closed"
              dir="ltr"
              id="select:root:control"
            >
              <div
                className="chakra-select__control emotion-4"
                data-part="control"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                id="select:root:control"
              >
                <button
                  aria-controls="select:root:content"
                  aria-expanded={false}
                  aria-haspopup="listbox"
                  aria-invalid={false}
                  aria-labelledby="field:::r10:::label"
                  className="chakra-select__trigger emotion-6"
                  data-part="trigger"
                  data-placeholder-shown=""
                  data-scope="select"
                  data-state="closed"
                  dir="ltr"
                  disabled={false}
                  id="select:root:trigger"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  role="combobox"
                  type="button"
                >
                  <span
                    className="chakra-select__valueText emotion-7"
                    data-part="value-text"
                    data-scope="select"
                    dir="ltr"
                  />
                </button>
                <div
                  className="chakra-select__indicatorGroup emotion-8"
                >
                  <div
                    aria-hidden={true}
                    className="chakra-select__indicator emotion-9"
                    data-part="indicator"
                    data-scope="select"
                    data-state="closed"
                    dir="ltr"
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="m6 9 6 6 6-6"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="chakra-select__positioner emotion-11"
              data-part="positioner"
              data-scope="select"
              dir="ltr"
              id="select:root:positioner"
              style={
                {
                  "isolation": "isolate",
                  "left": "0px",
                  "maxHeight": undefined,
                  "maxWidth": undefined,
                  "minWidth": undefined,
                  "pointerEvents": "none",
                  "position": "absolute",
                  "top": "0px",
                  "transform": "translate3d(0, -100vh, 0)",
                  "width": "var(--reference-width)",
                  "zIndex": "var(--z-index)",
                }
              }
            >
              <div
                aria-labelledby="field:::r10:::label"
                className="chakra-select__content emotion-12"
                data-part="content"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                hidden={true}
                id="select:root:content"
                onKeyDown={[Function]}
                role="listbox"
                tabIndex={0}
              >
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="0"
                  dir="ltr"
                  id="select:root:option:0"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  foo
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="1"
                  dir="ltr"
                  id="select:root:option:1"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  bar
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-19"
  >
    <button
      className="chakra-button emotion-20"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields select field multiple choice 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
  position: relative;
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: var(--chakra-spacing-1\\.5);
    width: var(--chakra-sizes-full);
    --select-trigger-height: var(--chakra-sizes-10);
    --select-trigger-padding-x: var(--chakra-spacing-3);
  }
}

@layer recipes {
  .emotion-4 {
    position: relative;
  }
}

@layer recipes {
  .emotion-6 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    width: var(--chakra-sizes-full);
    min-height: var(--select-trigger-height);
    --input-height: var(--select-trigger-height);
    padding-inline: var(--select-trigger-padding-x);
    border-radius: var(--chakra-radii-l2);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    text-align: start;
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
  }

  .emotion-6:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }

  .emotion-6:is(:placeholder-shown, [data-placeholder-shown]) {
    --mix-color: color-mix(in srgb, var(--chakra-colors-fg-muted) 80%, transparent);
    color: var(--mix-color, var(--chakra-colors-fg-muted));
  }

  .emotion-6:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-6:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-6:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    border-color: var(--chakra-colors-border-emphasized);
  }
}

@layer recipes {
  .emotion-7 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    text-wrap: wrap;
    max-width: 80%;
  }
}

@layer recipes {
  .emotion-8 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-1);
    position: absolute;
    inset-inline-end: 0;
    top: 0;
    bottom: 0;
    padding-inline: var(--select-trigger-padding-x);
    pointer-events: none;
  }
}

@layer recipes {
  .emotion-9 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    color: var(--chakra-colors-fg-muted);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    color: var(--chakra-colors-fg-subtle);
  }

  .emotion-9:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    color: var(--chakra-colors-fg-error);
  }

  .emotion-9 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

.emotion-10 {
  fill: none;
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.emotion-11 {
  min-width: 100%!important;
  z-index: 2!important;
  top: calc(100% + 5px)!important;
}

@layer recipes {
  .emotion-12 {
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    z-index: var(--chakra-z-index-dropdown);
    border-radius: var(--chakra-radii-l2);
    outline: 0;
    max-height: var(--chakra-sizes-96);
    overflow-y: auto;
    box-shadow: var(--chakra-shadows-md);
    padding: var(--chakra-spacing-1);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-12:is([open], [data-open], [data-state=open]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fast);
    animation-duration: var(--chakra-durations-fast);
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=top] {
    -webkit-animation-name: slide-from-bottom,fade-in;
    animation-name: slide-from-bottom,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=bottom] {
    -webkit-animation-name: slide-from-top,fade-in;
    animation-name: slide-from-top,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=left] {
    -webkit-animation-name: slide-from-right,fade-in;
    animation-name: slide-from-right,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=right] {
    -webkit-animation-name: slide-from-left,fade-in;
    animation-name: slide-from-left,fade-in;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fastest);
    animation-duration: var(--chakra-durations-fastest);
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=top] {
    -webkit-animation-name: slide-to-bottom,fade-out;
    animation-name: slide-to-bottom,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=bottom] {
    -webkit-animation-name: slide-to-top,fade-out;
    animation-name: slide-to-top,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=left] {
    -webkit-animation-name: slide-to-right,fade-out;
    animation-name: slide-to-right,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=right] {
    -webkit-animation-name: slide-to-left,fade-out;
    animation-name: slide-to-left,fade-out;
  }
}

@layer recipes {
  .emotion-13 {
    position: relative;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-2);
    cursor: var(--chakra-cursor-option);
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    text-align: start;
    border-radius: var(--chakra-radii-l1);
    padding-block: var(--chakra-spacing-1\\.5);
    padding-inline: var(--chakra-spacing-2);
  }

  .emotion-13[data-highlighted] {
    --mix-background: color-mix(in srgb, var(--chakra-colors-bg-emphasized) 60%, transparent);
    background: var(--mix-background, var(--chakra-colors-bg-emphasized));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-bg-emphasized));
  }

  .emotion-13:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    pointer-events: none;
    opacity: 0.5;
  }

  .emotion-13 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

@layer recipes {
  .emotion-14 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
  }
}

.emotion-25 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-26 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-26:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-26:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-26 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-26:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-26:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-array"
  >
    <fieldset
      aria-labelledby="fieldset:::r12:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r13:"
          role="group"
        >
          <div
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-select__root emotion-3"
            data-part="root"
            data-scope="select"
            dir="ltr"
            id="select:root"
            onBlur={[Function]}
            onFocus={[Function]}
          >
            <select
              aria-hidden={true}
              aria-labelledby="field:::r13:::label"
              defaultValue={[]}
              disabled={false}
              id=":r13:"
              multiple={true}
              name="root"
              onFocus={[Function]}
              required={false}
              style={
                {
                  "border": "0",
                  "clip": "rect(0 0 0 0)",
                  "height": "1px",
                  "margin": "-1px",
                  "overflow": "hidden",
                  "padding": "0",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                  "wordWrap": "normal",
                }
              }
              tabIndex={-1}
            >
              <option
                value=""
              />
              <option
                disabled={false}
                value="0"
              >
                foo
              </option>
              <option
                disabled={false}
                value="1"
              >
                bar
              </option>
              <option
                disabled={false}
                value="2"
              >
                fuzz
              </option>
              <option
                disabled={false}
                value="3"
              >
                qux
              </option>
            </select>
            <div
              className="chakra-select__control emotion-4"
              data-part="control"
              data-scope="select"
              data-state="closed"
              dir="ltr"
              id="select:root:control"
            >
              <div
                className="chakra-select__control emotion-4"
                data-part="control"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                id="select:root:control"
              >
                <button
                  aria-controls="select:root:content"
                  aria-expanded={false}
                  aria-haspopup="listbox"
                  aria-invalid={false}
                  aria-labelledby="field:::r13:::label"
                  className="chakra-select__trigger emotion-6"
                  data-part="trigger"
                  data-placeholder-shown=""
                  data-scope="select"
                  data-state="closed"
                  dir="ltr"
                  disabled={false}
                  id="select:root:trigger"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  role="combobox"
                  type="button"
                >
                  <span
                    className="chakra-select__valueText emotion-7"
                    data-part="value-text"
                    data-scope="select"
                    dir="ltr"
                  />
                </button>
                <div
                  className="chakra-select__indicatorGroup emotion-8"
                >
                  <div
                    aria-hidden={true}
                    className="chakra-select__indicator emotion-9"
                    data-part="indicator"
                    data-scope="select"
                    data-state="closed"
                    dir="ltr"
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="m6 9 6 6 6-6"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="chakra-select__positioner emotion-11"
              data-part="positioner"
              data-scope="select"
              dir="ltr"
              id="select:root:positioner"
              style={
                {
                  "isolation": "isolate",
                  "left": "0px",
                  "maxHeight": undefined,
                  "maxWidth": undefined,
                  "minWidth": undefined,
                  "pointerEvents": "none",
                  "position": "absolute",
                  "top": "0px",
                  "transform": "translate3d(0, -100vh, 0)",
                  "width": "var(--reference-width)",
                  "zIndex": "var(--z-index)",
                }
              }
            >
              <div
                aria-labelledby="field:::r13:::label"
                aria-multiselectable={true}
                className="chakra-select__content emotion-12"
                data-part="content"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                hidden={true}
                id="select:root:content"
                onKeyDown={[Function]}
                role="listbox"
                tabIndex={0}
              >
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="0"
                  dir="ltr"
                  id="select:root:option:0"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  foo
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="1"
                  dir="ltr"
                  id="select:root:option:1"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  bar
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="2"
                  dir="ltr"
                  id="select:root:option:2"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  fuzz
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="3"
                  dir="ltr"
                  id="select:root:option:3"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  qux
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-25"
  >
    <button
      className="chakra-button emotion-26"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields select field multiple choice enumDisabled 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
  position: relative;
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: var(--chakra-spacing-1\\.5);
    width: var(--chakra-sizes-full);
    --select-trigger-height: var(--chakra-sizes-10);
    --select-trigger-padding-x: var(--chakra-spacing-3);
  }
}

@layer recipes {
  .emotion-4 {
    position: relative;
  }
}

@layer recipes {
  .emotion-6 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    width: var(--chakra-sizes-full);
    min-height: var(--select-trigger-height);
    --input-height: var(--select-trigger-height);
    padding-inline: var(--select-trigger-padding-x);
    border-radius: var(--chakra-radii-l2);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    text-align: start;
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
  }

  .emotion-6:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }

  .emotion-6:is(:placeholder-shown, [data-placeholder-shown]) {
    --mix-color: color-mix(in srgb, var(--chakra-colors-fg-muted) 80%, transparent);
    color: var(--mix-color, var(--chakra-colors-fg-muted));
  }

  .emotion-6:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-6:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-6:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    border-color: var(--chakra-colors-border-emphasized);
  }
}

@layer recipes {
  .emotion-7 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    text-wrap: wrap;
    max-width: 80%;
  }
}

@layer recipes {
  .emotion-8 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-1);
    position: absolute;
    inset-inline-end: 0;
    top: 0;
    bottom: 0;
    padding-inline: var(--select-trigger-padding-x);
    pointer-events: none;
  }
}

@layer recipes {
  .emotion-9 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    color: var(--chakra-colors-fg-muted);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    color: var(--chakra-colors-fg-subtle);
  }

  .emotion-9:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    color: var(--chakra-colors-fg-error);
  }

  .emotion-9 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

.emotion-10 {
  fill: none;
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.emotion-11 {
  min-width: 100%!important;
  z-index: 2!important;
  top: calc(100% + 5px)!important;
}

@layer recipes {
  .emotion-12 {
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    z-index: var(--chakra-z-index-dropdown);
    border-radius: var(--chakra-radii-l2);
    outline: 0;
    max-height: var(--chakra-sizes-96);
    overflow-y: auto;
    box-shadow: var(--chakra-shadows-md);
    padding: var(--chakra-spacing-1);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-12:is([open], [data-open], [data-state=open]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fast);
    animation-duration: var(--chakra-durations-fast);
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=top] {
    -webkit-animation-name: slide-from-bottom,fade-in;
    animation-name: slide-from-bottom,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=bottom] {
    -webkit-animation-name: slide-from-top,fade-in;
    animation-name: slide-from-top,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=left] {
    -webkit-animation-name: slide-from-right,fade-in;
    animation-name: slide-from-right,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=right] {
    -webkit-animation-name: slide-from-left,fade-in;
    animation-name: slide-from-left,fade-in;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fastest);
    animation-duration: var(--chakra-durations-fastest);
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=top] {
    -webkit-animation-name: slide-to-bottom,fade-out;
    animation-name: slide-to-bottom,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=bottom] {
    -webkit-animation-name: slide-to-top,fade-out;
    animation-name: slide-to-top,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=left] {
    -webkit-animation-name: slide-to-right,fade-out;
    animation-name: slide-to-right,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=right] {
    -webkit-animation-name: slide-to-left,fade-out;
    animation-name: slide-to-left,fade-out;
  }
}

@layer recipes {
  .emotion-13 {
    position: relative;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-2);
    cursor: var(--chakra-cursor-option);
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    text-align: start;
    border-radius: var(--chakra-radii-l1);
    padding-block: var(--chakra-spacing-1\\.5);
    padding-inline: var(--chakra-spacing-2);
  }

  .emotion-13[data-highlighted] {
    --mix-background: color-mix(in srgb, var(--chakra-colors-bg-emphasized) 60%, transparent);
    background: var(--mix-background, var(--chakra-colors-bg-emphasized));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-bg-emphasized));
  }

  .emotion-13:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    pointer-events: none;
    opacity: 0.5;
  }

  .emotion-13 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

@layer recipes {
  .emotion-14 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
  }
}

.emotion-25 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-26 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-26:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-26:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-26 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-26:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-26:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-array"
  >
    <fieldset
      aria-labelledby="fieldset:::r1k:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r1l:"
          role="group"
        >
          <div
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-select__root emotion-3"
            data-part="root"
            data-scope="select"
            dir="ltr"
            id="select:root"
            onBlur={[Function]}
            onFocus={[Function]}
          >
            <select
              aria-hidden={true}
              aria-labelledby="field:::r1l:::label"
              defaultValue={[]}
              disabled={false}
              id=":r1l:"
              multiple={true}
              name="root"
              onFocus={[Function]}
              required={false}
              style={
                {
                  "border": "0",
                  "clip": "rect(0 0 0 0)",
                  "height": "1px",
                  "margin": "-1px",
                  "overflow": "hidden",
                  "padding": "0",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                  "wordWrap": "normal",
                }
              }
              tabIndex={-1}
            >
              <option
                value=""
              />
              <option
                disabled={false}
                value="0"
              >
                foo
              </option>
              <option
                disabled={true}
                value="1"
              >
                bar
              </option>
              <option
                disabled={false}
                value="2"
              >
                fuzz
              </option>
              <option
                disabled={false}
                value="3"
              >
                qux
              </option>
            </select>
            <div
              className="chakra-select__control emotion-4"
              data-part="control"
              data-scope="select"
              data-state="closed"
              dir="ltr"
              id="select:root:control"
            >
              <div
                className="chakra-select__control emotion-4"
                data-part="control"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                id="select:root:control"
              >
                <button
                  aria-controls="select:root:content"
                  aria-expanded={false}
                  aria-haspopup="listbox"
                  aria-invalid={false}
                  aria-labelledby="field:::r1l:::label"
                  className="chakra-select__trigger emotion-6"
                  data-part="trigger"
                  data-placeholder-shown=""
                  data-scope="select"
                  data-state="closed"
                  dir="ltr"
                  disabled={false}
                  id="select:root:trigger"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  role="combobox"
                  type="button"
                >
                  <span
                    className="chakra-select__valueText emotion-7"
                    data-part="value-text"
                    data-scope="select"
                    dir="ltr"
                  />
                </button>
                <div
                  className="chakra-select__indicatorGroup emotion-8"
                >
                  <div
                    aria-hidden={true}
                    className="chakra-select__indicator emotion-9"
                    data-part="indicator"
                    data-scope="select"
                    data-state="closed"
                    dir="ltr"
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="m6 9 6 6 6-6"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="chakra-select__positioner emotion-11"
              data-part="positioner"
              data-scope="select"
              dir="ltr"
              id="select:root:positioner"
              style={
                {
                  "isolation": "isolate",
                  "left": "0px",
                  "maxHeight": undefined,
                  "maxWidth": undefined,
                  "minWidth": undefined,
                  "pointerEvents": "none",
                  "position": "absolute",
                  "top": "0px",
                  "transform": "translate3d(0, -100vh, 0)",
                  "width": "var(--reference-width)",
                  "zIndex": "var(--z-index)",
                }
              }
            >
              <div
                aria-labelledby="field:::r1l:::label"
                aria-multiselectable={true}
                className="chakra-select__content emotion-12"
                data-part="content"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                hidden={true}
                id="select:root:content"
                onKeyDown={[Function]}
                role="listbox"
                tabIndex={0}
              >
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="0"
                  dir="ltr"
                  id="select:root:option:0"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  foo
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-disabled="true"
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-disabled=""
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="1"
                  dir="ltr"
                  id="select:root:option:1"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  bar
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="2"
                  dir="ltr"
                  id="select:root:option:2"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  fuzz
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="3"
                  dir="ltr"
                  id="select:root:option:3"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  qux
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-25"
  >
    <button
      className="chakra-button emotion-26"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields select field multiple choice enumDisabled using checkboxes 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-2>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-3 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: var(--chakra-spacing-1\\.5);
  }
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.5rem;
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    gap: var(--chakra-spacing-2\\.5);
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    vertical-align: top;
    position: relative;
  }
}

@layer recipes {
  .emotion-6 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    color: var(--chakra-colors-white);
    border-width: 1px;
    border-color: var(--chakra-colors-border-emphasized);
    border-radius: var(--chakra-radii-l1);
    cursor: var(--chakra-cursor-checkbox);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
    padding: var(--chakra-spacing-0\\.5);
  }

  .emotion-6:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-6 :where(svg) {
    width: var(--chakra-sizes-full);
    height: var(--chakra-sizes-full);
  }

  .emotion-6:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --chakra-colors-color-palette-50: var(--chakra-colors-red-50);
    --chakra-colors-color-palette-100: var(--chakra-colors-red-100);
    --chakra-colors-color-palette-200: var(--chakra-colors-red-200);
    --chakra-colors-color-palette-300: var(--chakra-colors-red-300);
    --chakra-colors-color-palette-400: var(--chakra-colors-red-400);
    --chakra-colors-color-palette-500: var(--chakra-colors-red-500);
    --chakra-colors-color-palette-600: var(--chakra-colors-red-600);
    --chakra-colors-color-palette-700: var(--chakra-colors-red-700);
    --chakra-colors-color-palette-800: var(--chakra-colors-red-800);
    --chakra-colors-color-palette-900: var(--chakra-colors-red-900);
    --chakra-colors-color-palette-950: var(--chakra-colors-red-950);
    --chakra-colors-color-palette-contrast: var(--chakra-colors-red-contrast);
    --chakra-colors-color-palette-fg: var(--chakra-colors-red-fg);
    --chakra-colors-color-palette-subtle: var(--chakra-colors-red-subtle);
    --chakra-colors-color-palette-muted: var(--chakra-colors-red-muted);
    --chakra-colors-color-palette-emphasized: var(--chakra-colors-red-emphasized);
    --chakra-colors-color-palette-solid: var(--chakra-colors-red-solid);
    --chakra-colors-color-palette-focus-ring: var(--chakra-colors-red-focus-ring);
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-6:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: var(--chakra-cursor-disabled);
  }

  .emotion-6:is([data-state=checked], [data-state=indeterminate]) {
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
    border-color: var(--chakra-colors-color-palette-solid);
  }
}

.emotion-7 {
  fill: none;
  stroke: currentColor;
  stroke-width: 3px;
  stroke-linecap: round;
  stroke-linejoin: round;
}

@layer recipes {
  .emotion-8 {
    font-weight: var(--chakra-font-weights-medium);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-8:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

.emotion-21 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-22 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-22:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-22:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-22 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-22:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-22:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-array"
  >
    <fieldset
      aria-labelledby="fieldset:::r1n:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <fieldset
          aria-labelledby="fieldset:::r1o:::legend"
          className="fieldset__root emotion-2"
          data-part="root"
          data-scope="fieldset"
          disabled={false}
        >
          <div
            aria-describedby="root__error root__description root__help"
            className="emotion-3"
            data-part="group"
            data-scope="checkbox"
            required={false}
            role="group"
          >
            <div
              className="chakra-stack emotion-4"
            >
              <label
                className="chakra-checkbox__root emotion-5"
                data-part="root"
                data-scope="checkbox"
                data-state="unchecked"
                dir="ltr"
                htmlFor="checkbox:root-0:input"
                id="checkbox:root-0"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
              >
                <input
                  aria-labelledby="checkbox:root-0:label"
                  defaultChecked={false}
                  disabled={false}
                  id="checkbox:root-0:input"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="checkbox"
                  value="0"
                />
                <div
                  aria-hidden={true}
                  className="chakra-checkbox__control emotion-6"
                  data-part="control"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-0:control"
                >
                  <svg
                    className="emotion-7"
                    data-state="unchecked"
                    viewBox="0 0 24 24"
                  />
                </div>
                <span
                  className="chakra-checkbox__label emotion-8"
                  data-part="label"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-0:label"
                >
                  <p>
                    foo
                  </p>
                </span>
              </label>
              <label
                className="chakra-checkbox__root emotion-5"
                data-disabled=""
                data-part="root"
                data-scope="checkbox"
                data-state="unchecked"
                dir="ltr"
                htmlFor="checkbox:root-1:input"
                id="checkbox:root-1"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
              >
                <input
                  aria-labelledby="checkbox:root-1:label"
                  defaultChecked={false}
                  disabled={true}
                  id="checkbox:root-1:input"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="checkbox"
                  value="1"
                />
                <div
                  aria-hidden={true}
                  className="chakra-checkbox__control emotion-6"
                  data-disabled=""
                  data-part="control"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-1:control"
                >
                  <svg
                    className="emotion-7"
                    data-disabled=""
                    data-state="unchecked"
                    viewBox="0 0 24 24"
                  />
                </div>
                <span
                  className="chakra-checkbox__label emotion-8"
                  data-disabled=""
                  data-part="label"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-1:label"
                >
                  <p>
                    bar
                  </p>
                </span>
              </label>
              <label
                className="chakra-checkbox__root emotion-5"
                data-part="root"
                data-scope="checkbox"
                data-state="unchecked"
                dir="ltr"
                htmlFor="checkbox:root-2:input"
                id="checkbox:root-2"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
              >
                <input
                  aria-labelledby="checkbox:root-2:label"
                  defaultChecked={false}
                  disabled={false}
                  id="checkbox:root-2:input"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="checkbox"
                  value="2"
                />
                <div
                  aria-hidden={true}
                  className="chakra-checkbox__control emotion-6"
                  data-part="control"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-2:control"
                >
                  <svg
                    className="emotion-7"
                    data-state="unchecked"
                    viewBox="0 0 24 24"
                  />
                </div>
                <span
                  className="chakra-checkbox__label emotion-8"
                  data-part="label"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-2:label"
                >
                  <p>
                    fuzz
                  </p>
                </span>
              </label>
              <label
                className="chakra-checkbox__root emotion-5"
                data-part="root"
                data-scope="checkbox"
                data-state="unchecked"
                dir="ltr"
                htmlFor="checkbox:root-3:input"
                id="checkbox:root-3"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
              >
                <input
                  aria-labelledby="checkbox:root-3:label"
                  defaultChecked={false}
                  disabled={false}
                  id="checkbox:root-3:input"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="checkbox"
                  value="3"
                />
                <div
                  aria-hidden={true}
                  className="chakra-checkbox__control emotion-6"
                  data-part="control"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-3:control"
                >
                  <svg
                    className="emotion-7"
                    data-state="unchecked"
                    viewBox="0 0 24 24"
                  />
                </div>
                <span
                  className="chakra-checkbox__label emotion-8"
                  data-part="label"
                  data-scope="checkbox"
                  data-state="unchecked"
                  dir="ltr"
                  id="checkbox:root-3:label"
                >
                  <p>
                    qux
                  </p>
                </span>
              </label>
            </div>
          </div>
        </fieldset>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-21"
  >
    <button
      className="chakra-button emotion-22"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields select field multiple choice formData 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
  position: relative;
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: var(--chakra-spacing-1\\.5);
    width: var(--chakra-sizes-full);
    --select-trigger-height: var(--chakra-sizes-10);
    --select-trigger-padding-x: var(--chakra-spacing-3);
  }
}

@layer recipes {
  .emotion-4 {
    position: relative;
  }
}

@layer recipes {
  .emotion-6 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    width: var(--chakra-sizes-full);
    min-height: var(--select-trigger-height);
    --input-height: var(--select-trigger-height);
    padding-inline: var(--select-trigger-padding-x);
    border-radius: var(--chakra-radii-l2);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    text-align: start;
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
  }

  .emotion-6:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }

  .emotion-6:is(:placeholder-shown, [data-placeholder-shown]) {
    --mix-color: color-mix(in srgb, var(--chakra-colors-fg-muted) 80%, transparent);
    color: var(--mix-color, var(--chakra-colors-fg-muted));
  }

  .emotion-6:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-6:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-6:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    border-color: var(--chakra-colors-border-emphasized);
  }
}

@layer recipes {
  .emotion-7 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    text-wrap: wrap;
    max-width: 80%;
  }
}

@layer recipes {
  .emotion-8 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-1);
    position: absolute;
    inset-inline-end: 0;
    top: 0;
    bottom: 0;
    padding-inline: var(--select-trigger-padding-x);
    pointer-events: none;
  }
}

@layer recipes {
  .emotion-9 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    color: var(--chakra-colors-fg-muted);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    color: var(--chakra-colors-fg-subtle);
  }

  .emotion-9:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    color: var(--chakra-colors-fg-error);
  }

  .emotion-9 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

.emotion-10 {
  fill: none;
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.emotion-11 {
  min-width: 100%!important;
  z-index: 2!important;
  top: calc(100% + 5px)!important;
}

@layer recipes {
  .emotion-12 {
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    z-index: var(--chakra-z-index-dropdown);
    border-radius: var(--chakra-radii-l2);
    outline: 0;
    max-height: var(--chakra-sizes-96);
    overflow-y: auto;
    box-shadow: var(--chakra-shadows-md);
    padding: var(--chakra-spacing-1);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-12:is([open], [data-open], [data-state=open]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fast);
    animation-duration: var(--chakra-durations-fast);
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=top] {
    -webkit-animation-name: slide-from-bottom,fade-in;
    animation-name: slide-from-bottom,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=bottom] {
    -webkit-animation-name: slide-from-top,fade-in;
    animation-name: slide-from-top,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=left] {
    -webkit-animation-name: slide-from-right,fade-in;
    animation-name: slide-from-right,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=right] {
    -webkit-animation-name: slide-from-left,fade-in;
    animation-name: slide-from-left,fade-in;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fastest);
    animation-duration: var(--chakra-durations-fastest);
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=top] {
    -webkit-animation-name: slide-to-bottom,fade-out;
    animation-name: slide-to-bottom,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=bottom] {
    -webkit-animation-name: slide-to-top,fade-out;
    animation-name: slide-to-top,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=left] {
    -webkit-animation-name: slide-to-right,fade-out;
    animation-name: slide-to-right,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=right] {
    -webkit-animation-name: slide-to-left,fade-out;
    animation-name: slide-to-left,fade-out;
  }
}

@layer recipes {
  .emotion-13 {
    position: relative;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-2);
    cursor: var(--chakra-cursor-option);
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    text-align: start;
    border-radius: var(--chakra-radii-l1);
    padding-block: var(--chakra-spacing-1\\.5);
    padding-inline: var(--chakra-spacing-2);
  }

  .emotion-13[data-highlighted] {
    --mix-background: color-mix(in srgb, var(--chakra-colors-bg-emphasized) 60%, transparent);
    background: var(--mix-background, var(--chakra-colors-bg-emphasized));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-bg-emphasized));
  }

  .emotion-13:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    pointer-events: none;
    opacity: 0.5;
  }

  .emotion-13 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

@layer recipes {
  .emotion-14 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
  }
}

.emotion-25 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-26 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-26:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-26:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-26 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-26:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-26:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-array"
  >
    <fieldset
      aria-labelledby="fieldset:::r20:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r21:"
          role="group"
        >
          <div
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-select__root emotion-3"
            data-part="root"
            data-scope="select"
            dir="ltr"
            id="select:root"
            onBlur={[Function]}
            onFocus={[Function]}
          >
            <select
              aria-hidden={true}
              aria-labelledby="field:::r21:::label"
              defaultValue={
                [
                  "0",
                  "1",
                ]
              }
              disabled={false}
              id=":r21:"
              multiple={true}
              name="root"
              onFocus={[Function]}
              required={false}
              style={
                {
                  "border": "0",
                  "clip": "rect(0 0 0 0)",
                  "height": "1px",
                  "margin": "-1px",
                  "overflow": "hidden",
                  "padding": "0",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                  "wordWrap": "normal",
                }
              }
              tabIndex={-1}
            >
              <option
                disabled={false}
                value="0"
              >
                foo
              </option>
              <option
                disabled={false}
                value="1"
              >
                bar
              </option>
              <option
                disabled={false}
                value="2"
              >
                fuzz
              </option>
              <option
                disabled={false}
                value="3"
              >
                qux
              </option>
            </select>
            <div
              className="chakra-select__control emotion-4"
              data-part="control"
              data-scope="select"
              data-state="closed"
              dir="ltr"
              id="select:root:control"
            >
              <div
                className="chakra-select__control emotion-4"
                data-part="control"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                id="select:root:control"
              >
                <button
                  aria-controls="select:root:content"
                  aria-expanded={false}
                  aria-haspopup="listbox"
                  aria-invalid={false}
                  aria-labelledby="field:::r21:::label"
                  className="chakra-select__trigger emotion-6"
                  data-part="trigger"
                  data-scope="select"
                  data-state="closed"
                  dir="ltr"
                  disabled={false}
                  id="select:root:trigger"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  role="combobox"
                  type="button"
                >
                  <span
                    className="chakra-select__valueText emotion-7"
                    data-part="value-text"
                    data-scope="select"
                    dir="ltr"
                  >
                    2 selected
                  </span>
                </button>
                <div
                  className="chakra-select__indicatorGroup emotion-8"
                >
                  <div
                    aria-hidden={true}
                    className="chakra-select__indicator emotion-9"
                    data-part="indicator"
                    data-scope="select"
                    data-state="closed"
                    dir="ltr"
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="m6 9 6 6 6-6"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="chakra-select__positioner emotion-11"
              data-part="positioner"
              data-scope="select"
              dir="ltr"
              id="select:root:positioner"
              style={
                {
                  "isolation": "isolate",
                  "left": "0px",
                  "maxHeight": undefined,
                  "maxWidth": undefined,
                  "minWidth": undefined,
                  "pointerEvents": "none",
                  "position": "absolute",
                  "top": "0px",
                  "transform": "translate3d(0, -100vh, 0)",
                  "width": "var(--reference-width)",
                  "zIndex": "var(--z-index)",
                }
              }
            >
              <div
                aria-labelledby="field:::r21:::label"
                aria-multiselectable={true}
                className="chakra-select__content emotion-12"
                data-part="content"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                hidden={true}
                id="select:root:content"
                onKeyDown={[Function]}
                role="listbox"
                tabIndex={0}
              >
                <div
                  aria-selected={true}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="checked"
                  data-value="0"
                  dir="ltr"
                  id="select:root:option:0"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  foo
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="checked"
                    hidden={false}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-selected={true}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="checked"
                  data-value="1"
                  dir="ltr"
                  id="select:root:option:1"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  bar
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="checked"
                    hidden={false}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="2"
                  dir="ltr"
                  id="select:root:option:2"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  fuzz
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="3"
                  dir="ltr"
                  id="select:root:option:3"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  qux
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-25"
  >
    <button
      className="chakra-button emotion-26"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields select field multiple choice with labels 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
  position: relative;
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: var(--chakra-spacing-1\\.5);
    width: var(--chakra-sizes-full);
    --select-trigger-height: var(--chakra-sizes-10);
    --select-trigger-padding-x: var(--chakra-spacing-3);
  }
}

@layer recipes {
  .emotion-4 {
    position: relative;
  }
}

@layer recipes {
  .emotion-6 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    width: var(--chakra-sizes-full);
    min-height: var(--select-trigger-height);
    --input-height: var(--select-trigger-height);
    padding-inline: var(--select-trigger-padding-x);
    border-radius: var(--chakra-radii-l2);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    text-align: start;
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
  }

  .emotion-6:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }

  .emotion-6:is(:placeholder-shown, [data-placeholder-shown]) {
    --mix-color: color-mix(in srgb, var(--chakra-colors-fg-muted) 80%, transparent);
    color: var(--mix-color, var(--chakra-colors-fg-muted));
  }

  .emotion-6:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-6:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-6:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    border-color: var(--chakra-colors-border-emphasized);
  }
}

@layer recipes {
  .emotion-7 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    text-wrap: wrap;
    max-width: 80%;
  }
}

@layer recipes {
  .emotion-8 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-1);
    position: absolute;
    inset-inline-end: 0;
    top: 0;
    bottom: 0;
    padding-inline: var(--select-trigger-padding-x);
    pointer-events: none;
  }
}

@layer recipes {
  .emotion-9 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    color: var(--chakra-colors-fg-muted);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    color: var(--chakra-colors-fg-subtle);
  }

  .emotion-9:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    color: var(--chakra-colors-fg-error);
  }

  .emotion-9 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

.emotion-10 {
  fill: none;
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.emotion-11 {
  min-width: 100%!important;
  z-index: 2!important;
  top: calc(100% + 5px)!important;
}

@layer recipes {
  .emotion-12 {
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    z-index: var(--chakra-z-index-dropdown);
    border-radius: var(--chakra-radii-l2);
    outline: 0;
    max-height: var(--chakra-sizes-96);
    overflow-y: auto;
    box-shadow: var(--chakra-shadows-md);
    padding: var(--chakra-spacing-1);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-12:is([open], [data-open], [data-state=open]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fast);
    animation-duration: var(--chakra-durations-fast);
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=top] {
    -webkit-animation-name: slide-from-bottom,fade-in;
    animation-name: slide-from-bottom,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=bottom] {
    -webkit-animation-name: slide-from-top,fade-in;
    animation-name: slide-from-top,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=left] {
    -webkit-animation-name: slide-from-right,fade-in;
    animation-name: slide-from-right,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=right] {
    -webkit-animation-name: slide-from-left,fade-in;
    animation-name: slide-from-left,fade-in;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fastest);
    animation-duration: var(--chakra-durations-fastest);
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=top] {
    -webkit-animation-name: slide-to-bottom,fade-out;
    animation-name: slide-to-bottom,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=bottom] {
    -webkit-animation-name: slide-to-top,fade-out;
    animation-name: slide-to-top,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=left] {
    -webkit-animation-name: slide-to-right,fade-out;
    animation-name: slide-to-right,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=right] {
    -webkit-animation-name: slide-to-left,fade-out;
    animation-name: slide-to-left,fade-out;
  }
}

@layer recipes {
  .emotion-13 {
    position: relative;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-2);
    cursor: var(--chakra-cursor-option);
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    text-align: start;
    border-radius: var(--chakra-radii-l1);
    padding-block: var(--chakra-spacing-1\\.5);
    padding-inline: var(--chakra-spacing-2);
  }

  .emotion-13[data-highlighted] {
    --mix-background: color-mix(in srgb, var(--chakra-colors-bg-emphasized) 60%, transparent);
    background: var(--mix-background, var(--chakra-colors-bg-emphasized));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-bg-emphasized));
  }

  .emotion-13:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    pointer-events: none;
    opacity: 0.5;
  }

  .emotion-13 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

@layer recipes {
  .emotion-14 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
  }
}

.emotion-22 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-23 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-23:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-23:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-23 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-23:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-23:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-array"
  >
    <fieldset
      aria-labelledby="fieldset:::r15:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r16:"
          role="group"
        >
          <div
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-select__root emotion-3"
            data-part="root"
            data-scope="select"
            dir="ltr"
            id="select:root"
            onBlur={[Function]}
            onFocus={[Function]}
          >
            <select
              aria-hidden={true}
              aria-labelledby="field:::r16:::label"
              defaultValue={[]}
              disabled={false}
              id=":r16:"
              multiple={true}
              name="root"
              onFocus={[Function]}
              required={false}
              style={
                {
                  "border": "0",
                  "clip": "rect(0 0 0 0)",
                  "height": "1px",
                  "margin": "-1px",
                  "overflow": "hidden",
                  "padding": "0",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                  "wordWrap": "normal",
                }
              }
              tabIndex={-1}
            >
              <option
                value=""
              />
              <option
                disabled={false}
                value="0"
              >
                Blue
              </option>
              <option
                disabled={false}
                value="1"
              >
                Red
              </option>
              <option
                disabled={false}
                value="2"
              >
                Green
              </option>
            </select>
            <div
              className="chakra-select__control emotion-4"
              data-part="control"
              data-scope="select"
              data-state="closed"
              dir="ltr"
              id="select:root:control"
            >
              <div
                className="chakra-select__control emotion-4"
                data-part="control"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                id="select:root:control"
              >
                <button
                  aria-controls="select:root:content"
                  aria-expanded={false}
                  aria-haspopup="listbox"
                  aria-invalid={false}
                  aria-labelledby="field:::r16:::label"
                  className="chakra-select__trigger emotion-6"
                  data-part="trigger"
                  data-placeholder-shown=""
                  data-scope="select"
                  data-state="closed"
                  dir="ltr"
                  disabled={false}
                  id="select:root:trigger"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  role="combobox"
                  type="button"
                >
                  <span
                    className="chakra-select__valueText emotion-7"
                    data-part="value-text"
                    data-scope="select"
                    dir="ltr"
                  />
                </button>
                <div
                  className="chakra-select__indicatorGroup emotion-8"
                >
                  <div
                    aria-hidden={true}
                    className="chakra-select__indicator emotion-9"
                    data-part="indicator"
                    data-scope="select"
                    data-state="closed"
                    dir="ltr"
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="m6 9 6 6 6-6"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="chakra-select__positioner emotion-11"
              data-part="positioner"
              data-scope="select"
              dir="ltr"
              id="select:root:positioner"
              style={
                {
                  "isolation": "isolate",
                  "left": "0px",
                  "maxHeight": undefined,
                  "maxWidth": undefined,
                  "minWidth": undefined,
                  "pointerEvents": "none",
                  "position": "absolute",
                  "top": "0px",
                  "transform": "translate3d(0, -100vh, 0)",
                  "width": "var(--reference-width)",
                  "zIndex": "var(--z-index)",
                }
              }
            >
              <div
                aria-labelledby="field:::r16:::label"
                aria-multiselectable={true}
                className="chakra-select__content emotion-12"
                data-part="content"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                hidden={true}
                id="select:root:content"
                onKeyDown={[Function]}
                role="listbox"
                tabIndex={0}
              >
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="0"
                  dir="ltr"
                  id="select:root:option:0"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  Blue
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="1"
                  dir="ltr"
                  id="select:root:option:1"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  Red
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="2"
                  dir="ltr"
                  id="select:root:option:2"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  Green
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-22"
  >
    <button
      className="chakra-button emotion-23"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields select field single choice enumDisabled 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
  position: relative;
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: var(--chakra-spacing-1\\.5);
    width: var(--chakra-sizes-full);
    --select-trigger-height: var(--chakra-sizes-10);
    --select-trigger-padding-x: var(--chakra-spacing-3);
  }
}

@layer recipes {
  .emotion-4 {
    position: relative;
  }
}

@layer recipes {
  .emotion-6 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    width: var(--chakra-sizes-full);
    min-height: var(--select-trigger-height);
    --input-height: var(--select-trigger-height);
    padding-inline: var(--select-trigger-padding-x);
    border-radius: var(--chakra-radii-l2);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    text-align: start;
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
  }

  .emotion-6:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }

  .emotion-6:is(:placeholder-shown, [data-placeholder-shown]) {
    --mix-color: color-mix(in srgb, var(--chakra-colors-fg-muted) 80%, transparent);
    color: var(--mix-color, var(--chakra-colors-fg-muted));
  }

  .emotion-6:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-6:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-6:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    border-color: var(--chakra-colors-border-emphasized);
  }
}

@layer recipes {
  .emotion-7 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    text-wrap: wrap;
    max-width: 80%;
  }
}

@layer recipes {
  .emotion-8 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-1);
    position: absolute;
    inset-inline-end: 0;
    top: 0;
    bottom: 0;
    padding-inline: var(--select-trigger-padding-x);
    pointer-events: none;
  }
}

@layer recipes {
  .emotion-9 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    color: var(--chakra-colors-fg-muted);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    color: var(--chakra-colors-fg-subtle);
  }

  .emotion-9:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    color: var(--chakra-colors-fg-error);
  }

  .emotion-9 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

.emotion-10 {
  fill: none;
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.emotion-11 {
  min-width: 100%!important;
  z-index: 2!important;
  top: calc(100% + 5px)!important;
}

@layer recipes {
  .emotion-12 {
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    z-index: var(--chakra-z-index-dropdown);
    border-radius: var(--chakra-radii-l2);
    outline: 0;
    max-height: var(--chakra-sizes-96);
    overflow-y: auto;
    box-shadow: var(--chakra-shadows-md);
    padding: var(--chakra-spacing-1);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-12:is([open], [data-open], [data-state=open]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fast);
    animation-duration: var(--chakra-durations-fast);
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=top] {
    -webkit-animation-name: slide-from-bottom,fade-in;
    animation-name: slide-from-bottom,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=bottom] {
    -webkit-animation-name: slide-from-top,fade-in;
    animation-name: slide-from-top,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=left] {
    -webkit-animation-name: slide-from-right,fade-in;
    animation-name: slide-from-right,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=right] {
    -webkit-animation-name: slide-from-left,fade-in;
    animation-name: slide-from-left,fade-in;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fastest);
    animation-duration: var(--chakra-durations-fastest);
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=top] {
    -webkit-animation-name: slide-to-bottom,fade-out;
    animation-name: slide-to-bottom,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=bottom] {
    -webkit-animation-name: slide-to-top,fade-out;
    animation-name: slide-to-top,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=left] {
    -webkit-animation-name: slide-to-right,fade-out;
    animation-name: slide-to-right,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=right] {
    -webkit-animation-name: slide-to-left,fade-out;
    animation-name: slide-to-left,fade-out;
  }
}

@layer recipes {
  .emotion-13 {
    position: relative;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-2);
    cursor: var(--chakra-cursor-option);
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    text-align: start;
    border-radius: var(--chakra-radii-l1);
    padding-block: var(--chakra-spacing-1\\.5);
    padding-inline: var(--chakra-spacing-2);
  }

  .emotion-13[data-highlighted] {
    --mix-background: color-mix(in srgb, var(--chakra-colors-bg-emphasized) 60%, transparent);
    background: var(--mix-background, var(--chakra-colors-bg-emphasized));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-bg-emphasized));
  }

  .emotion-13:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    pointer-events: none;
    opacity: 0.5;
  }

  .emotion-13 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

@layer recipes {
  .emotion-14 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
  }
}

.emotion-19 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-20 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-20:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-20:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-20 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-20:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-20:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::r18:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r19:"
          role="group"
        >
          <div
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-select__root emotion-3"
            data-part="root"
            data-scope="select"
            dir="ltr"
            id="select:root"
            onBlur={[Function]}
            onFocus={[Function]}
          >
            <select
              aria-hidden={true}
              aria-labelledby="field:::r19:::label"
              disabled={false}
              id=":r19:"
              multiple={false}
              name="root"
              onFocus={[Function]}
              required={false}
              style={
                {
                  "border": "0",
                  "clip": "rect(0 0 0 0)",
                  "height": "1px",
                  "margin": "-1px",
                  "overflow": "hidden",
                  "padding": "0",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                  "wordWrap": "normal",
                }
              }
              tabIndex={-1}
            >
              <option
                value=""
              />
              <option
                disabled={false}
                value="0"
              >
                foo
              </option>
              <option
                disabled={true}
                value="1"
              >
                bar
              </option>
            </select>
            <div
              className="chakra-select__control emotion-4"
              data-part="control"
              data-scope="select"
              data-state="closed"
              dir="ltr"
              id="select:root:control"
            >
              <div
                className="chakra-select__control emotion-4"
                data-part="control"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                id="select:root:control"
              >
                <button
                  aria-controls="select:root:content"
                  aria-expanded={false}
                  aria-haspopup="listbox"
                  aria-invalid={false}
                  aria-labelledby="field:::r19:::label"
                  className="chakra-select__trigger emotion-6"
                  data-part="trigger"
                  data-placeholder-shown=""
                  data-scope="select"
                  data-state="closed"
                  dir="ltr"
                  disabled={false}
                  id="select:root:trigger"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  role="combobox"
                  type="button"
                >
                  <span
                    className="chakra-select__valueText emotion-7"
                    data-part="value-text"
                    data-scope="select"
                    dir="ltr"
                  />
                </button>
                <div
                  className="chakra-select__indicatorGroup emotion-8"
                >
                  <div
                    aria-hidden={true}
                    className="chakra-select__indicator emotion-9"
                    data-part="indicator"
                    data-scope="select"
                    data-state="closed"
                    dir="ltr"
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="m6 9 6 6 6-6"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="chakra-select__positioner emotion-11"
              data-part="positioner"
              data-scope="select"
              dir="ltr"
              id="select:root:positioner"
              style={
                {
                  "isolation": "isolate",
                  "left": "0px",
                  "maxHeight": undefined,
                  "maxWidth": undefined,
                  "minWidth": undefined,
                  "pointerEvents": "none",
                  "position": "absolute",
                  "top": "0px",
                  "transform": "translate3d(0, -100vh, 0)",
                  "width": "var(--reference-width)",
                  "zIndex": "var(--z-index)",
                }
              }
            >
              <div
                aria-labelledby="field:::r19:::label"
                className="chakra-select__content emotion-12"
                data-part="content"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                hidden={true}
                id="select:root:content"
                onKeyDown={[Function]}
                role="listbox"
                tabIndex={0}
              >
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="0"
                  dir="ltr"
                  id="select:root:option:0"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  foo
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-disabled="true"
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-disabled=""
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="1"
                  dir="ltr"
                  id="select:root:option:1"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  bar
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-19"
  >
    <button
      className="chakra-button emotion-20"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields select field single choice enumDisabled using radio widget 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.5rem;
}

@layer recipes {
  .emotion-4 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    position: relative;
    font-weight: var(--chakra-font-weights-medium);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    gap: var(--chakra-spacing-2\\.5);
  }

  .emotion-4:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    cursor: var(--chakra-cursor-disabled);
  }
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    vertical-align: top;
    color: var(--chakra-colors-white);
    border-width: 1px;
    border-color: var(--chakra-colors-border-emphasized);
    border-radius: var(--chakra-radii-full);
    cursor: var(--chakra-cursor-radio);
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline: 2px solid;
    outline-color: var(--chakra-colors-color-palette-focus-ring);
    outline-offset: 2px;
  }

  .emotion-5:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --chakra-colors-color-palette-50: var(--chakra-colors-red-50);
    --chakra-colors-color-palette-100: var(--chakra-colors-red-100);
    --chakra-colors-color-palette-200: var(--chakra-colors-red-200);
    --chakra-colors-color-palette-300: var(--chakra-colors-red-300);
    --chakra-colors-color-palette-400: var(--chakra-colors-red-400);
    --chakra-colors-color-palette-500: var(--chakra-colors-red-500);
    --chakra-colors-color-palette-600: var(--chakra-colors-red-600);
    --chakra-colors-color-palette-700: var(--chakra-colors-red-700);
    --chakra-colors-color-palette-800: var(--chakra-colors-red-800);
    --chakra-colors-color-palette-900: var(--chakra-colors-red-900);
    --chakra-colors-color-palette-950: var(--chakra-colors-red-950);
    --chakra-colors-color-palette-contrast: var(--chakra-colors-red-contrast);
    --chakra-colors-color-palette-fg: var(--chakra-colors-red-fg);
    --chakra-colors-color-palette-subtle: var(--chakra-colors-red-subtle);
    --chakra-colors-color-palette-muted: var(--chakra-colors-red-muted);
    --chakra-colors-color-palette-emphasized: var(--chakra-colors-red-emphasized);
    --chakra-colors-color-palette-solid: var(--chakra-colors-red-solid);
    --chakra-colors-color-palette-focus-ring: var(--chakra-colors-red-focus-ring);
    border-color: var(--chakra-colors-red-500);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: var(--chakra-cursor-disabled);
  }

  .emotion-5 .dot {
    height: 100%;
    width: 100%;
    border-radius: var(--chakra-radii-full);
    background: currentColor;
    --bg-currentcolor: currentColor;
    scale: 0.4;
  }

  .emotion-5:is(:checked, [data-checked], [aria-checked=true], [data-state=checked]) {
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
    border-color: var(--chakra-colors-color-palette-solid);
  }
}

.emotion-8 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-9 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-9:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-9 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-9:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-9:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::r1b:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r1c:"
          role="group"
        >
          <div
            aria-describedby="root__error root__description root__help"
            aria-labelledby="radio-group::r1d::label"
            aria-orientation="vertical"
            className="chakra-radio-group__root"
            data-orientation="vertical"
            data-part="root"
            data-scope="radio-group"
            dir="ltr"
            id="radio-group::r1d:"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            role="radiogroup"
            style={
              {
                "position": "relative",
              }
            }
          >
            <div
              className="chakra-stack emotion-3"
            >
              <label
                className="chakra-radio-group__item emotion-4"
                data-orientation="vertical"
                data-part="item"
                data-scope="radio-group"
                data-ssr=""
                data-state="unchecked"
                dir="ltr"
                htmlFor="radio-group::r1d::radio:input:0"
                id="root-0"
                onClick={[Function]}
                onPointerDown={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
                onPointerUp={[Function]}
              >
                <input
                  data-ownedby="radio-group::r1d:"
                  defaultChecked={false}
                  disabled={false}
                  id="radio-group::r1d::radio:input:0"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="radio"
                  value="0"
                />
                <span
                  aria-hidden={true}
                  className="emotion-5"
                  data-orientation="vertical"
                  data-part="item-control"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r1d::radio:control:0"
                />
                <span
                  className="chakra-radio-group__itemText"
                  data-orientation="vertical"
                  data-part="item-text"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r1d::radio:label:0"
                >
                  foo
                </span>
              </label>
              <label
                className="chakra-radio-group__item emotion-4"
                data-disabled=""
                data-orientation="vertical"
                data-part="item"
                data-scope="radio-group"
                data-ssr=""
                data-state="unchecked"
                dir="ltr"
                htmlFor="radio-group::r1d::radio:input:1"
                id="root-1"
                onClick={[Function]}
                onPointerDown={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
                onPointerUp={[Function]}
              >
                <input
                  data-ownedby="radio-group::r1d:"
                  defaultChecked={false}
                  disabled={true}
                  id="radio-group::r1d::radio:input:1"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="radio"
                  value="1"
                />
                <span
                  aria-hidden={true}
                  className="emotion-5"
                  data-disabled=""
                  data-orientation="vertical"
                  data-part="item-control"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r1d::radio:control:1"
                />
                <span
                  className="chakra-radio-group__itemText"
                  data-disabled=""
                  data-orientation="vertical"
                  data-part="item-text"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r1d::radio:label:1"
                >
                  bar
                </span>
              </label>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-8"
  >
    <button
      className="chakra-button emotion-9"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields select field single choice form disabled using radio widget 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.5rem;
}

@layer recipes {
  .emotion-4 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    position: relative;
    font-weight: var(--chakra-font-weights-medium);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    gap: var(--chakra-spacing-2\\.5);
  }

  .emotion-4:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    cursor: var(--chakra-cursor-disabled);
  }
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    vertical-align: top;
    color: var(--chakra-colors-white);
    border-width: 1px;
    border-color: var(--chakra-colors-border-emphasized);
    border-radius: var(--chakra-radii-full);
    cursor: var(--chakra-cursor-radio);
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline: 2px solid;
    outline-color: var(--chakra-colors-color-palette-focus-ring);
    outline-offset: 2px;
  }

  .emotion-5:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --chakra-colors-color-palette-50: var(--chakra-colors-red-50);
    --chakra-colors-color-palette-100: var(--chakra-colors-red-100);
    --chakra-colors-color-palette-200: var(--chakra-colors-red-200);
    --chakra-colors-color-palette-300: var(--chakra-colors-red-300);
    --chakra-colors-color-palette-400: var(--chakra-colors-red-400);
    --chakra-colors-color-palette-500: var(--chakra-colors-red-500);
    --chakra-colors-color-palette-600: var(--chakra-colors-red-600);
    --chakra-colors-color-palette-700: var(--chakra-colors-red-700);
    --chakra-colors-color-palette-800: var(--chakra-colors-red-800);
    --chakra-colors-color-palette-900: var(--chakra-colors-red-900);
    --chakra-colors-color-palette-950: var(--chakra-colors-red-950);
    --chakra-colors-color-palette-contrast: var(--chakra-colors-red-contrast);
    --chakra-colors-color-palette-fg: var(--chakra-colors-red-fg);
    --chakra-colors-color-palette-subtle: var(--chakra-colors-red-subtle);
    --chakra-colors-color-palette-muted: var(--chakra-colors-red-muted);
    --chakra-colors-color-palette-emphasized: var(--chakra-colors-red-emphasized);
    --chakra-colors-color-palette-solid: var(--chakra-colors-red-solid);
    --chakra-colors-color-palette-focus-ring: var(--chakra-colors-red-focus-ring);
    border-color: var(--chakra-colors-red-500);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: var(--chakra-cursor-disabled);
  }

  .emotion-5 .dot {
    height: 100%;
    width: 100%;
    border-radius: var(--chakra-radii-full);
    background: currentColor;
    --bg-currentcolor: currentColor;
    scale: 0.4;
  }

  .emotion-5:is(:checked, [data-checked], [aria-checked=true], [data-state=checked]) {
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
    border-color: var(--chakra-colors-color-palette-solid);
  }
}

.emotion-8 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-9 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-9:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-9 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-9:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-9:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::r1h:::legend"
      className="fieldset__root emotion-0"
      data-disabled=""
      data-part="root"
      data-scope="fieldset"
      disabled={true}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-disabled=""
          data-part="root"
          data-scope="field"
          id="field:::r1i:"
          role="group"
        >
          <div
            aria-describedby="root__error root__description root__help"
            aria-labelledby="radio-group::r1j::label"
            aria-orientation="vertical"
            className="chakra-radio-group__root"
            data-orientation="vertical"
            data-part="root"
            data-scope="radio-group"
            dir="ltr"
            id="radio-group::r1j:"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            role="radiogroup"
            style={
              {
                "position": "relative",
              }
            }
          >
            <div
              className="chakra-stack emotion-3"
            >
              <label
                className="chakra-radio-group__item emotion-4"
                data-disabled=""
                data-orientation="vertical"
                data-part="item"
                data-scope="radio-group"
                data-ssr=""
                data-state="unchecked"
                dir="ltr"
                htmlFor="radio-group::r1j::radio:input:0"
                id="root-0"
                onClick={[Function]}
                onPointerDown={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
                onPointerUp={[Function]}
              >
                <input
                  data-ownedby="radio-group::r1j:"
                  defaultChecked={false}
                  disabled={true}
                  id="radio-group::r1j::radio:input:0"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="radio"
                  value="0"
                />
                <span
                  aria-hidden={true}
                  className="emotion-5"
                  data-disabled=""
                  data-orientation="vertical"
                  data-part="item-control"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r1j::radio:control:0"
                />
                <span
                  className="chakra-radio-group__itemText"
                  data-disabled=""
                  data-orientation="vertical"
                  data-part="item-text"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r1j::radio:label:0"
                >
                  foo
                </span>
              </label>
              <label
                className="chakra-radio-group__item emotion-4"
                data-disabled=""
                data-orientation="vertical"
                data-part="item"
                data-scope="radio-group"
                data-ssr=""
                data-state="unchecked"
                dir="ltr"
                htmlFor="radio-group::r1j::radio:input:1"
                id="root-1"
                onClick={[Function]}
                onPointerDown={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
                onPointerUp={[Function]}
              >
                <input
                  data-ownedby="radio-group::r1j:"
                  defaultChecked={false}
                  disabled={true}
                  id="radio-group::r1j::radio:input:1"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="radio"
                  value="1"
                />
                <span
                  aria-hidden={true}
                  className="emotion-5"
                  data-disabled=""
                  data-orientation="vertical"
                  data-part="item-control"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r1j::radio:control:1"
                />
                <span
                  className="chakra-radio-group__itemText"
                  data-disabled=""
                  data-orientation="vertical"
                  data-part="item-text"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r1j::radio:label:1"
                >
                  bar
                </span>
              </label>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-8"
  >
    <button
      className="chakra-button emotion-9"
      disabled={true}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields select field single choice formData 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
  position: relative;
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: var(--chakra-spacing-1\\.5);
    width: var(--chakra-sizes-full);
    --select-trigger-height: var(--chakra-sizes-10);
    --select-trigger-padding-x: var(--chakra-spacing-3);
  }
}

@layer recipes {
  .emotion-4 {
    position: relative;
  }
}

@layer recipes {
  .emotion-6 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    width: var(--chakra-sizes-full);
    min-height: var(--select-trigger-height);
    --input-height: var(--select-trigger-height);
    padding-inline: var(--select-trigger-padding-x);
    border-radius: var(--chakra-radii-l2);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    text-align: start;
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
  }

  .emotion-6:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }

  .emotion-6:is(:placeholder-shown, [data-placeholder-shown]) {
    --mix-color: color-mix(in srgb, var(--chakra-colors-fg-muted) 80%, transparent);
    color: var(--mix-color, var(--chakra-colors-fg-muted));
  }

  .emotion-6:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-6:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    border-color: var(--chakra-colors-border-error);
  }

  .emotion-6:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    border-color: var(--chakra-colors-border-emphasized);
  }
}

@layer recipes {
  .emotion-7 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    text-wrap: wrap;
    max-width: 80%;
  }
}

@layer recipes {
  .emotion-8 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-1);
    position: absolute;
    inset-inline-end: 0;
    top: 0;
    bottom: 0;
    padding-inline: var(--select-trigger-padding-x);
    pointer-events: none;
  }
}

@layer recipes {
  .emotion-9 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    color: var(--chakra-colors-fg-muted);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    color: var(--chakra-colors-fg-subtle);
  }

  .emotion-9:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    color: var(--chakra-colors-fg-error);
  }

  .emotion-9 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

.emotion-10 {
  fill: none;
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.emotion-11 {
  min-width: 100%!important;
  z-index: 2!important;
  top: calc(100% + 5px)!important;
}

@layer recipes {
  .emotion-12 {
    background: var(--chakra-colors-bg-panel);
    --bg-currentcolor: var(--chakra-colors-bg-panel);
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    z-index: var(--chakra-z-index-dropdown);
    border-radius: var(--chakra-radii-l2);
    outline: 0;
    max-height: var(--chakra-sizes-96);
    overflow-y: auto;
    box-shadow: var(--chakra-shadows-md);
    padding: var(--chakra-spacing-1);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
  }

  .emotion-12:is([open], [data-open], [data-state=open]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fast);
    animation-duration: var(--chakra-durations-fast);
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=top] {
    -webkit-animation-name: slide-from-bottom,fade-in;
    animation-name: slide-from-bottom,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=bottom] {
    -webkit-animation-name: slide-from-top,fade-in;
    animation-name: slide-from-top,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=left] {
    -webkit-animation-name: slide-from-right,fade-in;
    animation-name: slide-from-right,fade-in;
  }

  .emotion-12:is([open], [data-open], [data-state=open])[data-placement^=right] {
    -webkit-animation-name: slide-from-left,fade-in;
    animation-name: slide-from-left,fade-in;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed]) {
    transform-origin: var(--transform-origin);
    -webkit-animation-duration: var(--chakra-durations-fastest);
    animation-duration: var(--chakra-durations-fastest);
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=top] {
    -webkit-animation-name: slide-to-bottom,fade-out;
    animation-name: slide-to-bottom,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=bottom] {
    -webkit-animation-name: slide-to-top,fade-out;
    animation-name: slide-to-top,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=left] {
    -webkit-animation-name: slide-to-right,fade-out;
    animation-name: slide-to-right,fade-out;
  }

  .emotion-12:is([closed], [data-closed], [data-state=closed])[data-placement^=right] {
    -webkit-animation-name: slide-to-left,fade-out;
    animation-name: slide-to-left,fade-out;
  }
}

@layer recipes {
  .emotion-13 {
    position: relative;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: var(--chakra-spacing-2);
    cursor: var(--chakra-cursor-option);
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    text-align: start;
    border-radius: var(--chakra-radii-l1);
    padding-block: var(--chakra-spacing-1\\.5);
    padding-inline: var(--chakra-spacing-2);
  }

  .emotion-13[data-highlighted] {
    --mix-background: color-mix(in srgb, var(--chakra-colors-bg-emphasized) 60%, transparent);
    background: var(--mix-background, var(--chakra-colors-bg-emphasized));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-bg-emphasized));
  }

  .emotion-13:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    pointer-events: none;
    opacity: 0.5;
  }

  .emotion-13 :where(svg) {
    width: var(--chakra-sizes-4);
    height: var(--chakra-sizes-4);
  }
}

@layer recipes {
  .emotion-14 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
  }
}

.emotion-19 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-20 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-20:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-20:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-20 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-20:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-20:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::r1t:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r1u:"
          role="group"
        >
          <div
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-select__root emotion-3"
            data-part="root"
            data-scope="select"
            dir="ltr"
            id="select:root"
            onBlur={[Function]}
            onFocus={[Function]}
          >
            <select
              aria-hidden={true}
              aria-labelledby="field:::r1u:::label"
              defaultValue="1"
              disabled={false}
              id=":r1u:"
              multiple={false}
              name="root"
              onFocus={[Function]}
              required={false}
              style={
                {
                  "border": "0",
                  "clip": "rect(0 0 0 0)",
                  "height": "1px",
                  "margin": "-1px",
                  "overflow": "hidden",
                  "padding": "0",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                  "wordWrap": "normal",
                }
              }
              tabIndex={-1}
            >
              <option
                disabled={false}
                value="0"
              >
                foo
              </option>
              <option
                disabled={false}
                value="1"
              >
                bar
              </option>
            </select>
            <div
              className="chakra-select__control emotion-4"
              data-part="control"
              data-scope="select"
              data-state="closed"
              dir="ltr"
              id="select:root:control"
            >
              <div
                className="chakra-select__control emotion-4"
                data-part="control"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                id="select:root:control"
              >
                <button
                  aria-controls="select:root:content"
                  aria-expanded={false}
                  aria-haspopup="listbox"
                  aria-invalid={false}
                  aria-labelledby="field:::r1u:::label"
                  className="chakra-select__trigger emotion-6"
                  data-part="trigger"
                  data-scope="select"
                  data-state="closed"
                  dir="ltr"
                  disabled={false}
                  id="select:root:trigger"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  role="combobox"
                  type="button"
                >
                  <span
                    className="chakra-select__valueText emotion-7"
                    data-part="value-text"
                    data-scope="select"
                    dir="ltr"
                  >
                    bar
                  </span>
                </button>
                <div
                  className="chakra-select__indicatorGroup emotion-8"
                >
                  <div
                    aria-hidden={true}
                    className="chakra-select__indicator emotion-9"
                    data-part="indicator"
                    data-scope="select"
                    data-state="closed"
                    dir="ltr"
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="m6 9 6 6 6-6"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="chakra-select__positioner emotion-11"
              data-part="positioner"
              data-scope="select"
              dir="ltr"
              id="select:root:positioner"
              style={
                {
                  "isolation": "isolate",
                  "left": "0px",
                  "maxHeight": undefined,
                  "maxWidth": undefined,
                  "minWidth": undefined,
                  "pointerEvents": "none",
                  "position": "absolute",
                  "top": "0px",
                  "transform": "translate3d(0, -100vh, 0)",
                  "width": "var(--reference-width)",
                  "zIndex": "var(--z-index)",
                }
              }
            >
              <div
                aria-labelledby="field:::r1u:::label"
                className="chakra-select__content emotion-12"
                data-part="content"
                data-scope="select"
                data-state="closed"
                dir="ltr"
                hidden={true}
                id="select:root:content"
                onKeyDown={[Function]}
                role="listbox"
                tabIndex={0}
              >
                <div
                  aria-selected={false}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="unchecked"
                  data-value="0"
                  dir="ltr"
                  id="select:root:option:0"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  foo
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="unchecked"
                    hidden={true}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  aria-selected={true}
                  className="chakra-select__item emotion-13"
                  data-part="item"
                  data-scope="select"
                  data-state="checked"
                  data-value="1"
                  dir="ltr"
                  id="select:root:option:1"
                  onClick={[Function]}
                  onPointerLeave={[Function]}
                  onPointerMove={[Function]}
                  role="option"
                >
                  bar
                  <div
                    aria-hidden={true}
                    className="chakra-select__itemIndicator emotion-14"
                    data-part="item-indicator"
                    data-scope="select"
                    data-state="checked"
                    hidden={false}
                  >
                    <svg
                      className="emotion-10"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20 6 9 17l-5-5"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-19"
  >
    <button
      className="chakra-button emotion-20"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields select field single choice uiSchema disabled using radio widget 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.5rem;
}

@layer recipes {
  .emotion-4 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    position: relative;
    font-weight: var(--chakra-font-weights-medium);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    gap: var(--chakra-spacing-2\\.5);
  }

  .emotion-4:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    cursor: var(--chakra-cursor-disabled);
  }
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    vertical-align: top;
    color: var(--chakra-colors-white);
    border-width: 1px;
    border-color: var(--chakra-colors-border-emphasized);
    border-radius: var(--chakra-radii-full);
    cursor: var(--chakra-cursor-radio);
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline: 2px solid;
    outline-color: var(--chakra-colors-color-palette-focus-ring);
    outline-offset: 2px;
  }

  .emotion-5:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --chakra-colors-color-palette-50: var(--chakra-colors-red-50);
    --chakra-colors-color-palette-100: var(--chakra-colors-red-100);
    --chakra-colors-color-palette-200: var(--chakra-colors-red-200);
    --chakra-colors-color-palette-300: var(--chakra-colors-red-300);
    --chakra-colors-color-palette-400: var(--chakra-colors-red-400);
    --chakra-colors-color-palette-500: var(--chakra-colors-red-500);
    --chakra-colors-color-palette-600: var(--chakra-colors-red-600);
    --chakra-colors-color-palette-700: var(--chakra-colors-red-700);
    --chakra-colors-color-palette-800: var(--chakra-colors-red-800);
    --chakra-colors-color-palette-900: var(--chakra-colors-red-900);
    --chakra-colors-color-palette-950: var(--chakra-colors-red-950);
    --chakra-colors-color-palette-contrast: var(--chakra-colors-red-contrast);
    --chakra-colors-color-palette-fg: var(--chakra-colors-red-fg);
    --chakra-colors-color-palette-subtle: var(--chakra-colors-red-subtle);
    --chakra-colors-color-palette-muted: var(--chakra-colors-red-muted);
    --chakra-colors-color-palette-emphasized: var(--chakra-colors-red-emphasized);
    --chakra-colors-color-palette-solid: var(--chakra-colors-red-solid);
    --chakra-colors-color-palette-focus-ring: var(--chakra-colors-red-focus-ring);
    border-color: var(--chakra-colors-red-500);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: var(--chakra-cursor-disabled);
  }

  .emotion-5 .dot {
    height: 100%;
    width: 100%;
    border-radius: var(--chakra-radii-full);
    background: currentColor;
    --bg-currentcolor: currentColor;
    scale: 0.4;
  }

  .emotion-5:is(:checked, [data-checked], [aria-checked=true], [data-state=checked]) {
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
    border-color: var(--chakra-colors-color-palette-solid);
  }
}

.emotion-8 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-9 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-9:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-9 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-9:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-9:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::r1e:::legend"
      className="fieldset__root emotion-0"
      data-disabled=""
      data-part="root"
      data-scope="fieldset"
      disabled={true}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-disabled=""
          data-part="root"
          data-scope="field"
          id="field:::r1f:"
          role="group"
        >
          <div
            aria-describedby="root__error root__description root__help"
            aria-labelledby="radio-group::r1g::label"
            aria-orientation="vertical"
            className="chakra-radio-group__root"
            data-orientation="vertical"
            data-part="root"
            data-scope="radio-group"
            dir="ltr"
            id="radio-group::r1g:"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            role="radiogroup"
            style={
              {
                "position": "relative",
              }
            }
          >
            <div
              className="chakra-stack emotion-3"
            >
              <label
                className="chakra-radio-group__item emotion-4"
                data-disabled=""
                data-orientation="vertical"
                data-part="item"
                data-scope="radio-group"
                data-ssr=""
                data-state="unchecked"
                dir="ltr"
                htmlFor="radio-group::r1g::radio:input:0"
                id="root-0"
                onClick={[Function]}
                onPointerDown={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
                onPointerUp={[Function]}
              >
                <input
                  data-ownedby="radio-group::r1g:"
                  defaultChecked={false}
                  disabled={true}
                  id="radio-group::r1g::radio:input:0"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="radio"
                  value="0"
                />
                <span
                  aria-hidden={true}
                  className="emotion-5"
                  data-disabled=""
                  data-orientation="vertical"
                  data-part="item-control"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r1g::radio:control:0"
                />
                <span
                  className="chakra-radio-group__itemText"
                  data-disabled=""
                  data-orientation="vertical"
                  data-part="item-text"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r1g::radio:label:0"
                >
                  foo
                </span>
              </label>
              <label
                className="chakra-radio-group__item emotion-4"
                data-disabled=""
                data-orientation="vertical"
                data-part="item"
                data-scope="radio-group"
                data-ssr=""
                data-state="unchecked"
                dir="ltr"
                htmlFor="radio-group::r1g::radio:input:1"
                id="root-1"
                onClick={[Function]}
                onPointerDown={[Function]}
                onPointerLeave={[Function]}
                onPointerMove={[Function]}
                onPointerUp={[Function]}
              >
                <input
                  data-ownedby="radio-group::r1g:"
                  defaultChecked={false}
                  disabled={true}
                  id="radio-group::r1g::radio:input:1"
                  name="root"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  style={
                    {
                      "border": "0",
                      "clip": "rect(0 0 0 0)",
                      "height": "1px",
                      "margin": "-1px",
                      "overflow": "hidden",
                      "padding": "0",
                      "position": "absolute",
                      "whiteSpace": "nowrap",
                      "width": "1px",
                      "wordWrap": "normal",
                    }
                  }
                  type="radio"
                  value="1"
                />
                <span
                  aria-hidden={true}
                  className="emotion-5"
                  data-disabled=""
                  data-orientation="vertical"
                  data-part="item-control"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r1g::radio:control:1"
                />
                <span
                  className="chakra-radio-group__itemText"
                  data-disabled=""
                  data-orientation="vertical"
                  data-part="item-text"
                  data-scope="radio-group"
                  data-ssr=""
                  data-state="unchecked"
                  dir="ltr"
                  id="radio-group::r1g::radio:label:1"
                >
                  bar
                </span>
              </label>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-8"
  >
    <button
      className="chakra-button emotion-9"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields slider field 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

.emotion-3 {
  width: 200px;
}

@layer recipes {
  .emotion-3 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: var(--chakra-spacing-1);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    position: relative;
    isolation: isolate;
    touch-action: none;
    --slider-thumb-size: var(--chakra-sizes-5);
    --slider-track-size: var(--chakra-sizes-2);
    --slider-marker-center: 8px;
    --slider-marker-size: var(--chakra-sizes-1);
    --slider-marker-inset: 4px;
  }
}

@layer recipes {
  .emotion-4 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    position: relative;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    width: 100%;
    min-height: var(--slider-thumb-size);
  }

  .emotion-4[data-has-mark-label],
  .emotion-4:has(.chakra-slider__marker-label) {
    margin-bottom: var(--chakra-spacing-4);
  }
}

@layer recipes {
  .emotion-5 {
    overflow: hidden;
    border-radius: var(--chakra-radii-full);
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    box-shadow: var(--chakra-shadows-inset);
    --mix-background: color-mix(in srgb, var(--chakra-colors-bg-emphasized) 72%, transparent);
    background: var(--mix-background, var(--chakra-colors-bg-emphasized));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-bg-emphasized));
    height: var(--slider-track-size);
  }
}

@layer recipes {
  .emotion-6 {
    width: inherit;
    height: inherit;
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
  }

  .emotion-6:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    background: var(--chakra-colors-border-emphasized)!important;
    --bg-currentcolor: var(--chakra-colors-border-emphasized)!important;
  }
}

@layer recipes {
  .emotion-7 {
    width: var(--slider-thumb-size);
    height: var(--slider-thumb-size);
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    outline: 0;
    z-index: 2;
    border-radius: var(--chakra-radii-full);
    border-width: 2px;
    border-color: var(--chakra-colors-color-palette-solid);
    background: var(--chakra-colors-bg);
    --bg-currentcolor: var(--chakra-colors-bg);
    top: 50%;
    -webkit-translate: 0 -50%;
    -moz-translate: 0 -50%;
    -ms-translate: 0 -50%;
    translate: 0 -50%;
  }

  .emotion-7:is(:focus-visible, [data-focus-visible]) {
    --ring-offset-shadow: var(--ring-inset) 0 0 0 var(--ring-offset-width) var(--ring-offset-color);
    --ring-shadow: var(--ring-inset) 0 0 0 calc(var(--ring-width) + var(--ring-offset-width)) var(--ring-color);
    --ring-width: 2px;
    box-shadow: var(--ring-offset-shadow),var(--ring-shadow),var(--shadow, 0 0 #0000);
    --ring-color: var(--chakra-colors-color-palette-focus-ring);
    --ring-offset-width: 2px;
    --ring-offset-color: var(--chakra-colors-bg);
  }

  .emotion-7:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    background: var(--chakra-colors-border-emphasized);
    --bg-currentcolor: var(--chakra-colors-border-emphasized);
    border-color: var(--chakra-colors-border-emphasized);
  }
}

.emotion-8 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-9 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-9:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-9 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-9:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-9:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-integer"
  >
    <fieldset
      aria-labelledby="fieldset:::r2o:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r2p:"
          role="group"
        >
          <div
            aria-describedby="root__error root__description root__help"
            className="chakra-slider__root emotion-3"
            data-orientation="horizontal"
            data-part="root"
            data-scope="slider"
            dir="ltr"
            id="slider:root"
            onBlur={[Function]}
            onFocus={[Function]}
            style={
              {
                "--slider-range-end": "43.103448275862064%",
                "--slider-range-start": "0%",
                "--slider-thumb-height": undefined,
                "--slider-thumb-offset-0": "56.896551724137936%",
                "--slider-thumb-transform": "translateX(-50%)",
                "--slider-thumb-width": undefined,
              }
            }
          >
            <div
              className="chakra-slider__control emotion-4"
              data-orientation="horizontal"
              data-part="control"
              data-scope="slider"
              dir="ltr"
              id="slider:root:control"
              onPointerDown={[Function]}
              style={
                {
                  "WebkitUserSelect": "none",
                  "position": "relative",
                  "touchAction": "none",
                  "userSelect": "none",
                }
              }
            >
              <div
                className="chakra-slider__track emotion-5"
                data-orientation="horizontal"
                data-part="track"
                data-scope="slider"
                dir="ltr"
                id="slider:root:track"
                style={
                  {
                    "position": "relative",
                  }
                }
              >
                <div
                  className="chakra-slider__range emotion-6"
                  data-orientation="horizontal"
                  data-part="range"
                  data-scope="slider"
                  dir="ltr"
                  id="slider:root:range"
                  style={
                    {
                      "left": "var(--slider-range-start)",
                      "position": "absolute",
                      "right": "var(--slider-range-end)",
                    }
                  }
                />
              </div>
              <div
                aria-labelledby="slider:root:label"
                aria-orientation="horizontal"
                aria-valuemax={100}
                aria-valuemin={42}
                aria-valuenow={75}
                className="chakra-slider__thumb emotion-7"
                data-index={0}
                data-orientation="horizontal"
                data-part="thumb"
                data-scope="slider"
                dir="ltr"
                draggable={false}
                id="slider:root:thumb:0"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                role="slider"
                style={
                  {
                    "insetInlineStart": "var(--slider-thumb-offset-0)",
                    "position": "absolute",
                    "transform": "var(--slider-thumb-transform)",
                    "visibility": "visible",
                  }
                }
                tabIndex={0}
              >
                <input
                  defaultValue={75}
                  hidden={true}
                  id="slider:root:input:0"
                  name="root"
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-8"
  >
    <button
      className="chakra-button emotion-9"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields string field format data-url 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::r6:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div>
          <div
            className="chakra-field__root emotion-2"
            data-part="root"
            data-scope="field"
            id="field:::r7:"
            role="group"
          >
            <input
              aria-describedby="root__error root__description root__help"
              autoFocus={false}
              className="chakra-input emotion-3"
              data-part="input"
              data-scope="field"
              disabled={false}
              id="root"
              name="root"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder=""
              readOnly={false}
              required={false}
              type="file"
              value=""
            />
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields string field format email 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::r2:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r3:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="email"
            value=""
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields string field format uri 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::r4:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r5:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="url"
            value=""
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields string field regular 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::r0:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r1:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="text"
            value=""
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields string field with placeholder 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::r8:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r9:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder="placeholder"
            readOnly={false}
            required={false}
            type="text"
            value=""
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields textarea field 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: 0;
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    padding-block: var(--chakra-spacing-2);
    scroll-padding-bottom: var(--chakra-spacing-2);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::rt:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::ru:"
          role="group"
        >
          <textarea
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-textarea emotion-3"
            data-part="textarea"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            style={
              {
                "resize": undefined,
              }
            }
            value=""
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields title field 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-top: var(--chakra-spacing-1);
  margin-bottom: var(--chakra-spacing-4);
}

@layer recipes {
  .emotion-3 {
    font-family: var(--chakra-fonts-heading);
    font-weight: var(--chakra-font-weights-semibold);
    font-size: var(--chakra-font-sizes-xl);
    line-height: 1.875rem;
  }
}

@layer recipes {
  .emotion-4 {
    display: block;
    border-color: var(--chakra-colors-border);
    --separator-thickness: 1px;
    border-style: solid;
    border-top-width: var(--separator-thickness);
  }
}

.emotion-5 {
  display: grid;
  gap: var(--chakra-spacing-4);
  margin-bottom: var(--chakra-spacing-4);
}

.emotion-8 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-8 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-9 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    text-align: start;
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    font-weight: var(--chakra-font-weights-medium);
    gap: var(--chakra-spacing-1);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }
}

@layer recipes {
  .emotion-10 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-10:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-10:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-10:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-11 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-12 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-12:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-12:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-12 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-12:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-12:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-object"
  >
    <fieldset
      aria-labelledby="fieldset:::r38:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="emotion-2"
          id="root__title"
        >
          <h5
            className="chakra-heading emotion-3"
          >
            Titre 1
          </h5>
          <span
            aria-orientation="horizontal"
            className="chakra-separator emotion-4"
            role="separator"
          />
        </div>
        <div
          className="emotion-5"
        >
          <div>
            <div
              className="rjsf-field rjsf-field-string"
            >
              <fieldset
                aria-labelledby="fieldset:::r39:::legend"
                className="fieldset__root emotion-0"
                data-part="root"
                data-scope="fieldset"
                disabled={false}
              >
                <div
                  className="fieldset__content emotion-1"
                >
                  <div
                    className="chakra-field__root emotion-8"
                    data-part="root"
                    data-scope="field"
                    id="field:::r3a:"
                    role="group"
                  >
                    <label
                      className="chakra-field__label emotion-9"
                      data-part="label"
                      data-scope="field"
                      htmlFor=":r3a:"
                      id="field:::r3a:::label"
                    >
                      Titre 2
                    </label>
                    <input
                      aria-describedby="root_title__error root_title__description root_title__help"
                      autoFocus={false}
                      className="chakra-input emotion-10"
                      data-part="input"
                      data-scope="field"
                      disabled={false}
                      id="root_title"
                      name="root_title"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder=""
                      readOnly={false}
                      required={false}
                      type="text"
                      value=""
                    />
                  </div>
                </div>
              </fieldset>
            </div>
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-11"
  >
    <button
      className="chakra-button emotion-12"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields unsupported field 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-3 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-3:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-3:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-undefined"
  >
    <fieldset
      aria-labelledby="fieldset:::rf:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="unsupported-field"
        >
          <p>
            <span>
              Unsupported field schema for field 
              <code>
                root
              </code>
              : 
              <em>
                Unknown field type undefined
              </em>
              .
            </span>
          </p>
          <pre>
            {}
          </pre>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-2"
  >
    <button
      className="chakra-button emotion-3"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields up/down field 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    position: relative;
    z-index: 0;
    isolation: isolate;
  }
}

@layer recipes {
  .emotion-4 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    position: absolute;
    top: 0;
    inset-inline-end: 0px;
    margin: 1px;
    width: var(--stepper-width);
    height: calc(100% - 2px);
    z-index: 1;
    border-inline-start-width: 1px;
    font-size: var(--chakra-font-sizes-sm);
    --stepper-width: var(--chakra-sizes-6);
  }

  .emotion-4>:not(style, [hidden])~:not(style, [hidden]) {
    border-top-width: 1px;
    border-bottom-width: 0px;
  }
}

@layer recipes {
  .emotion-5 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    cursor: var(--chakra-cursor-button);
    line-height: 1;
    color: var(--chakra-colors-fg-muted);
    --stepper-base-radius: var(--chakra-radii-l1);
    --stepper-radius: calc(var(--stepper-base-radius) + 1px);
    border-start-end-radius: var(--stepper-radius);
  }

  .emotion-5 :where(svg) {
    width: 1em;
    height: 1em;
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }

  .emotion-5:is(:active, [data-active]):not(:disabled, [data-disabled], [data-state=open]) {
    background: var(--chakra-colors-bg-emphasized);
    --bg-currentcolor: var(--chakra-colors-bg-emphasized);
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      background: var(--chakra-colors-bg-muted);
      --bg-currentcolor: var(--chakra-colors-bg-muted);
    }
  }
}

.emotion-6 {
  fill: none;
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
}

@layer recipes {
  .emotion-7 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    cursor: var(--chakra-cursor-button);
    line-height: 1;
    color: var(--chakra-colors-fg-muted);
    --stepper-base-radius: var(--chakra-radii-l1);
    --stepper-radius: calc(var(--stepper-base-radius) + 1px);
    border-end-end-radius: var(--stepper-radius);
  }

  .emotion-7 :where(svg) {
    width: 1em;
    height: 1em;
  }

  .emotion-7:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
  }

  .emotion-7:is(:active, [data-active]):not(:disabled, [data-disabled], [data-state=open]) {
    background: var(--chakra-colors-bg-emphasized);
    --bg-currentcolor: var(--chakra-colors-bg-emphasized);
  }

  @media (hover: hover) {
    .emotion-7:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      background: var(--chakra-colors-bg-muted);
      --bg-currentcolor: var(--chakra-colors-bg-muted);
    }
  }
}

@layer recipes {
  .emotion-9 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    vertical-align: top;
    -webkit-padding-end: calc(var(--stepper-width) + 0.5rem);
    padding-inline-end: calc(var(--stepper-width) + 0.5rem);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-9:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-9:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-9:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-10 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-11 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-11:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-11:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-11 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-11:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-11:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-number"
  >
    <fieldset
      aria-labelledby="fieldset:::rq:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::rr:"
          role="group"
        >
          <div
            aria-describedby="root__error root__description root__help"
            className="chakra-number-input__root emotion-3"
            data-part="root"
            data-scope="number-input"
            dir="ltr"
            id="number-input:root"
            onBlur={[Function]}
            onFocus={[Function]}
          >
            <div
              aria-disabled={false}
              className="chakra-number-input__control emotion-4"
              data-part="control"
              data-scope="number-input"
              dir="ltr"
              role="group"
            >
              <button
                aria-controls=":rr:"
                aria-label="increment value"
                className="chakra-number-input__incrementTrigger emotion-5"
                data-part="increment-trigger"
                data-scope="number-input"
                dir="ltr"
                disabled={false}
                id="number-input:root:inc"
                onPointerDown={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={-1}
                type="button"
              >
                <svg
                  className="emotion-6"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="m18 15-6-6-6 6"
                  />
                </svg>
              </button>
              <button
                aria-controls=":rr:"
                aria-label="decrease value"
                className="chakra-number-input__decrementTrigger emotion-7"
                data-part="decrement-trigger"
                data-scope="number-input"
                dir="ltr"
                disabled={false}
                id="number-input:root:dec"
                onPointerDown={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={-1}
                type="button"
              >
                <svg
                  className="emotion-6"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="m6 9 6 6 6-6"
                  />
                </svg>
              </button>
            </div>
            <input
              aria-roledescription="numberfield"
              aria-valuemax={9007199254740991}
              aria-valuemin={-9007199254740991}
              autoComplete="off"
              autoCorrect="off"
              className="chakra-number-input__input emotion-9"
              data-part="input"
              data-scope="number-input"
              defaultValue=""
              dir="ltr"
              disabled={false}
              id=":rr:"
              inputMode="decimal"
              name="root"
              onBeforeInput={[Function]}
              onBlur={[Function]}
              onFocus={[Function]}
              onInput={[Function]}
              onKeyDown={[Function]}
              pattern="-?[0-9]*(.[0-9]+)?"
              readOnly={false}
              required={false}
              role="spinbutton"
              spellCheck="false"
              type="text"
            />
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-10"
  >
    <button
      className="chakra-button emotion-11"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`single fields using custom tagName 1`] = `
@layer recipes {
  .emotion-0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
  }

  .emotion-0>:not(style, [hidden])~:not(style, [hidden]) {
    --space-y-reverse: 0;
    margin-top: calc(var(--chakra-spacing-4) * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(var(--chakra-spacing-4) * var(--space-y-reverse));
  }
}

@layer recipes {
  .emotion-1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: var(--chakra-sizes-full);
    gap: var(--chakra-spacing-4);
  }
}

.emotion-2 {
  margin-bottom: var(--chakra-spacing-1);
}

@layer recipes {
  .emotion-2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    position: relative;
    gap: var(--chakra-spacing-1\\.5);
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
  }
}

@layer recipes {
  .emotion-3 {
    width: 100%;
    min-width: var(--input-height);
    outline: 0;
    position: relative;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    text-align: start;
    border-radius: var(--chakra-radii-l2);
    height: var(--input-height);
    --focus-color: var(--chakra-colors-color-palette-focus-ring);
    --error-color: var(--chakra-colors-border-error);
    font-size: var(--chakra-font-sizes-sm);
    line-height: 1.25rem;
    padding-inline: var(--chakra-spacing-3);
    --input-height: var(--chakra-sizes-10);
    background: var(--chakra-colors-transparent);
    --bg-currentcolor: var(--chakra-colors-transparent);
    border-width: 1px;
    border-color: var(--chakra-colors-border);
    --focus-ring-color: var(--focus-color);
  }

  .emotion-3:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-3:is([data-invalid], [aria-invalid=true], [data-state=invalid]) {
    --focus-ring-color: var(--error-color);
    border-color: var(--error-color);
  }

  .emotion-3:is(:focus-visible, [data-focus-visible]) {
    outline-offset: 0px;
    outline-width: var(--focus-ring-width, 1px);
    outline-color: var(--focus-ring-color);
    outline-style: var(--focus-ring-style, solid);
    border-color: var(--focus-ring-color);
  }
}

.emotion-4 {
  margin-top: var(--chakra-spacing-3);
}

@layer recipes {
  .emotion-5 {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    border-radius: var(--chakra-radii-l2);
    white-space: nowrap;
    vertical-align: middle;
    border-width: 1px;
    border-color: var(--chakra-colors-transparent);
    cursor: var(--chakra-cursor-button);
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    outline: 0;
    line-height: 1.25rem;
    isolation: isolate;
    font-weight: var(--chakra-font-weights-medium);
    transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,translate,transform;
    transition-duration: var(--chakra-durations-moderate);
    --focus-ring-color: var(--chakra-colors-color-palette-focus-ring);
    height: var(--chakra-sizes-10);
    min-width: var(--chakra-sizes-10);
    font-size: var(--chakra-font-sizes-sm);
    padding-inline: var(--chakra-spacing-4);
    gap: var(--chakra-spacing-2);
    background: var(--chakra-colors-color-palette-solid);
    --bg-currentcolor: var(--chakra-colors-color-palette-solid);
    color: var(--chakra-colors-color-palette-contrast);
  }

  .emotion-5:is(:focus-visible, [data-focus-visible]) {
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    outline-style: var(--focus-ring-style, solid);
    outline-color: var(--focus-ring-color);
  }

  .emotion-5:is(:disabled, [disabled], [data-disabled], [aria-disabled=true]) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .emotion-5 :where(svg) {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    width: var(--chakra-sizes-5);
    height: var(--chakra-sizes-5);
  }

  .emotion-5:is([aria-expanded=true], [data-expanded], [data-state=expanded]) {
    --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
    background: var(--mix-background, var(--chakra-colors-color-palette-solid));
    --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
  }

  @media (hover: hover) {
    .emotion-5:is(:hover, [data-hover]):not(:disabled, [data-disabled]) {
      --mix-background: color-mix(in srgb, var(--chakra-colors-color-palette-solid) 90%, transparent);
      background: var(--mix-background, var(--chakra-colors-color-palette-solid));
      --bg-currentcolor: var(--mix-background, var(--chakra-colors-color-palette-solid));
    }
  }
}

<div
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="rjsf-field rjsf-field-string"
  >
    <fieldset
      aria-labelledby="fieldset:::r3d:::legend"
      className="fieldset__root emotion-0"
      data-part="root"
      data-scope="fieldset"
      disabled={false}
    >
      <div
        className="fieldset__content emotion-1"
      >
        <div
          className="chakra-field__root emotion-2"
          data-part="root"
          data-scope="field"
          id="field:::r3e:"
          role="group"
        >
          <input
            aria-describedby="root__error root__description root__help"
            autoFocus={false}
            className="chakra-input emotion-3"
            data-part="input"
            data-scope="field"
            disabled={false}
            id="root"
            name="root"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            required={false}
            type="text"
            value=""
          />
        </div>
      </div>
    </fieldset>
  </div>
  <div
    className="emotion-4"
  >
    <button
      className="chakra-button emotion-5"
      disabled={false}
      type="submit"
    >
      Submit
    </button>
  </div>
</div>
`;
