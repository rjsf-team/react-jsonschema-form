// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`array fields array 1`] = `
.emotion-2 {
  display: grid;
}

.emotion-4 {
  justify-self: flex-end;
}

.emotion-5 {
  margin-top: 2px;
}

.emotion-6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  position: relative;
  white-space: nowrap;
  vertical-align: middle;
  outline: 2px solid transparent;
  outline-offset: 2px;
  width: auto;
}

.emotion-7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-margin-end: 0.5rem;
  margin-inline-end: 0.5rem;
}

.emotion-8 {
  width: 1em;
  height: 1em;
  display: inline-block;
  line-height: 1em;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  color: currentColor;
  vertical-align: middle;
}

.emotion-9 {
  margin-top: 3px;
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="chakra-form-control emotion-0"
    role="group"
  >
    <div
      className="emotion-0"
    >
      <div
        className="emotion-2"
      >
        <div
          className="emotion-0"
        />
        <div
          className="emotion-4"
        >
          <div
            className="emotion-5"
          >
            <button
              className="chakra-button array-item-add emotion-6"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              <span
                className="chakra-button__icon emotion-7"
              >
                <svg
                  aria-hidden={true}
                  className="chakra-icon emotion-8"
                  focusable={false}
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M0,12a1.5,1.5,0,0,0,1.5,1.5h8.75a.25.25,0,0,1,.25.25V22.5a1.5,1.5,0,0,0,3,0V13.75a.25.25,0,0,1,.25-.25H22.5a1.5,1.5,0,0,0,0-3H13.75a.25.25,0,0,1-.25-.25V1.5a1.5,1.5,0,0,0-3,0v8.75a.25.25,0,0,1-.25.25H1.5A1.5,1.5,0,0,0,0,12Z"
                    fill="currentColor"
                  />
                </svg>
              </span>
              Add Item
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="emotion-9"
  >
    <button
      className="chakra-button emotion-6"
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`array fields checkboxes 1`] = `
.emotion-1 {
  margin-bottom: 1px;
}

.emotion-2 {
  position: relative;
  pointer-events: auto;
}

.emotion-3 {
  z-index: 9999;
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  width: 1px;
  position: absolute;
  overflow: hidden;
  padding: 0;
  white-space: nowrap;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 0px;
  overflow: hidden;
  height: auto;
  min-height: 10px;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding: 0.125rem 1rem;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-overflow-scrolling: touch;
  position: relative;
  overflow: hidden;
}

.emotion-7 {
  color: gray.400;
  -webkit-margin-start: 0.125rem;
  margin-inline-start: 0.125rem;
  -webkit-margin-end: 0.125rem;
  margin-inline-end: 0.125rem;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.emotion-8 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  display: inline-grid;
  grid-area: 1/1/2/3;
  grid-template-columns: 0 min-content;
  color: inherit;
}

.emotion-8::after {
  content: attr(data-value) " ";
  visibility: hidden;
  white-space: pre;
  padding: 0px;
  grid-area: 1/2;
  font: inherit;
  min-width: 2px;
  border: 0;
  margin: 0px;
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.emotion-9 {
  color: inherit;
  background: 0;
  opacity: 1;
  width: 100%;
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
  grid-area: 1/2;
  font: inherit;
  min-width: 2px;
  border: 0;
  margin: 0px;
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.emotion-10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-11 {
  border: 0;
  border-left-width: 1px;
  height: 100%;
  opacity: 1;
}

.emotion-12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  height: 100%;
  border-radius: 0px;
  border-width: 0;
  cursor: pointer;
}

.emotion-13 {
  width: 5px;
  height: 5px;
  display: inline-block;
  line-height: 1em;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  color: currentColor;
  vertical-align: middle;
}

.emotion-14 {
  margin-top: 3px;
}

.emotion-15 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  position: relative;
  white-space: nowrap;
  vertical-align: middle;
  outline: 2px solid transparent;
  outline-offset: 2px;
  width: auto;
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="chakra-form-control emotion-0"
    role="group"
  >
    <div
      className="chakra-form-control emotion-1"
      role="group"
    >
      <div
        className=" emotion-2"
        onKeyDown={[Function]}
      >
        <span
          className="emotion-3"
          id="react-select-2-live-region"
        />
        <span
          aria-atomic="false"
          aria-live="polite"
          aria-relevant="additions text"
          className="emotion-3"
        />
        <div
          className=" emotion-5"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <div
            className=" emotion-6"
          >
            <div
              className=" emotion-7"
              id="react-select-2-placeholder"
            >
              Select...
            </div>
            <div
              className=" emotion-8"
              data-value=""
            >
              <input
                aria-autocomplete="list"
                aria-controls="react-select-2-listbox"
                aria-describedby="react-select-2-placeholder"
                aria-expanded={false}
                aria-haspopup={true}
                aria-owns="react-select-2-listbox"
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className=" emotion-9"
                disabled={false}
                id="root"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                role="combobox"
                spellCheck="false"
                tabIndex={0}
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            className=" emotion-10"
          >
            <hr
              aria-orientation="vertical"
              className="chakra-divider emotion-11"
            />
            <div
              aria-hidden="true"
              className=" emotion-12"
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                className="chakra-icon emotion-13"
                focusable={false}
                viewBox="0 0 24 24"
              >
                <path
                  d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                  fill="currentColor"
                />
              </svg>
            </div>
          </div>
        </div>
        <div>
          <input
            name="root"
            type="hidden"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="emotion-14"
  >
    <button
      className="chakra-button emotion-15"
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`array fields fixed array 1`] = `
.emotion-2 {
  display: grid;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  padding-top: 1px;
  padding-bottom: 1px;
}

.emotion-4>*:not(style)~*:not(style) {
  margin-top: 0px;
  -webkit-margin-end: 0px;
  margin-inline-end: 0px;
  margin-bottom: 0px;
  -webkit-margin-start: 0.5rem;
  margin-inline-start: 0.5rem;
}

.emotion-5 {
  width: 100%;
}

.emotion-7 {
  margin-bottom: 1px;
}

.emotion-14 {
  margin-top: 3px;
}

.emotion-15 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  position: relative;
  white-space: nowrap;
  vertical-align: middle;
  outline: 2px solid transparent;
  outline-offset: 2px;
  width: auto;
}

<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="chakra-form-control emotion-0"
    role="group"
  >
    <div
      className="emotion-0"
    >
      <div
        className="emotion-2"
      >
        <div
          className="emotion-0"
        >
          <div
            className="chakra-stack emotion-4"
          >
            <div
              className="emotion-5"
            >
              <div
                className="chakra-form-control emotion-0"
                role="group"
              >
                <div
                  className="chakra-form-control emotion-7"
                  role="group"
                >
                  <input
                    aria-required={true}
                    autoFocus={false}
                    className="chakra-input emotion-0"
                    disabled={false}
                    id="root_0"
                    name="root_0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder=""
                    readOnly={false}
                    required={true}
                    type="text"
                    value=""
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            className="chakra-stack emotion-4"
          >
            <div
              className="emotion-5"
            >
              <div
                className="chakra-form-control emotion-0"
                role="group"
              >
                <div
                  className="chakra-form-control emotion-7"
                  role="group"
                >
                  <input
                    aria-required={true}
                    autoFocus={false}
                    className="chakra-input emotion-0"
                    disabled={false}
                    id="root_1"
                    name="root_1"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder=""
                    readOnly={false}
                    required={true}
                    type="number"
                    value=""
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="emotion-14"
  >
    <button
      className="chakra-button emotion-15"
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;
