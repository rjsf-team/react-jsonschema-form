// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`single fields null field 1`] = `
<form
  className="ui form rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="grouped equal width fields"
  />
  <button
    className="ui primary button"
    onClick={[Function]}
    type="submit"
  >
    Submit
  </button>
</form>
`;

exports[`single fields number field 1`] = `
<form
  className="ui form rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="grouped equal width fields"
  >
    <div
      className="field"
    >
      <div
        className="ui fluid input"
      >
        <input
          aria-describedby={null}
          autoFocus={false}
          disabled={false}
          id="root"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder=""
          type="number"
          value=""
        />
      </div>
    </div>
  </div>
  <button
    className="ui primary button"
    onClick={[Function]}
    type="submit"
  >
    Submit
  </button>
</form>
`;

exports[`single fields string field format data-url 1`] = `
<form
  className="ui form rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="grouped equal width fields"
  >
    <div>
      <p>
        <input
          autoFocus={false}
          defaultValue=""
          disabled={false}
          id="root"
          onChange={[Function]}
          type="file"
        />
      </p>
    </div>
  </div>
  <button
    className="ui primary button"
    onClick={[Function]}
    type="submit"
  >
    Submit
  </button>
</form>
`;

exports[`single fields string field format email 1`] = `
<form
  className="ui form rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="grouped equal width fields"
  >
    <div
      className="field"
    >
      <div
        className="ui fluid input"
      >
        <input
          aria-describedby={null}
          autoFocus={false}
          disabled={false}
          id="root"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="email"
          value=""
        />
      </div>
    </div>
  </div>
  <button
    className="ui primary button"
    onClick={[Function]}
    type="submit"
  >
    Submit
  </button>
</form>
`;

exports[`single fields string field format uri 1`] = `
<form
  className="ui form rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="grouped equal width fields"
  >
    <div
      className="field"
    >
      <div
        className="ui fluid input"
      >
        <input
          aria-describedby={null}
          autoFocus={false}
          disabled={false}
          id="root"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="url"
          value=""
        />
      </div>
    </div>
  </div>
  <button
    className="ui primary button"
    onClick={[Function]}
    type="submit"
  >
    Submit
  </button>
</form>
`;

exports[`single fields string field regular 1`] = `
<form
  className="ui form rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="grouped equal width fields"
  >
    <div
      className="field"
    >
      <div
        className="ui fluid input"
      >
        <input
          aria-describedby={null}
          autoFocus={false}
          disabled={false}
          id="root"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder=""
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
  <button
    className="ui primary button"
    onClick={[Function]}
    type="submit"
  >
    Submit
  </button>
</form>
`;

exports[`single fields testing with tagName 1`] = `
<div
  className="ui form rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="grouped equal width fields"
  >
    <div
      className="field"
    >
      <div
        className="ui fluid input"
      >
        <input
          aria-describedby={null}
          autoFocus={false}
          disabled={false}
          id="root"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder=""
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
  <button
    className="ui primary button"
    onClick={[Function]}
    type="submit"
  >
    Submit
  </button>
</div>
`;

exports[`single fields uiSchema theme props 1`] = `
<form
  className="ui form rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="grouped equal width fields"
  >
    <h5
      className="ui dividing header"
    >
      A registration form
    </h5>
    <p
      className="sui-description"
    >
      A simple test theme form example.
    </p>
    <div
      className="grouped equal width fields"
    >
      <div
        className="required field"
      >
        <label>
          test
        </label>
        <div
          aria-describedby={null}
          aria-disabled={false}
          aria-expanded={false}
          aria-multiselectable={false}
          autoFocus={false}
          className="ui fluid selection scrolling dropdown"
          inverted="false"
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          readOnly={false}
          required={true}
          role="listbox"
          tabIndex={0}
        >
          <div
            aria-atomic={true}
            aria-live="polite"
            className="divider text"
            role="alert"
          >
            
          </div>
          <i
            aria-hidden="true"
            className="dropdown icon"
            onClick={[Function]}
          />
          <div
            className="menu transition"
          >
            <div
              aria-checked={false}
              aria-disabled={false}
              aria-selected={true}
              className="selected item"
              onClick={[Function]}
              role="option"
              style={
                Object {
                  "pointerEvents": "all",
                }
              }
            >
              <span
                className="text"
              >
                1
              </span>
            </div>
            <div
              aria-checked={false}
              aria-disabled={false}
              aria-selected={false}
              className="item"
              onClick={[Function]}
              role="option"
              style={
                Object {
                  "pointerEvents": "all",
                }
              }
            >
              <span
                className="text"
              >
                2
              </span>
            </div>
            <div
              aria-checked={false}
              aria-disabled={false}
              aria-selected={false}
              className="item"
              onClick={[Function]}
              role="option"
              style={
                Object {
                  "pointerEvents": "all",
                }
              }
            >
              <span
                className="text"
              >
                3
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    className="ui primary button"
    onClick={[Function]}
    type="submit"
  >
    Submit
  </button>
</form>
`;

exports[`single fields unsupported field 1`] = `
<form
  className="ui form rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="grouped equal width fields"
  >
    <div
      className="unsupported-field"
    >
      <p>
        Unsupported field schema
        <span>
           for
           field 
          <code>
            root
          </code>
        </span>
        <em>
          : 
          Unknown field type undefined
        </em>
        .
      </p>
      <pre>
        {}
      </pre>
    </div>
  </div>
  <button
    className="ui primary button"
    onClick={[Function]}
    type="submit"
  >
    Submit
  </button>
</form>
`;
